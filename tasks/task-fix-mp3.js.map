{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///external \"fs-extra\"","webpack:///./src/modules/audio/tasks/task-fix-mp3.ts","webpack:///external \"worker_threads\"","webpack:///./src/modules/audio/tools/mp3val.ts","webpack:///./src/utils/tool.ts","webpack:///external \"child_process\"","webpack:///./src/utils/which.ts","webpack:///external \"path\"","webpack:///external \"which\""],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","require","parentPort","on","param","Error","filename","backupFile","pathExists","copy","mp3val","fixMP3","postMessage","undefined","parseMP3ValWarning","data","offset","indexOf","slice","trim","msg","fix","cmds","push","result","spawnTool","errMsg","Promise","reject","lines","split","fixed","warnings","line","startsWith","parseMP3ValResult","binName","envName","args","bin","getBinPath","length","resolve","child","spawn","stdout","stderr","toString","code","JSON","parse","isWindows","includes","process","platform","cache","env","environment","e","err","resolvedPath","whichAsync","join","arch","localBin"],"mappings":"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","file":"task-fix-mp3.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n","module.exports = require(\"fs-extra\");","import fse from 'fs-extra';\nimport {parentPort} from 'worker_threads';\nimport {mp3val} from '../tools/mp3val';\n\nasync function fixMP3(filename: string): Promise<void> {\n\tconst backupFile = `${filename}.bak`;\n\tconst exits = await fse.pathExists(backupFile);\n\tif (!exits) {\n\t\tawait fse.copy(filename, backupFile);\n\t}\n\tawait mp3val(filename, true);\n}\n\nif (parentPort) {\n\tparentPort.on('message', async (param: any) => {\n\t\tif (typeof param !== 'string') {\n\t\t\tthrow new Error('param must be a string.');\n\t\t}\n\t\tawait fixMP3(param);\n\t\tif (parentPort) {\n\t\t\tparentPort.postMessage(undefined);\n\t\t}\n\t});\n}\n","module.exports = require(\"worker_threads\");","import {spawnTool} from '../../../utils/tool';\n\nexport interface MP3ValWarning {\n\toffset?: string;\n\tmsg: string;\n}\n\nexport interface MP3ValResult {\n\tfixed: boolean;\n\twarnings: Array<MP3ValWarning>;\n}\n\n/* example output\n Analyzing file \"filename\"...\n INFO: \"filename\": 12830 MPEG frames (MPEG 1 Layer III), +ID3v1+ID3v2, CBR\n WARNING: \"filename\" (offset 0x2b9411): MPEG stream error, resynchronized successfully\n WARNING: \"filename\": Wrong number of MPEG frames specified in Xing header (8265 instead of 8262)\n WARNING: \"filename\": Wrong number of MPEG data bytes specified in Xing header (4550632 instead of 4548544)\n FIXED: \"filename\": File was rebuilt\n Done!\n **/\n\nfunction parseMP3ValWarning(data: string): MP3ValWarning {\n\tlet s = data;\n\tlet i = s.indexOf('\"');\n\ts = s.slice(i);\n\ti = s.indexOf('\"');\n\ts = s.slice(i).trim();\n\tlet offset: string | undefined;\n\tif (s[0] === '(') {\n\t\ti = s.indexOf(')');\n\t\toffset = s.slice(1, i - 1);\n\t}\n\ti = s.indexOf(':');\n\ts = s.slice(i).trim();\n\treturn {offset, msg: s};\n}\n\nfunction parseMP3ValResult(data: string): MP3ValResult {\n\tconst lines = data.split('\\n');\n\tconst result: MP3ValResult = {fixed: false, warnings: []};\n\tfor (const line of lines) {\n\t\tif (line.startsWith('WARNING:')) {\n\t\t\tresult.warnings.push(parseMP3ValWarning(line));\n\t\t} else if (line.startsWith('FIXED')) {\n\t\t\tresult.fixed = true;\n\t\t}\n\t}\n\treturn result;\n}\n\nexport async function mp3val(filename: string, fix: boolean): Promise<MP3ValResult> {\n\tconst cmds = ['-si'];\n\tif (fix) {\n\t\tcmds.push('-f');\n\t}\n\tconst result = await spawnTool('mp3val', 'MP3VAL_PATH', [...cmds, filename]);\n\tif (result.errMsg) {\n\t\treturn Promise.reject(Error(result.errMsg));\n\t}\n\treturn parseMP3ValResult(result.result);\n}\n","import {spawn} from 'child_process';\nimport {getBinPath} from './which';\n\n// export async function spawnToolStream(binName: string, envName: string, args: Array<string>, onData: (buffer: Buffer) => void): Promise<string> {\n// \tconst bin = await getBinPath(binName, envName);\n// \tif (!bin || bin.length === 0) {\n// \t\treturn Promise.reject(Error('Tool binary not found ' + binName));\n// \t}\n// \treturn new Promise<string>((resolve, reject) => {\n// \t\tconst child = spawn(bin, args);\n// \t\tlet stderr = '';\n// \t\tchild.stdout.on('data', (data: Buffer) => {\n// \t\t\tonData(data);\n// \t\t});\n// \t\tchild.stderr.on('data', (data: Buffer) => {\n// \t\t\tstderr += data.toString();\n// \t\t});\n// \t\tchild.on('close', (code: number) => {\n// \t\t\tresolve(stderr);\n// \t\t});\n// \t});\n// }\n\nexport async function spawnTool(binName: string, envName: string, args: Array<string>): Promise<{ result: string; errMsg: string }> {\n\tconst bin = await getBinPath(binName, envName);\n\tif (!bin || bin.length === 0) {\n\t\treturn Promise.reject(Error(`Tool binary not found ${binName}`));\n\t}\n\treturn new Promise<{ result: string; errMsg: string }>((resolve, reject) => {\n\t\tconst child = spawn(bin, args);\n\t\tif (!child.stdout || !child.stderr) {\n\t\t\treturn reject(Error('Unsupported std out'));\n\t\t}\n\t\tlet result = '';\n\t\tlet errMsg = '';\n\t\tchild.stdout.on('data', (data: Buffer) => {\n\t\t\tresult += data.toString();\n\t\t});\n\t\tchild.stderr.on('data', (data: Buffer) => {\n\t\t\terrMsg += data.toString();\n\t\t});\n\t\tchild.on('close', (code: number) => {\n\t\t\tresolve({result, errMsg});\n\t\t});\n\t});\n}\n\nexport async function spawnToolJson<T>(binName: string, envName: string, args: Array<string>): Promise<T> {\n\tconst data = await spawnTool(binName, envName, args);\n\treturn JSON.parse(data.result);\n}\n","module.exports = require(\"child_process\");","import fse from 'fs-extra';\nimport path from 'path';\nimport which from 'which';\n\nexport const isWindows =  ['win32', 'cygwin', 'msys'].includes(process.platform);\n\nconst cache: { [name: string]: string } = {};\n\nasync function whichAsync(name: string): Promise<string> {\n\treturn new Promise<string>((resolve, reject) => {\n\t\twhich(name, (err, resolvedPath) => {\n\t\t\tif (err) {\n\t\t\t\treject(err);\n\t\t\t} else {\n\t\t\t\tresolve(resolvedPath);\n\t\t\t}\n\t\t});\n\t});\n}\n\nasync function localBin(name: string): Promise<string | undefined> {\n\tconst s = path.join('.', 'bin', 'tools', name, process.platform, process.arch, name) + (isWindows ? '.exe' : '');\n\tconst exists = await fse.pathExists(s);\n\tif (exists) {\n\t\treturn s;\n\t}\n}\n\nasync function environment(envName: string): Promise<string | undefined> {\n\tconst s = process.env[envName];\n\tif (s && s.length > 0) {\n\t\tconst exists = await fse.pathExists(s);\n\t\tif (exists) {\n\t\t\treturn s;\n\t\t}\n\t}\n}\n\nexport async function getBinPath(name: string, envName: string): Promise<string | undefined> {\n\tif (name in cache) {\n\t\treturn cache[name];\n\t}\n\ttry {\n\t\t// Try envName\n\t\tconst s = await environment(envName);\n\t\tif (s && s.length > 0) {\n\t\t\tcache[name] = s;\n\t\t\treturn s;\n\t\t}\n\t} catch (e) {\n\t\t// nop\n\t}\n\ttry {\n\t\t// Search in the PATH\n\t\tconst s = await whichAsync(name);\n\t\tif (s && s.length > 0) {\n\t\t\tcache[name] = s;\n\t\t\treturn s;\n\t\t}\n\t} catch (e) {\n\t\t// nop\n\t}\n\ttry {\n\t\t// Search in the PATH\n\t\tconst s = await localBin(name);\n\t\tif (s && s.length > 0) {\n\t\t\tcache[name] = s;\n\t\t\treturn s;\n\t\t}\n\t} catch (e) {\n\t\t// nop\n\t}\n}\n","module.exports = require(\"path\");","module.exports = require(\"which\");"],"sourceRoot":""}