name: test

on:
  push:
    branches: [ disabled ]

jobs:

  build:
    name: Test
    runs-on: ubuntu-latest
    container:
      image: ffalt/jam-base
    env:
      JAM_DB_HOST: postgres
      NODE_ENV: development
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-modules-build-${{ hashFiles('**/package-lock.json') }}
      - run: npm install
      - name: Test & publish code coverage
        uses: paambaati/codeclimate-action@v2.6.0
        env:
          CC_TEST_REPORTER_ID: ${{ secrets.CC_TEST_REPORTER_ID }}
        with:
          coverageCommand: npm run coverage
          coverageLocations: ${{github.workspace}}/coverage/lcov.info:lcov
          debug: true
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_DB: jamtest
          POSTGRES_USER: test
          POSTGRES_PASSWORD: test
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

  release:
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v2

      - name: Check if version has been updated
        id: check
        uses: EndBug/version-check@v1
        with:
          diff-search: true
          file-name: package.json
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Log when changed
        if: steps.check.outputs.changed == 'true'
        run: 'echo "Version change found in commit ${{ steps.check.outputs.commit }}! New version: ${{ steps.check.outputs.version }} (${{ steps.check.outputs.type }})"'

      - name: Log when unchanged
        if: steps.check.outputs.changed != 'true'
        run: 'echo "No version change :/"'

      - name: Install Node.js
        if: steps.check.outputs.changed == 'true'
        uses: actions/setup-node@v1
        with:
          node-version: 14.x

      - name: Look for NPM Cache
        if: steps.check.outputs.changed == 'true'
        uses: actions/cache@v2
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-modules-release-${{ hashFiles('**/package-lock.json') }}

      - name: Install and Build
        if: steps.check.outputs.changed == 'true'
        run: |
          npm install
          npm run build:deploy

      - name: Deploy to Release Branch ðŸš€
        if: steps.check.outputs.changed == 'true'
        uses: JamesIves/github-pages-deploy-action@releases/v3
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          BRANCH: release # The branch the action should deploy to.
          FOLDER: deploy # The folder the action should deploy.
          CLEAN: true

      - name: Build Changelog message
        id: changelog
        uses: scottbrenner/generate-changelog-action@master
        env:
          REPO: ${{ github.repository }}

      - name: Create Release Tag
        if: steps.check.outputs.changed == 'true'
        uses: actions/create-release@v1
        with:
          commitish: "release"
          tag_name: "v${{ steps.check.outputs.version }}"
          release_name: "Release v${{ steps.check.outputs.version }}"
          body: |
            ${{ steps.changelog.outputs.changelog }}
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
