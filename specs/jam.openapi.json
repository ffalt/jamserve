{
	"openapi": "3.0.0",
	"info": {
		"description": "Api for JamServe",
		"version": "0.2.0",
		"title": "JamApi",
		"license": {
			"name": "MIT",
			"url": "https://raw.githubusercontent.com/ffalt/jamserve/main/LICENSE"
		}
	},
	"servers": [
		{
			"url": "http://localhost:4040/jam/{version}",
			"description": "A local JamServe API",
			"variables": {
				"version": {
					"enum": [
						"v1"
					],
					"default": "v1"
				}
			}
		}
	],
	"tags": [],
	"paths": {
		"/admin/settings/get": {
			"get": {
				"operationId": "AdminController.settings",
				"summary": "Get Settings",
				"description": "Get the Server Admin Settings",
				"tags": [
					"Administration"
				],
				"parameters": [],
				"responses": {
					"200": {
						"description": "json data",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/AdminSettings"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					}
				},
				"security": [
					{
						"cookieAuth": [
							"admin"
						]
					},
					{
						"bearerAuth": [
							"admin"
						]
					}
				]
			}
		},
		"/admin/queue/id": {
			"get": {
				"operationId": "AdminController.queueId",
				"summary": "Get Queue Info",
				"description": "Get Queue Information for Admin Change Tasks",
				"tags": [
					"Administration"
				],
				"parameters": [
					{
						"in": "query",
						"name": "id",
						"description": "Queue Task Id",
						"required": true,
						"example": "c0ffeec0-ffee-c0ff-eec0-ffeec0ffeec0",
						"schema": {
							"$ref": "#/components/schemas/ID"
						}
					}
				],
				"responses": {
					"200": {
						"description": "json data",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/AdminChangeQueueInfo"
								}
							}
						}
					},
					"400": {
						"description": "Missing parameter"
					},
					"401": {
						"description": "Unauthorized"
					},
					"404": {
						"description": "Item not found"
					},
					"422": {
						"description": "Invalid parameter"
					}
				},
				"security": [
					{
						"cookieAuth": [
							"admin"
						]
					},
					{
						"bearerAuth": [
							"admin"
						]
					}
				]
			}
		},
		"/admin/settings/update": {
			"post": {
				"operationId": "AdminController.settingsUpdate",
				"summary": "Set Settings",
				"description": "Update the Server Admin Settings",
				"tags": [
					"Administration"
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/AdminSettingsArgs"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "ok"
					},
					"401": {
						"description": "Unauthorized"
					}
				},
				"security": [
					{
						"cookieAuth": [
							"admin"
						]
					},
					{
						"bearerAuth": [
							"admin"
						]
					}
				]
			}
		},
		"/album/id": {
			"get": {
				"operationId": "AlbumController.id",
				"summary": "Get Album",
				"description": "Get an Album by Id",
				"tags": [
					"Album"
				],
				"parameters": [
					{
						"in": "query",
						"name": "artistIncAlbumIDs",
						"description": "include album ids on artist(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include album ids on artist(s)"
						}
					},
					{
						"in": "query",
						"name": "artistIncAlbumCount",
						"description": "include album count on artist(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include album count on artist(s)"
						}
					},
					{
						"in": "query",
						"name": "artistIncState",
						"description": "include user states (fav,rate) on artist(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include user states (fav,rate) on artist(s)"
						}
					},
					{
						"in": "query",
						"name": "artistIncTrackIDs",
						"description": "include track ids on artist(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include track ids on artist(s)"
						}
					},
					{
						"in": "query",
						"name": "artistIncTrackCount",
						"description": "include track count on artist(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include track count on artist(s)"
						}
					},
					{
						"in": "query",
						"name": "artistIncSeriesIDs",
						"description": "include series ids on artist(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include series ids on artist(s)"
						}
					},
					{
						"in": "query",
						"name": "artistIncSeriesCount",
						"description": "include series count on artist(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include series count on artist(s)"
						}
					},
					{
						"in": "query",
						"name": "artistIncInfo",
						"description": "include extended meta data on artist(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include extended meta data on artist(s)"
						}
					},
					{
						"in": "query",
						"name": "trackIncMedia",
						"description": "include media information on track(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include media information on track(s)"
						}
					},
					{
						"in": "query",
						"name": "trackIncTag",
						"description": "include tag on track(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include tag on track(s)"
						}
					},
					{
						"in": "query",
						"name": "trackIncRawTag",
						"description": "include raw tag on track(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include raw tag on track(s)"
						}
					},
					{
						"in": "query",
						"name": "trackIncState",
						"description": "include user states (fav,rate) on track(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include user states (fav,rate) on track(s)"
						}
					},
					{
						"in": "query",
						"name": "albumIncTracks",
						"description": "include tracks on album(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include tracks on album(s)"
						}
					},
					{
						"in": "query",
						"name": "albumIncArtist",
						"description": "include artist on album(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include artist on album(s)"
						}
					},
					{
						"in": "query",
						"name": "albumIncTrackIDs",
						"description": "include track ids on album(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include track ids on album(s)"
						}
					},
					{
						"in": "query",
						"name": "albumIncTrackCount",
						"description": "include track count on album(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include track count on album(s)"
						}
					},
					{
						"in": "query",
						"name": "albumIncState",
						"description": "include user states (fav,rate) on album(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include user states (fav,rate) on album(s)"
						}
					},
					{
						"in": "query",
						"name": "albumIncInfo",
						"description": "include extended meta data on album(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include extended meta data on album(s)"
						}
					},
					{
						"in": "query",
						"name": "id",
						"description": "Album Id",
						"required": true,
						"example": "c0ffeec0-ffee-c0ff-eec0-ffeec0ffeec0",
						"schema": {
							"$ref": "#/components/schemas/ID"
						}
					}
				],
				"responses": {
					"200": {
						"description": "json data",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Album"
								}
							}
						}
					},
					"400": {
						"description": "Missing parameter"
					},
					"401": {
						"description": "Unauthorized"
					},
					"404": {
						"description": "Item not found"
					},
					"422": {
						"description": "Invalid parameter"
					}
				},
				"security": [
					{
						"cookieAuth": [
							"stream"
						]
					},
					{
						"bearerAuth": [
							"stream"
						]
					}
				]
			}
		},
		"/album/index": {
			"get": {
				"operationId": "AlbumController.index",
				"summary": "Get Index",
				"description": "Get the Navigation Index for Albums",
				"tags": [
					"Album"
				],
				"parameters": [
					{
						"in": "query",
						"name": "query",
						"description": "filter by Search Query",
						"required": false,
						"example": "balkan",
						"schema": {
							"type": "string",
							"description": "filter by Search Query"
						}
					},
					{
						"in": "query",
						"name": "name",
						"description": "filter by Album Name",
						"required": false,
						"example": "Balkan Beat Box",
						"schema": {
							"type": "string",
							"description": "filter by Album Name"
						}
					},
					{
						"in": "query",
						"name": "slug",
						"description": "filter by Album Slug",
						"required": false,
						"example": "balkanbeatbox",
						"schema": {
							"type": "string",
							"description": "filter by Album Slug"
						}
					},
					{
						"in": "query",
						"name": "artist",
						"description": "filter by Artist Name",
						"required": false,
						"example": "Balkan Beat Box",
						"schema": {
							"type": "string",
							"description": "filter by Artist Name"
						}
					},
					{
						"in": "query",
						"name": "ids",
						"description": "filter by Album Ids",
						"required": false,
						"example": "c0ffeec0-ffee-c0ff-eec0-ffeec0ffeec0",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/components/schemas/ID"
							}
						}
					},
					{
						"in": "query",
						"name": "rootIDs",
						"description": "filter by Root Ids",
						"required": false,
						"example": "c0ffeec0-ffee-c0ff-eec0-ffeec0ffeec0",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/components/schemas/ID"
							}
						}
					},
					{
						"in": "query",
						"name": "artistIDs",
						"description": "filter by Artist Ids",
						"required": false,
						"example": "c0ffeec0-ffee-c0ff-eec0-ffeec0ffeec0",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/components/schemas/ID"
							}
						}
					},
					{
						"in": "query",
						"name": "trackIDs",
						"description": "filter by Track Ids",
						"required": false,
						"example": "c0ffeec0-ffee-c0ff-eec0-ffeec0ffeec0",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/components/schemas/ID"
							}
						}
					},
					{
						"in": "query",
						"name": "folderIDs",
						"description": "filter by Folder Ids",
						"required": false,
						"example": "c0ffeec0-ffee-c0ff-eec0-ffeec0ffeec0",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/components/schemas/ID"
							}
						}
					},
					{
						"in": "query",
						"name": "seriesIDs",
						"description": "filter by Series Ids",
						"required": false,
						"example": "c0ffeec0-ffee-c0ff-eec0-ffeec0ffeec0",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/components/schemas/ID"
							}
						}
					},
					{
						"in": "query",
						"name": "albumTypes",
						"description": "filter by Album Types",
						"required": false,
						"example": [
							"audiobook"
						],
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/components/schemas/AlbumType"
							}
						}
					},
					{
						"in": "query",
						"name": "mbReleaseIDs",
						"description": "filter by MusicBrainz Release Ids",
						"required": false,
						"example": [
							"d5b1d8ab-9a76-4c31-9b51-1049841b8c7e"
						],
						"schema": {
							"type": "array",
							"items": {
								"type": "string",
								"description": "filter by MusicBrainz Release Ids"
							}
						}
					},
					{
						"in": "query",
						"name": "mbArtistIDs",
						"description": "filter by MusicBrainz Artist Ids",
						"required": false,
						"example": [
							"b15ebd71-a252-417d-9e1c-3e6863da68f8"
						],
						"schema": {
							"type": "array",
							"items": {
								"type": "string",
								"description": "filter by MusicBrainz Artist Ids"
							}
						}
					},
					{
						"in": "query",
						"name": "notMbArtistID",
						"description": "exclude by MusicBrainz Artist Id",
						"required": false,
						"example": "b15ebd71-a252-417d-9e1c-3e6863da68f8",
						"schema": {
							"type": "string",
							"description": "exclude by MusicBrainz Artist Id"
						}
					},
					{
						"in": "query",
						"name": "genres",
						"description": "filter by Genres",
						"required": false,
						"example": [
							"Pop"
						],
						"schema": {
							"type": "array",
							"items": {
								"type": "string",
								"description": "filter by Genres"
							}
						}
					},
					{
						"in": "query",
						"name": "since",
						"description": "filter by Creation timestamp",
						"required": false,
						"example": "2000-12-31T23:00:00.000Z",
						"schema": {
							"type": "integer",
							"minimum": 0,
							"description": "filter by Creation timestamp"
						}
					},
					{
						"in": "query",
						"name": "fromYear",
						"description": "filter by since year",
						"required": false,
						"example": 2001,
						"schema": {
							"type": "integer",
							"minimum": 0,
							"description": "filter by since year"
						}
					},
					{
						"in": "query",
						"name": "toYear",
						"description": "filter by until year",
						"required": false,
						"example": 2001,
						"schema": {
							"type": "integer",
							"minimum": 0,
							"description": "filter by until year"
						}
					}
				],
				"responses": {
					"200": {
						"description": "json data",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/AlbumIndex"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"404": {
						"description": "Item not found"
					},
					"422": {
						"description": "Invalid parameter"
					}
				},
				"security": [
					{
						"cookieAuth": [
							"stream"
						]
					},
					{
						"bearerAuth": [
							"stream"
						]
					}
				]
			}
		},
		"/album/search": {
			"get": {
				"operationId": "AlbumController.search",
				"summary": "Search albums",
				"description": "Search albums",
				"tags": [
					"Album"
				],
				"parameters": [
					{
						"in": "query",
						"name": "list",
						"description": "filter by special list",
						"required": false,
						"example": "faved",
						"schema": {
							"$ref": "#/components/schemas/ListType"
						}
					},
					{
						"in": "query",
						"name": "orderDesc",
						"description": "order direction ascending or descending",
						"required": false,
						"example": true,
						"schema": {
							"type": "boolean",
							"description": "order direction ascending or descending"
						}
					},
					{
						"in": "query",
						"name": "orderBy",
						"description": "order by field",
						"required": false,
						"schema": {
							"$ref": "#/components/schemas/AlbumOrderFields"
						}
					},
					{
						"in": "query",
						"name": "query",
						"description": "filter by Search Query",
						"required": false,
						"example": "balkan",
						"schema": {
							"type": "string",
							"description": "filter by Search Query"
						}
					},
					{
						"in": "query",
						"name": "name",
						"description": "filter by Album Name",
						"required": false,
						"example": "Balkan Beat Box",
						"schema": {
							"type": "string",
							"description": "filter by Album Name"
						}
					},
					{
						"in": "query",
						"name": "slug",
						"description": "filter by Album Slug",
						"required": false,
						"example": "balkanbeatbox",
						"schema": {
							"type": "string",
							"description": "filter by Album Slug"
						}
					},
					{
						"in": "query",
						"name": "artist",
						"description": "filter by Artist Name",
						"required": false,
						"example": "Balkan Beat Box",
						"schema": {
							"type": "string",
							"description": "filter by Artist Name"
						}
					},
					{
						"in": "query",
						"name": "ids",
						"description": "filter by Album Ids",
						"required": false,
						"example": "c0ffeec0-ffee-c0ff-eec0-ffeec0ffeec0",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/components/schemas/ID"
							}
						}
					},
					{
						"in": "query",
						"name": "rootIDs",
						"description": "filter by Root Ids",
						"required": false,
						"example": "c0ffeec0-ffee-c0ff-eec0-ffeec0ffeec0",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/components/schemas/ID"
							}
						}
					},
					{
						"in": "query",
						"name": "artistIDs",
						"description": "filter by Artist Ids",
						"required": false,
						"example": "c0ffeec0-ffee-c0ff-eec0-ffeec0ffeec0",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/components/schemas/ID"
							}
						}
					},
					{
						"in": "query",
						"name": "trackIDs",
						"description": "filter by Track Ids",
						"required": false,
						"example": "c0ffeec0-ffee-c0ff-eec0-ffeec0ffeec0",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/components/schemas/ID"
							}
						}
					},
					{
						"in": "query",
						"name": "folderIDs",
						"description": "filter by Folder Ids",
						"required": false,
						"example": "c0ffeec0-ffee-c0ff-eec0-ffeec0ffeec0",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/components/schemas/ID"
							}
						}
					},
					{
						"in": "query",
						"name": "seriesIDs",
						"description": "filter by Series Ids",
						"required": false,
						"example": "c0ffeec0-ffee-c0ff-eec0-ffeec0ffeec0",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/components/schemas/ID"
							}
						}
					},
					{
						"in": "query",
						"name": "albumTypes",
						"description": "filter by Album Types",
						"required": false,
						"example": [
							"audiobook"
						],
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/components/schemas/AlbumType"
							}
						}
					},
					{
						"in": "query",
						"name": "mbReleaseIDs",
						"description": "filter by MusicBrainz Release Ids",
						"required": false,
						"example": [
							"d5b1d8ab-9a76-4c31-9b51-1049841b8c7e"
						],
						"schema": {
							"type": "array",
							"items": {
								"type": "string",
								"description": "filter by MusicBrainz Release Ids"
							}
						}
					},
					{
						"in": "query",
						"name": "mbArtistIDs",
						"description": "filter by MusicBrainz Artist Ids",
						"required": false,
						"example": [
							"b15ebd71-a252-417d-9e1c-3e6863da68f8"
						],
						"schema": {
							"type": "array",
							"items": {
								"type": "string",
								"description": "filter by MusicBrainz Artist Ids"
							}
						}
					},
					{
						"in": "query",
						"name": "notMbArtistID",
						"description": "exclude by MusicBrainz Artist Id",
						"required": false,
						"example": "b15ebd71-a252-417d-9e1c-3e6863da68f8",
						"schema": {
							"type": "string",
							"description": "exclude by MusicBrainz Artist Id"
						}
					},
					{
						"in": "query",
						"name": "genres",
						"description": "filter by Genres",
						"required": false,
						"example": [
							"Pop"
						],
						"schema": {
							"type": "array",
							"items": {
								"type": "string",
								"description": "filter by Genres"
							}
						}
					},
					{
						"in": "query",
						"name": "since",
						"description": "filter by Creation timestamp",
						"required": false,
						"example": "2000-12-31T23:00:00.000Z",
						"schema": {
							"type": "integer",
							"minimum": 0,
							"description": "filter by Creation timestamp"
						}
					},
					{
						"in": "query",
						"name": "fromYear",
						"description": "filter by since year",
						"required": false,
						"example": 2001,
						"schema": {
							"type": "integer",
							"minimum": 0,
							"description": "filter by since year"
						}
					},
					{
						"in": "query",
						"name": "toYear",
						"description": "filter by until year",
						"required": false,
						"example": 2001,
						"schema": {
							"type": "integer",
							"minimum": 0,
							"description": "filter by until year"
						}
					},
					{
						"in": "query",
						"name": "artistIncAlbumIDs",
						"description": "include album ids on artist(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include album ids on artist(s)"
						}
					},
					{
						"in": "query",
						"name": "artistIncAlbumCount",
						"description": "include album count on artist(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include album count on artist(s)"
						}
					},
					{
						"in": "query",
						"name": "artistIncState",
						"description": "include user states (fav,rate) on artist(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include user states (fav,rate) on artist(s)"
						}
					},
					{
						"in": "query",
						"name": "artistIncTrackIDs",
						"description": "include track ids on artist(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include track ids on artist(s)"
						}
					},
					{
						"in": "query",
						"name": "artistIncTrackCount",
						"description": "include track count on artist(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include track count on artist(s)"
						}
					},
					{
						"in": "query",
						"name": "artistIncSeriesIDs",
						"description": "include series ids on artist(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include series ids on artist(s)"
						}
					},
					{
						"in": "query",
						"name": "artistIncSeriesCount",
						"description": "include series count on artist(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include series count on artist(s)"
						}
					},
					{
						"in": "query",
						"name": "artistIncInfo",
						"description": "include extended meta data on artist(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include extended meta data on artist(s)"
						}
					},
					{
						"in": "query",
						"name": "trackIncMedia",
						"description": "include media information on track(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include media information on track(s)"
						}
					},
					{
						"in": "query",
						"name": "trackIncTag",
						"description": "include tag on track(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include tag on track(s)"
						}
					},
					{
						"in": "query",
						"name": "trackIncRawTag",
						"description": "include raw tag on track(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include raw tag on track(s)"
						}
					},
					{
						"in": "query",
						"name": "trackIncState",
						"description": "include user states (fav,rate) on track(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include user states (fav,rate) on track(s)"
						}
					},
					{
						"in": "query",
						"name": "albumIncTracks",
						"description": "include tracks on album(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include tracks on album(s)"
						}
					},
					{
						"in": "query",
						"name": "albumIncArtist",
						"description": "include artist on album(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include artist on album(s)"
						}
					},
					{
						"in": "query",
						"name": "albumIncTrackIDs",
						"description": "include track ids on album(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include track ids on album(s)"
						}
					},
					{
						"in": "query",
						"name": "albumIncTrackCount",
						"description": "include track count on album(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include track count on album(s)"
						}
					},
					{
						"in": "query",
						"name": "albumIncState",
						"description": "include user states (fav,rate) on album(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include user states (fav,rate) on album(s)"
						}
					},
					{
						"in": "query",
						"name": "albumIncInfo",
						"description": "include extended meta data on album(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include extended meta data on album(s)"
						}
					},
					{
						"in": "query",
						"name": "skip",
						"description": "return items starting from offset position",
						"required": false,
						"example": 0,
						"schema": {
							"type": "integer",
							"default": 0,
							"minimum": 0,
							"description": "return items starting from offset position"
						}
					},
					{
						"in": "query",
						"name": "take",
						"description": "amount of returned items",
						"required": false,
						"example": 25,
						"schema": {
							"type": "integer",
							"minimum": 1,
							"description": "amount of returned items"
						}
					}
				],
				"responses": {
					"200": {
						"description": "json data",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/AlbumPage"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"404": {
						"description": "Item not found"
					},
					"422": {
						"description": "Invalid parameter"
					}
				},
				"security": [
					{
						"cookieAuth": [
							"stream"
						]
					},
					{
						"bearerAuth": [
							"stream"
						]
					}
				]
			}
		},
		"/album/info": {
			"get": {
				"operationId": "AlbumController.info",
				"summary": "Get Info",
				"description": "Get Meta Data Info of an Album by Id (External Service)",
				"tags": [
					"Album"
				],
				"parameters": [
					{
						"in": "query",
						"name": "id",
						"description": "Album Id",
						"required": true,
						"example": "c0ffeec0-ffee-c0ff-eec0-ffeec0ffeec0",
						"schema": {
							"$ref": "#/components/schemas/ID"
						}
					}
				],
				"responses": {
					"200": {
						"description": "json data",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ExtendedInfoResult"
								}
							}
						}
					},
					"400": {
						"description": "Missing parameter"
					},
					"401": {
						"description": "Unauthorized"
					},
					"404": {
						"description": "Item not found"
					},
					"422": {
						"description": "Invalid parameter"
					}
				},
				"security": [
					{
						"cookieAuth": [
							"stream"
						]
					},
					{
						"bearerAuth": [
							"stream"
						]
					}
				]
			}
		},
		"/album/tracks": {
			"get": {
				"operationId": "AlbumController.tracks",
				"summary": "Get Tracks",
				"description": "Get Tracks of Albums",
				"tags": [
					"Album"
				],
				"parameters": [
					{
						"in": "query",
						"name": "orderDesc",
						"description": "order direction ascending or descending",
						"required": false,
						"example": true,
						"schema": {
							"type": "boolean",
							"description": "order direction ascending or descending"
						}
					},
					{
						"in": "query",
						"name": "orderBy",
						"description": "order by field",
						"required": false,
						"schema": {
							"$ref": "#/components/schemas/TrackOrderFields"
						}
					},
					{
						"in": "query",
						"name": "query",
						"description": "filter by Search Query",
						"required": false,
						"example": "balkan",
						"schema": {
							"type": "string",
							"description": "filter by Search Query"
						}
					},
					{
						"in": "query",
						"name": "name",
						"description": "filter by Album Name",
						"required": false,
						"example": "Balkan Beat Box",
						"schema": {
							"type": "string",
							"description": "filter by Album Name"
						}
					},
					{
						"in": "query",
						"name": "slug",
						"description": "filter by Album Slug",
						"required": false,
						"example": "balkanbeatbox",
						"schema": {
							"type": "string",
							"description": "filter by Album Slug"
						}
					},
					{
						"in": "query",
						"name": "artist",
						"description": "filter by Artist Name",
						"required": false,
						"example": "Balkan Beat Box",
						"schema": {
							"type": "string",
							"description": "filter by Artist Name"
						}
					},
					{
						"in": "query",
						"name": "ids",
						"description": "filter by Album Ids",
						"required": false,
						"example": "c0ffeec0-ffee-c0ff-eec0-ffeec0ffeec0",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/components/schemas/ID"
							}
						}
					},
					{
						"in": "query",
						"name": "rootIDs",
						"description": "filter by Root Ids",
						"required": false,
						"example": "c0ffeec0-ffee-c0ff-eec0-ffeec0ffeec0",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/components/schemas/ID"
							}
						}
					},
					{
						"in": "query",
						"name": "artistIDs",
						"description": "filter by Artist Ids",
						"required": false,
						"example": "c0ffeec0-ffee-c0ff-eec0-ffeec0ffeec0",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/components/schemas/ID"
							}
						}
					},
					{
						"in": "query",
						"name": "trackIDs",
						"description": "filter by Track Ids",
						"required": false,
						"example": "c0ffeec0-ffee-c0ff-eec0-ffeec0ffeec0",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/components/schemas/ID"
							}
						}
					},
					{
						"in": "query",
						"name": "folderIDs",
						"description": "filter by Folder Ids",
						"required": false,
						"example": "c0ffeec0-ffee-c0ff-eec0-ffeec0ffeec0",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/components/schemas/ID"
							}
						}
					},
					{
						"in": "query",
						"name": "seriesIDs",
						"description": "filter by Series Ids",
						"required": false,
						"example": "c0ffeec0-ffee-c0ff-eec0-ffeec0ffeec0",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/components/schemas/ID"
							}
						}
					},
					{
						"in": "query",
						"name": "albumTypes",
						"description": "filter by Album Types",
						"required": false,
						"example": [
							"audiobook"
						],
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/components/schemas/AlbumType"
							}
						}
					},
					{
						"in": "query",
						"name": "mbReleaseIDs",
						"description": "filter by MusicBrainz Release Ids",
						"required": false,
						"example": [
							"d5b1d8ab-9a76-4c31-9b51-1049841b8c7e"
						],
						"schema": {
							"type": "array",
							"items": {
								"type": "string",
								"description": "filter by MusicBrainz Release Ids"
							}
						}
					},
					{
						"in": "query",
						"name": "mbArtistIDs",
						"description": "filter by MusicBrainz Artist Ids",
						"required": false,
						"example": [
							"b15ebd71-a252-417d-9e1c-3e6863da68f8"
						],
						"schema": {
							"type": "array",
							"items": {
								"type": "string",
								"description": "filter by MusicBrainz Artist Ids"
							}
						}
					},
					{
						"in": "query",
						"name": "notMbArtistID",
						"description": "exclude by MusicBrainz Artist Id",
						"required": false,
						"example": "b15ebd71-a252-417d-9e1c-3e6863da68f8",
						"schema": {
							"type": "string",
							"description": "exclude by MusicBrainz Artist Id"
						}
					},
					{
						"in": "query",
						"name": "genres",
						"description": "filter by Genres",
						"required": false,
						"example": [
							"Pop"
						],
						"schema": {
							"type": "array",
							"items": {
								"type": "string",
								"description": "filter by Genres"
							}
						}
					},
					{
						"in": "query",
						"name": "since",
						"description": "filter by Creation timestamp",
						"required": false,
						"example": "2000-12-31T23:00:00.000Z",
						"schema": {
							"type": "integer",
							"minimum": 0,
							"description": "filter by Creation timestamp"
						}
					},
					{
						"in": "query",
						"name": "fromYear",
						"description": "filter by since year",
						"required": false,
						"example": 2001,
						"schema": {
							"type": "integer",
							"minimum": 0,
							"description": "filter by since year"
						}
					},
					{
						"in": "query",
						"name": "toYear",
						"description": "filter by until year",
						"required": false,
						"example": 2001,
						"schema": {
							"type": "integer",
							"minimum": 0,
							"description": "filter by until year"
						}
					},
					{
						"in": "query",
						"name": "trackIncMedia",
						"description": "include media information on track(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include media information on track(s)"
						}
					},
					{
						"in": "query",
						"name": "trackIncTag",
						"description": "include tag on track(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include tag on track(s)"
						}
					},
					{
						"in": "query",
						"name": "trackIncRawTag",
						"description": "include raw tag on track(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include raw tag on track(s)"
						}
					},
					{
						"in": "query",
						"name": "trackIncState",
						"description": "include user states (fav,rate) on track(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include user states (fav,rate) on track(s)"
						}
					},
					{
						"in": "query",
						"name": "skip",
						"description": "return items starting from offset position",
						"required": false,
						"example": 0,
						"schema": {
							"type": "integer",
							"default": 0,
							"minimum": 0,
							"description": "return items starting from offset position"
						}
					},
					{
						"in": "query",
						"name": "take",
						"description": "amount of returned items",
						"required": false,
						"example": 25,
						"schema": {
							"type": "integer",
							"minimum": 1,
							"description": "amount of returned items"
						}
					}
				],
				"responses": {
					"200": {
						"description": "json data",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/TrackPage"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"404": {
						"description": "Item not found"
					},
					"422": {
						"description": "Invalid parameter"
					}
				},
				"security": [
					{
						"cookieAuth": [
							"stream"
						]
					},
					{
						"bearerAuth": [
							"stream"
						]
					}
				]
			}
		},
		"/album/similar/tracks": {
			"get": {
				"operationId": "AlbumController.similarTracks",
				"summary": "Get similar Tracks",
				"description": " Get similar Tracks of an Album by Id (External Service)",
				"tags": [
					"Album"
				],
				"parameters": [
					{
						"in": "query",
						"name": "trackIncMedia",
						"description": "include media information on track(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include media information on track(s)"
						}
					},
					{
						"in": "query",
						"name": "trackIncTag",
						"description": "include tag on track(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include tag on track(s)"
						}
					},
					{
						"in": "query",
						"name": "trackIncRawTag",
						"description": "include raw tag on track(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include raw tag on track(s)"
						}
					},
					{
						"in": "query",
						"name": "trackIncState",
						"description": "include user states (fav,rate) on track(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include user states (fav,rate) on track(s)"
						}
					},
					{
						"in": "query",
						"name": "skip",
						"description": "return items starting from offset position",
						"required": false,
						"example": 0,
						"schema": {
							"type": "integer",
							"default": 0,
							"minimum": 0,
							"description": "return items starting from offset position"
						}
					},
					{
						"in": "query",
						"name": "take",
						"description": "amount of returned items",
						"required": false,
						"example": 25,
						"schema": {
							"type": "integer",
							"minimum": 1,
							"description": "amount of returned items"
						}
					},
					{
						"in": "query",
						"name": "id",
						"description": "Album Id",
						"required": true,
						"example": "c0ffeec0-ffee-c0ff-eec0-ffeec0ffeec0",
						"schema": {
							"$ref": "#/components/schemas/ID"
						}
					}
				],
				"responses": {
					"200": {
						"description": "json data",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/TrackPage"
								}
							}
						}
					},
					"400": {
						"description": "Missing parameter"
					},
					"401": {
						"description": "Unauthorized"
					},
					"404": {
						"description": "Item not found"
					},
					"422": {
						"description": "Invalid parameter"
					}
				},
				"security": [
					{
						"cookieAuth": [
							"stream"
						]
					},
					{
						"bearerAuth": [
							"stream"
						]
					}
				]
			}
		},
		"/artist/id": {
			"get": {
				"operationId": "ArtistController.id",
				"summary": "Get Artist",
				"description": "Get an Artist by Id",
				"tags": [
					"Artist"
				],
				"parameters": [
					{
						"in": "query",
						"name": "seriesIncAlbumIDs",
						"description": "include album ids on artist(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include album ids on artist(s)"
						}
					},
					{
						"in": "query",
						"name": "seriesIncAlbumCount",
						"description": "include album counts on artist(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include album counts on artist(s)"
						}
					},
					{
						"in": "query",
						"name": "seriesIncState",
						"description": "include user states (fav,rate) on artist(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include user states (fav,rate) on artist(s)"
						}
					},
					{
						"in": "query",
						"name": "seriesIncTrackIDs",
						"description": "include track ids on artist(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include track ids on artist(s)"
						}
					},
					{
						"in": "query",
						"name": "seriesIncTrackCount",
						"description": "include track counts on artist(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include track counts on artist(s)"
						}
					},
					{
						"in": "query",
						"name": "seriesIncInfo",
						"description": "include extended meta data on artist(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include extended meta data on artist(s)"
						}
					},
					{
						"in": "query",
						"name": "albumIncTrackIDs",
						"description": "include track ids on album(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include track ids on album(s)"
						}
					},
					{
						"in": "query",
						"name": "albumIncTrackCount",
						"description": "include track count on album(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include track count on album(s)"
						}
					},
					{
						"in": "query",
						"name": "albumIncState",
						"description": "include user states (fav,rate) on album(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include user states (fav,rate) on album(s)"
						}
					},
					{
						"in": "query",
						"name": "albumIncInfo",
						"description": "include extended meta data on album(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include extended meta data on album(s)"
						}
					},
					{
						"in": "query",
						"name": "trackIncMedia",
						"description": "include media information on track(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include media information on track(s)"
						}
					},
					{
						"in": "query",
						"name": "trackIncTag",
						"description": "include tag on track(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include tag on track(s)"
						}
					},
					{
						"in": "query",
						"name": "trackIncRawTag",
						"description": "include raw tag on track(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include raw tag on track(s)"
						}
					},
					{
						"in": "query",
						"name": "trackIncState",
						"description": "include user states (fav,rate) on track(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include user states (fav,rate) on track(s)"
						}
					},
					{
						"in": "query",
						"name": "artistIncAlbums",
						"description": "include albums on artist(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include albums on artist(s)"
						}
					},
					{
						"in": "query",
						"name": "artistIncTracks",
						"description": "include tracks on artist(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include tracks on artist(s)"
						}
					},
					{
						"in": "query",
						"name": "artistIncSeries",
						"description": "include series on artist(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include series on artist(s)"
						}
					},
					{
						"in": "query",
						"name": "artistIncSimilar",
						"description": "include similar artists on artist(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include similar artists on artist(s)"
						}
					},
					{
						"in": "query",
						"name": "artistIncAlbumIDs",
						"description": "include album ids on artist(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include album ids on artist(s)"
						}
					},
					{
						"in": "query",
						"name": "artistIncAlbumCount",
						"description": "include album count on artist(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include album count on artist(s)"
						}
					},
					{
						"in": "query",
						"name": "artistIncState",
						"description": "include user states (fav,rate) on artist(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include user states (fav,rate) on artist(s)"
						}
					},
					{
						"in": "query",
						"name": "artistIncTrackIDs",
						"description": "include track ids on artist(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include track ids on artist(s)"
						}
					},
					{
						"in": "query",
						"name": "artistIncTrackCount",
						"description": "include track count on artist(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include track count on artist(s)"
						}
					},
					{
						"in": "query",
						"name": "artistIncSeriesIDs",
						"description": "include series ids on artist(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include series ids on artist(s)"
						}
					},
					{
						"in": "query",
						"name": "artistIncSeriesCount",
						"description": "include series count on artist(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include series count on artist(s)"
						}
					},
					{
						"in": "query",
						"name": "artistIncInfo",
						"description": "include extended meta data on artist(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include extended meta data on artist(s)"
						}
					},
					{
						"in": "query",
						"name": "id",
						"description": "Artist Id",
						"required": true,
						"example": "c0ffeec0-ffee-c0ff-eec0-ffeec0ffeec0",
						"schema": {
							"$ref": "#/components/schemas/ID"
						}
					}
				],
				"responses": {
					"200": {
						"description": "json data",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Artist"
								}
							}
						}
					},
					"400": {
						"description": "Missing parameter"
					},
					"401": {
						"description": "Unauthorized"
					},
					"404": {
						"description": "Item not found"
					},
					"422": {
						"description": "Invalid parameter"
					}
				},
				"security": [
					{
						"cookieAuth": [
							"stream"
						]
					},
					{
						"bearerAuth": [
							"stream"
						]
					}
				]
			}
		},
		"/artist/index": {
			"get": {
				"operationId": "ArtistController.index",
				"summary": "Get Index",
				"description": "Get the Navigation Index for Albums",
				"tags": [
					"Artist"
				],
				"parameters": [
					{
						"in": "query",
						"name": "query",
						"description": "filter by Search Query",
						"required": false,
						"example": "pink",
						"schema": {
							"type": "string",
							"description": "filter by Search Query"
						}
					},
					{
						"in": "query",
						"name": "name",
						"description": "filter by Artist Name",
						"required": false,
						"example": "Pink Floyd",
						"schema": {
							"type": "string",
							"description": "filter by Artist Name"
						}
					},
					{
						"in": "query",
						"name": "slug",
						"description": "filter by Artist Slug",
						"required": false,
						"example": "pinkfloyd",
						"schema": {
							"type": "string",
							"description": "filter by Artist Slug"
						}
					},
					{
						"in": "query",
						"name": "ids",
						"description": "filter by Artist Ids",
						"required": false,
						"example": "c0ffeec0-ffee-c0ff-eec0-ffeec0ffeec0",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/components/schemas/ID"
							}
						}
					},
					{
						"in": "query",
						"name": "rootIDs",
						"description": "filter by Root Ids",
						"required": false,
						"example": "c0ffeec0-ffee-c0ff-eec0-ffeec0ffeec0",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/components/schemas/ID"
							}
						}
					},
					{
						"in": "query",
						"name": "albumIDs",
						"description": "filter by Album Ids",
						"required": false,
						"example": "c0ffeec0-ffee-c0ff-eec0-ffeec0ffeec0",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/components/schemas/ID"
							}
						}
					},
					{
						"in": "query",
						"name": "trackIDs",
						"description": "filter by Track Ids",
						"required": false,
						"example": "c0ffeec0-ffee-c0ff-eec0-ffeec0ffeec0",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/components/schemas/ID"
							}
						}
					},
					{
						"in": "query",
						"name": "albumTrackIDs",
						"description": "filter by Album Track Ids",
						"required": false,
						"example": "c0ffeec0-ffee-c0ff-eec0-ffeec0ffeec0",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/components/schemas/ID"
							}
						}
					},
					{
						"in": "query",
						"name": "seriesIDs",
						"description": "filter by Series Ids",
						"required": false,
						"example": "c0ffeec0-ffee-c0ff-eec0-ffeec0ffeec0",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/components/schemas/ID"
							}
						}
					},
					{
						"in": "query",
						"name": "folderIDs",
						"description": "filter by Folder Ids",
						"required": false,
						"example": "c0ffeec0-ffee-c0ff-eec0-ffeec0ffeec0",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/components/schemas/ID"
							}
						}
					},
					{
						"in": "query",
						"name": "genres",
						"description": "filter by Genres",
						"required": false,
						"example": [
							"Pop"
						],
						"schema": {
							"type": "array",
							"items": {
								"type": "string",
								"description": "filter by Genres"
							}
						}
					},
					{
						"in": "query",
						"name": "albumTypes",
						"description": "filter by Album Types",
						"required": false,
						"example": [
							"audiobook"
						],
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/components/schemas/AlbumType"
							}
						}
					},
					{
						"in": "query",
						"name": "mbArtistIDs",
						"description": "filter by MusicBrainz Artist Ids",
						"required": false,
						"example": [
							"b15ebd71-a252-417d-9e1c-3e6863da68f8"
						],
						"schema": {
							"type": "array",
							"items": {
								"type": "string",
								"description": "filter by MusicBrainz Artist Ids"
							}
						}
					},
					{
						"in": "query",
						"name": "notMbArtistID",
						"description": "exclude by MusicBrainz Artist Id",
						"required": false,
						"example": "b15ebd71-a252-417d-9e1c-3e6863da68f8",
						"schema": {
							"type": "string",
							"description": "exclude by MusicBrainz Artist Id"
						}
					},
					{
						"in": "query",
						"name": "since",
						"description": "filter by Creation timestamp",
						"required": false,
						"example": "2000-12-31T23:00:00.000Z",
						"schema": {
							"type": "integer",
							"minimum": 0,
							"description": "filter by Creation timestamp"
						}
					}
				],
				"responses": {
					"200": {
						"description": "json data",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ArtistIndex"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"404": {
						"description": "Item not found"
					},
					"422": {
						"description": "Invalid parameter"
					}
				},
				"security": [
					{
						"cookieAuth": [
							"stream"
						]
					},
					{
						"bearerAuth": [
							"stream"
						]
					}
				]
			}
		},
		"/artist/search": {
			"get": {
				"operationId": "ArtistController.search",
				"summary": "Search Artists",
				"description": "Search Artists",
				"tags": [
					"Artist"
				],
				"parameters": [
					{
						"in": "query",
						"name": "list",
						"description": "filter by special list",
						"required": false,
						"example": "faved",
						"schema": {
							"$ref": "#/components/schemas/ListType"
						}
					},
					{
						"in": "query",
						"name": "orderDesc",
						"description": "order direction ascending or descending",
						"required": false,
						"example": true,
						"schema": {
							"type": "boolean",
							"description": "order direction ascending or descending"
						}
					},
					{
						"in": "query",
						"name": "orderBy",
						"description": "order by field",
						"required": false,
						"schema": {
							"$ref": "#/components/schemas/ArtistOrderFields"
						}
					},
					{
						"in": "query",
						"name": "query",
						"description": "filter by Search Query",
						"required": false,
						"example": "pink",
						"schema": {
							"type": "string",
							"description": "filter by Search Query"
						}
					},
					{
						"in": "query",
						"name": "name",
						"description": "filter by Artist Name",
						"required": false,
						"example": "Pink Floyd",
						"schema": {
							"type": "string",
							"description": "filter by Artist Name"
						}
					},
					{
						"in": "query",
						"name": "slug",
						"description": "filter by Artist Slug",
						"required": false,
						"example": "pinkfloyd",
						"schema": {
							"type": "string",
							"description": "filter by Artist Slug"
						}
					},
					{
						"in": "query",
						"name": "ids",
						"description": "filter by Artist Ids",
						"required": false,
						"example": "c0ffeec0-ffee-c0ff-eec0-ffeec0ffeec0",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/components/schemas/ID"
							}
						}
					},
					{
						"in": "query",
						"name": "rootIDs",
						"description": "filter by Root Ids",
						"required": false,
						"example": "c0ffeec0-ffee-c0ff-eec0-ffeec0ffeec0",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/components/schemas/ID"
							}
						}
					},
					{
						"in": "query",
						"name": "albumIDs",
						"description": "filter by Album Ids",
						"required": false,
						"example": "c0ffeec0-ffee-c0ff-eec0-ffeec0ffeec0",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/components/schemas/ID"
							}
						}
					},
					{
						"in": "query",
						"name": "trackIDs",
						"description": "filter by Track Ids",
						"required": false,
						"example": "c0ffeec0-ffee-c0ff-eec0-ffeec0ffeec0",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/components/schemas/ID"
							}
						}
					},
					{
						"in": "query",
						"name": "albumTrackIDs",
						"description": "filter by Album Track Ids",
						"required": false,
						"example": "c0ffeec0-ffee-c0ff-eec0-ffeec0ffeec0",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/components/schemas/ID"
							}
						}
					},
					{
						"in": "query",
						"name": "seriesIDs",
						"description": "filter by Series Ids",
						"required": false,
						"example": "c0ffeec0-ffee-c0ff-eec0-ffeec0ffeec0",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/components/schemas/ID"
							}
						}
					},
					{
						"in": "query",
						"name": "folderIDs",
						"description": "filter by Folder Ids",
						"required": false,
						"example": "c0ffeec0-ffee-c0ff-eec0-ffeec0ffeec0",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/components/schemas/ID"
							}
						}
					},
					{
						"in": "query",
						"name": "genres",
						"description": "filter by Genres",
						"required": false,
						"example": [
							"Pop"
						],
						"schema": {
							"type": "array",
							"items": {
								"type": "string",
								"description": "filter by Genres"
							}
						}
					},
					{
						"in": "query",
						"name": "albumTypes",
						"description": "filter by Album Types",
						"required": false,
						"example": [
							"audiobook"
						],
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/components/schemas/AlbumType"
							}
						}
					},
					{
						"in": "query",
						"name": "mbArtistIDs",
						"description": "filter by MusicBrainz Artist Ids",
						"required": false,
						"example": [
							"b15ebd71-a252-417d-9e1c-3e6863da68f8"
						],
						"schema": {
							"type": "array",
							"items": {
								"type": "string",
								"description": "filter by MusicBrainz Artist Ids"
							}
						}
					},
					{
						"in": "query",
						"name": "notMbArtistID",
						"description": "exclude by MusicBrainz Artist Id",
						"required": false,
						"example": "b15ebd71-a252-417d-9e1c-3e6863da68f8",
						"schema": {
							"type": "string",
							"description": "exclude by MusicBrainz Artist Id"
						}
					},
					{
						"in": "query",
						"name": "since",
						"description": "filter by Creation timestamp",
						"required": false,
						"example": "2000-12-31T23:00:00.000Z",
						"schema": {
							"type": "integer",
							"minimum": 0,
							"description": "filter by Creation timestamp"
						}
					},
					{
						"in": "query",
						"name": "seriesIncAlbumIDs",
						"description": "include album ids on artist(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include album ids on artist(s)"
						}
					},
					{
						"in": "query",
						"name": "seriesIncAlbumCount",
						"description": "include album counts on artist(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include album counts on artist(s)"
						}
					},
					{
						"in": "query",
						"name": "seriesIncState",
						"description": "include user states (fav,rate) on artist(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include user states (fav,rate) on artist(s)"
						}
					},
					{
						"in": "query",
						"name": "seriesIncTrackIDs",
						"description": "include track ids on artist(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include track ids on artist(s)"
						}
					},
					{
						"in": "query",
						"name": "seriesIncTrackCount",
						"description": "include track counts on artist(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include track counts on artist(s)"
						}
					},
					{
						"in": "query",
						"name": "seriesIncInfo",
						"description": "include extended meta data on artist(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include extended meta data on artist(s)"
						}
					},
					{
						"in": "query",
						"name": "albumIncTrackIDs",
						"description": "include track ids on album(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include track ids on album(s)"
						}
					},
					{
						"in": "query",
						"name": "albumIncTrackCount",
						"description": "include track count on album(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include track count on album(s)"
						}
					},
					{
						"in": "query",
						"name": "albumIncState",
						"description": "include user states (fav,rate) on album(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include user states (fav,rate) on album(s)"
						}
					},
					{
						"in": "query",
						"name": "albumIncInfo",
						"description": "include extended meta data on album(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include extended meta data on album(s)"
						}
					},
					{
						"in": "query",
						"name": "trackIncMedia",
						"description": "include media information on track(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include media information on track(s)"
						}
					},
					{
						"in": "query",
						"name": "trackIncTag",
						"description": "include tag on track(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include tag on track(s)"
						}
					},
					{
						"in": "query",
						"name": "trackIncRawTag",
						"description": "include raw tag on track(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include raw tag on track(s)"
						}
					},
					{
						"in": "query",
						"name": "trackIncState",
						"description": "include user states (fav,rate) on track(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include user states (fav,rate) on track(s)"
						}
					},
					{
						"in": "query",
						"name": "artistIncAlbums",
						"description": "include albums on artist(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include albums on artist(s)"
						}
					},
					{
						"in": "query",
						"name": "artistIncTracks",
						"description": "include tracks on artist(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include tracks on artist(s)"
						}
					},
					{
						"in": "query",
						"name": "artistIncSeries",
						"description": "include series on artist(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include series on artist(s)"
						}
					},
					{
						"in": "query",
						"name": "artistIncSimilar",
						"description": "include similar artists on artist(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include similar artists on artist(s)"
						}
					},
					{
						"in": "query",
						"name": "artistIncAlbumIDs",
						"description": "include album ids on artist(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include album ids on artist(s)"
						}
					},
					{
						"in": "query",
						"name": "artistIncAlbumCount",
						"description": "include album count on artist(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include album count on artist(s)"
						}
					},
					{
						"in": "query",
						"name": "artistIncState",
						"description": "include user states (fav,rate) on artist(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include user states (fav,rate) on artist(s)"
						}
					},
					{
						"in": "query",
						"name": "artistIncTrackIDs",
						"description": "include track ids on artist(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include track ids on artist(s)"
						}
					},
					{
						"in": "query",
						"name": "artistIncTrackCount",
						"description": "include track count on artist(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include track count on artist(s)"
						}
					},
					{
						"in": "query",
						"name": "artistIncSeriesIDs",
						"description": "include series ids on artist(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include series ids on artist(s)"
						}
					},
					{
						"in": "query",
						"name": "artistIncSeriesCount",
						"description": "include series count on artist(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include series count on artist(s)"
						}
					},
					{
						"in": "query",
						"name": "artistIncInfo",
						"description": "include extended meta data on artist(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include extended meta data on artist(s)"
						}
					},
					{
						"in": "query",
						"name": "skip",
						"description": "return items starting from offset position",
						"required": false,
						"example": 0,
						"schema": {
							"type": "integer",
							"default": 0,
							"minimum": 0,
							"description": "return items starting from offset position"
						}
					},
					{
						"in": "query",
						"name": "take",
						"description": "amount of returned items",
						"required": false,
						"example": 25,
						"schema": {
							"type": "integer",
							"minimum": 1,
							"description": "amount of returned items"
						}
					}
				],
				"responses": {
					"200": {
						"description": "json data",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ArtistPage"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"404": {
						"description": "Item not found"
					},
					"422": {
						"description": "Invalid parameter"
					}
				},
				"security": [
					{
						"cookieAuth": [
							"stream"
						]
					},
					{
						"bearerAuth": [
							"stream"
						]
					}
				]
			}
		},
		"/artist/info": {
			"get": {
				"operationId": "ArtistController.info",
				"summary": "Get Info",
				"description": "Get Meta Data Info of an Artist by Id (External Service)",
				"tags": [
					"Artist"
				],
				"parameters": [
					{
						"in": "query",
						"name": "id",
						"description": "Artist Id",
						"required": true,
						"example": "c0ffeec0-ffee-c0ff-eec0-ffeec0ffeec0",
						"schema": {
							"$ref": "#/components/schemas/ID"
						}
					}
				],
				"responses": {
					"200": {
						"description": "json data",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ExtendedInfoResult"
								}
							}
						}
					},
					"400": {
						"description": "Missing parameter"
					},
					"401": {
						"description": "Unauthorized"
					},
					"404": {
						"description": "Item not found"
					},
					"422": {
						"description": "Invalid parameter"
					}
				},
				"security": [
					{
						"cookieAuth": [
							"stream"
						]
					},
					{
						"bearerAuth": [
							"stream"
						]
					}
				]
			}
		},
		"/artist/similar": {
			"get": {
				"operationId": "ArtistController.similar",
				"summary": "Get similar Artists",
				"description": "Get similar Artists of an Artist by Id (External Service)",
				"tags": [
					"Artist"
				],
				"parameters": [
					{
						"in": "query",
						"name": "artistIncAlbumIDs",
						"description": "include album ids on artist(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include album ids on artist(s)"
						}
					},
					{
						"in": "query",
						"name": "artistIncAlbumCount",
						"description": "include album count on artist(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include album count on artist(s)"
						}
					},
					{
						"in": "query",
						"name": "artistIncState",
						"description": "include user states (fav,rate) on artist(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include user states (fav,rate) on artist(s)"
						}
					},
					{
						"in": "query",
						"name": "artistIncTrackIDs",
						"description": "include track ids on artist(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include track ids on artist(s)"
						}
					},
					{
						"in": "query",
						"name": "artistIncTrackCount",
						"description": "include track count on artist(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include track count on artist(s)"
						}
					},
					{
						"in": "query",
						"name": "artistIncSeriesIDs",
						"description": "include series ids on artist(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include series ids on artist(s)"
						}
					},
					{
						"in": "query",
						"name": "artistIncSeriesCount",
						"description": "include series count on artist(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include series count on artist(s)"
						}
					},
					{
						"in": "query",
						"name": "artistIncInfo",
						"description": "include extended meta data on artist(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include extended meta data on artist(s)"
						}
					},
					{
						"in": "query",
						"name": "skip",
						"description": "return items starting from offset position",
						"required": false,
						"example": 0,
						"schema": {
							"type": "integer",
							"default": 0,
							"minimum": 0,
							"description": "return items starting from offset position"
						}
					},
					{
						"in": "query",
						"name": "take",
						"description": "amount of returned items",
						"required": false,
						"example": 25,
						"schema": {
							"type": "integer",
							"minimum": 1,
							"description": "amount of returned items"
						}
					},
					{
						"in": "query",
						"name": "id",
						"description": "Artist Id",
						"required": true,
						"example": "c0ffeec0-ffee-c0ff-eec0-ffeec0ffeec0",
						"schema": {
							"$ref": "#/components/schemas/ID"
						}
					}
				],
				"responses": {
					"200": {
						"description": "json data",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ArtistPage"
								}
							}
						}
					},
					"400": {
						"description": "Missing parameter"
					},
					"401": {
						"description": "Unauthorized"
					},
					"404": {
						"description": "Item not found"
					},
					"422": {
						"description": "Invalid parameter"
					}
				},
				"security": [
					{
						"cookieAuth": [
							"stream"
						]
					},
					{
						"bearerAuth": [
							"stream"
						]
					}
				]
			}
		},
		"/artist/similar/tracks": {
			"get": {
				"operationId": "ArtistController.similarTracks",
				"summary": "Get similar Tracks",
				"description": "Get similar Tracks of an Artist by Id (External Service)",
				"tags": [
					"Artist"
				],
				"parameters": [
					{
						"in": "query",
						"name": "trackIncMedia",
						"description": "include media information on track(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include media information on track(s)"
						}
					},
					{
						"in": "query",
						"name": "trackIncTag",
						"description": "include tag on track(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include tag on track(s)"
						}
					},
					{
						"in": "query",
						"name": "trackIncRawTag",
						"description": "include raw tag on track(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include raw tag on track(s)"
						}
					},
					{
						"in": "query",
						"name": "trackIncState",
						"description": "include user states (fav,rate) on track(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include user states (fav,rate) on track(s)"
						}
					},
					{
						"in": "query",
						"name": "skip",
						"description": "return items starting from offset position",
						"required": false,
						"example": 0,
						"schema": {
							"type": "integer",
							"default": 0,
							"minimum": 0,
							"description": "return items starting from offset position"
						}
					},
					{
						"in": "query",
						"name": "take",
						"description": "amount of returned items",
						"required": false,
						"example": 25,
						"schema": {
							"type": "integer",
							"minimum": 1,
							"description": "amount of returned items"
						}
					},
					{
						"in": "query",
						"name": "id",
						"description": "Artist Id",
						"required": true,
						"example": "c0ffeec0-ffee-c0ff-eec0-ffeec0ffeec0",
						"schema": {
							"$ref": "#/components/schemas/ID"
						}
					}
				],
				"responses": {
					"200": {
						"description": "json data",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/TrackPage"
								}
							}
						}
					},
					"400": {
						"description": "Missing parameter"
					},
					"401": {
						"description": "Unauthorized"
					},
					"404": {
						"description": "Item not found"
					},
					"422": {
						"description": "Invalid parameter"
					}
				},
				"security": [
					{
						"cookieAuth": [
							"stream"
						]
					},
					{
						"bearerAuth": [
							"stream"
						]
					}
				]
			}
		},
		"/artist/tracks": {
			"get": {
				"operationId": "ArtistController.tracks",
				"summary": "Get Tracks",
				"description": "Get Tracks of Artists",
				"tags": [
					"Artist"
				],
				"parameters": [
					{
						"in": "query",
						"name": "orderDesc",
						"description": "order direction ascending or descending",
						"required": false,
						"example": true,
						"schema": {
							"type": "boolean",
							"description": "order direction ascending or descending"
						}
					},
					{
						"in": "query",
						"name": "orderBy",
						"description": "order by field",
						"required": false,
						"schema": {
							"$ref": "#/components/schemas/TrackOrderFields"
						}
					},
					{
						"in": "query",
						"name": "query",
						"description": "filter by Search Query",
						"required": false,
						"example": "pink",
						"schema": {
							"type": "string",
							"description": "filter by Search Query"
						}
					},
					{
						"in": "query",
						"name": "name",
						"description": "filter by Artist Name",
						"required": false,
						"example": "Pink Floyd",
						"schema": {
							"type": "string",
							"description": "filter by Artist Name"
						}
					},
					{
						"in": "query",
						"name": "slug",
						"description": "filter by Artist Slug",
						"required": false,
						"example": "pinkfloyd",
						"schema": {
							"type": "string",
							"description": "filter by Artist Slug"
						}
					},
					{
						"in": "query",
						"name": "ids",
						"description": "filter by Artist Ids",
						"required": false,
						"example": "c0ffeec0-ffee-c0ff-eec0-ffeec0ffeec0",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/components/schemas/ID"
							}
						}
					},
					{
						"in": "query",
						"name": "rootIDs",
						"description": "filter by Root Ids",
						"required": false,
						"example": "c0ffeec0-ffee-c0ff-eec0-ffeec0ffeec0",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/components/schemas/ID"
							}
						}
					},
					{
						"in": "query",
						"name": "albumIDs",
						"description": "filter by Album Ids",
						"required": false,
						"example": "c0ffeec0-ffee-c0ff-eec0-ffeec0ffeec0",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/components/schemas/ID"
							}
						}
					},
					{
						"in": "query",
						"name": "trackIDs",
						"description": "filter by Track Ids",
						"required": false,
						"example": "c0ffeec0-ffee-c0ff-eec0-ffeec0ffeec0",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/components/schemas/ID"
							}
						}
					},
					{
						"in": "query",
						"name": "albumTrackIDs",
						"description": "filter by Album Track Ids",
						"required": false,
						"example": "c0ffeec0-ffee-c0ff-eec0-ffeec0ffeec0",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/components/schemas/ID"
							}
						}
					},
					{
						"in": "query",
						"name": "seriesIDs",
						"description": "filter by Series Ids",
						"required": false,
						"example": "c0ffeec0-ffee-c0ff-eec0-ffeec0ffeec0",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/components/schemas/ID"
							}
						}
					},
					{
						"in": "query",
						"name": "folderIDs",
						"description": "filter by Folder Ids",
						"required": false,
						"example": "c0ffeec0-ffee-c0ff-eec0-ffeec0ffeec0",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/components/schemas/ID"
							}
						}
					},
					{
						"in": "query",
						"name": "genres",
						"description": "filter by Genres",
						"required": false,
						"example": [
							"Pop"
						],
						"schema": {
							"type": "array",
							"items": {
								"type": "string",
								"description": "filter by Genres"
							}
						}
					},
					{
						"in": "query",
						"name": "albumTypes",
						"description": "filter by Album Types",
						"required": false,
						"example": [
							"audiobook"
						],
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/components/schemas/AlbumType"
							}
						}
					},
					{
						"in": "query",
						"name": "mbArtistIDs",
						"description": "filter by MusicBrainz Artist Ids",
						"required": false,
						"example": [
							"b15ebd71-a252-417d-9e1c-3e6863da68f8"
						],
						"schema": {
							"type": "array",
							"items": {
								"type": "string",
								"description": "filter by MusicBrainz Artist Ids"
							}
						}
					},
					{
						"in": "query",
						"name": "notMbArtistID",
						"description": "exclude by MusicBrainz Artist Id",
						"required": false,
						"example": "b15ebd71-a252-417d-9e1c-3e6863da68f8",
						"schema": {
							"type": "string",
							"description": "exclude by MusicBrainz Artist Id"
						}
					},
					{
						"in": "query",
						"name": "since",
						"description": "filter by Creation timestamp",
						"required": false,
						"example": "2000-12-31T23:00:00.000Z",
						"schema": {
							"type": "integer",
							"minimum": 0,
							"description": "filter by Creation timestamp"
						}
					},
					{
						"in": "query",
						"name": "trackIncMedia",
						"description": "include media information on track(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include media information on track(s)"
						}
					},
					{
						"in": "query",
						"name": "trackIncTag",
						"description": "include tag on track(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include tag on track(s)"
						}
					},
					{
						"in": "query",
						"name": "trackIncRawTag",
						"description": "include raw tag on track(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include raw tag on track(s)"
						}
					},
					{
						"in": "query",
						"name": "trackIncState",
						"description": "include user states (fav,rate) on track(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include user states (fav,rate) on track(s)"
						}
					},
					{
						"in": "query",
						"name": "skip",
						"description": "return items starting from offset position",
						"required": false,
						"example": 0,
						"schema": {
							"type": "integer",
							"default": 0,
							"minimum": 0,
							"description": "return items starting from offset position"
						}
					},
					{
						"in": "query",
						"name": "take",
						"description": "amount of returned items",
						"required": false,
						"example": 25,
						"schema": {
							"type": "integer",
							"minimum": 1,
							"description": "amount of returned items"
						}
					}
				],
				"responses": {
					"200": {
						"description": "json data",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/TrackPage"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"404": {
						"description": "Item not found"
					},
					"422": {
						"description": "Invalid parameter"
					}
				},
				"security": [
					{
						"cookieAuth": [
							"stream"
						]
					},
					{
						"bearerAuth": [
							"stream"
						]
					}
				]
			}
		},
		"/artist/albums": {
			"get": {
				"operationId": "ArtistController.albums",
				"summary": "Get Albums",
				"description": "Get Albums of Artists",
				"tags": [
					"Artist"
				],
				"parameters": [
					{
						"in": "query",
						"name": "orderDesc",
						"description": "order direction ascending or descending",
						"required": false,
						"example": true,
						"schema": {
							"type": "boolean",
							"description": "order direction ascending or descending"
						}
					},
					{
						"in": "query",
						"name": "orderBy",
						"description": "order by field",
						"required": false,
						"schema": {
							"$ref": "#/components/schemas/AlbumOrderFields"
						}
					},
					{
						"in": "query",
						"name": "query",
						"description": "filter by Search Query",
						"required": false,
						"example": "pink",
						"schema": {
							"type": "string",
							"description": "filter by Search Query"
						}
					},
					{
						"in": "query",
						"name": "name",
						"description": "filter by Artist Name",
						"required": false,
						"example": "Pink Floyd",
						"schema": {
							"type": "string",
							"description": "filter by Artist Name"
						}
					},
					{
						"in": "query",
						"name": "slug",
						"description": "filter by Artist Slug",
						"required": false,
						"example": "pinkfloyd",
						"schema": {
							"type": "string",
							"description": "filter by Artist Slug"
						}
					},
					{
						"in": "query",
						"name": "ids",
						"description": "filter by Artist Ids",
						"required": false,
						"example": "c0ffeec0-ffee-c0ff-eec0-ffeec0ffeec0",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/components/schemas/ID"
							}
						}
					},
					{
						"in": "query",
						"name": "rootIDs",
						"description": "filter by Root Ids",
						"required": false,
						"example": "c0ffeec0-ffee-c0ff-eec0-ffeec0ffeec0",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/components/schemas/ID"
							}
						}
					},
					{
						"in": "query",
						"name": "albumIDs",
						"description": "filter by Album Ids",
						"required": false,
						"example": "c0ffeec0-ffee-c0ff-eec0-ffeec0ffeec0",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/components/schemas/ID"
							}
						}
					},
					{
						"in": "query",
						"name": "trackIDs",
						"description": "filter by Track Ids",
						"required": false,
						"example": "c0ffeec0-ffee-c0ff-eec0-ffeec0ffeec0",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/components/schemas/ID"
							}
						}
					},
					{
						"in": "query",
						"name": "albumTrackIDs",
						"description": "filter by Album Track Ids",
						"required": false,
						"example": "c0ffeec0-ffee-c0ff-eec0-ffeec0ffeec0",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/components/schemas/ID"
							}
						}
					},
					{
						"in": "query",
						"name": "seriesIDs",
						"description": "filter by Series Ids",
						"required": false,
						"example": "c0ffeec0-ffee-c0ff-eec0-ffeec0ffeec0",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/components/schemas/ID"
							}
						}
					},
					{
						"in": "query",
						"name": "folderIDs",
						"description": "filter by Folder Ids",
						"required": false,
						"example": "c0ffeec0-ffee-c0ff-eec0-ffeec0ffeec0",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/components/schemas/ID"
							}
						}
					},
					{
						"in": "query",
						"name": "genres",
						"description": "filter by Genres",
						"required": false,
						"example": [
							"Pop"
						],
						"schema": {
							"type": "array",
							"items": {
								"type": "string",
								"description": "filter by Genres"
							}
						}
					},
					{
						"in": "query",
						"name": "albumTypes",
						"description": "filter by Album Types",
						"required": false,
						"example": [
							"audiobook"
						],
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/components/schemas/AlbumType"
							}
						}
					},
					{
						"in": "query",
						"name": "mbArtistIDs",
						"description": "filter by MusicBrainz Artist Ids",
						"required": false,
						"example": [
							"b15ebd71-a252-417d-9e1c-3e6863da68f8"
						],
						"schema": {
							"type": "array",
							"items": {
								"type": "string",
								"description": "filter by MusicBrainz Artist Ids"
							}
						}
					},
					{
						"in": "query",
						"name": "notMbArtistID",
						"description": "exclude by MusicBrainz Artist Id",
						"required": false,
						"example": "b15ebd71-a252-417d-9e1c-3e6863da68f8",
						"schema": {
							"type": "string",
							"description": "exclude by MusicBrainz Artist Id"
						}
					},
					{
						"in": "query",
						"name": "since",
						"description": "filter by Creation timestamp",
						"required": false,
						"example": "2000-12-31T23:00:00.000Z",
						"schema": {
							"type": "integer",
							"minimum": 0,
							"description": "filter by Creation timestamp"
						}
					},
					{
						"in": "query",
						"name": "albumIncTrackIDs",
						"description": "include track ids on album(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include track ids on album(s)"
						}
					},
					{
						"in": "query",
						"name": "albumIncTrackCount",
						"description": "include track count on album(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include track count on album(s)"
						}
					},
					{
						"in": "query",
						"name": "albumIncState",
						"description": "include user states (fav,rate) on album(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include user states (fav,rate) on album(s)"
						}
					},
					{
						"in": "query",
						"name": "albumIncInfo",
						"description": "include extended meta data on album(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include extended meta data on album(s)"
						}
					},
					{
						"in": "query",
						"name": "skip",
						"description": "return items starting from offset position",
						"required": false,
						"example": 0,
						"schema": {
							"type": "integer",
							"default": 0,
							"minimum": 0,
							"description": "return items starting from offset position"
						}
					},
					{
						"in": "query",
						"name": "take",
						"description": "amount of returned items",
						"required": false,
						"example": 25,
						"schema": {
							"type": "integer",
							"minimum": 1,
							"description": "amount of returned items"
						}
					}
				],
				"responses": {
					"200": {
						"description": "json data",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/AlbumPage"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"404": {
						"description": "Item not found"
					},
					"422": {
						"description": "Invalid parameter"
					}
				},
				"security": [
					{
						"cookieAuth": [
							"stream"
						]
					},
					{
						"bearerAuth": [
							"stream"
						]
					}
				]
			}
		},
		"/artist/series": {
			"get": {
				"operationId": "ArtistController.series",
				"summary": "Get Series",
				"description": "Get Series of Artists",
				"tags": [
					"Artist"
				],
				"parameters": [
					{
						"in": "query",
						"name": "orderBy",
						"description": "order by field",
						"required": false,
						"schema": {
							"$ref": "#/components/schemas/DefaultOrderFields"
						}
					},
					{
						"in": "query",
						"name": "orderDesc",
						"description": "order direction ascending or descending",
						"required": false,
						"example": true,
						"schema": {
							"type": "boolean",
							"description": "order direction ascending or descending"
						}
					},
					{
						"in": "query",
						"name": "query",
						"description": "filter by Search Query",
						"required": false,
						"example": "awesome",
						"schema": {
							"type": "string",
							"description": "filter by Search Query"
						}
					},
					{
						"in": "query",
						"name": "name",
						"description": "filter by Name",
						"required": false,
						"example": "Awesome Series",
						"schema": {
							"type": "string",
							"description": "filter by Name"
						}
					},
					{
						"in": "query",
						"name": "ids",
						"description": "filter by Series Ids",
						"required": false,
						"example": "c0ffeec0-ffee-c0ff-eec0-ffeec0ffeec0",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/components/schemas/ID"
							}
						}
					},
					{
						"in": "query",
						"name": "albumTypes",
						"description": "filter by Album Types",
						"required": false,
						"example": [
							"audiobook"
						],
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/components/schemas/AlbumType"
							}
						}
					},
					{
						"in": "query",
						"name": "since",
						"description": "filter by Creation timestamp",
						"required": false,
						"example": "2000-12-31T23:00:00.000Z",
						"schema": {
							"type": "integer",
							"minimum": 0,
							"description": "filter by Creation timestamp"
						}
					},
					{
						"in": "query",
						"name": "trackIDs",
						"description": "filter by Track Ids",
						"required": false,
						"example": "c0ffeec0-ffee-c0ff-eec0-ffeec0ffeec0",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/components/schemas/ID"
							}
						}
					},
					{
						"in": "query",
						"name": "albumIDs",
						"description": "filter by Album Ids",
						"required": false,
						"example": "c0ffeec0-ffee-c0ff-eec0-ffeec0ffeec0",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/components/schemas/ID"
							}
						}
					},
					{
						"in": "query",
						"name": "artistIDs",
						"description": "filter by Artist Ids",
						"required": false,
						"example": "c0ffeec0-ffee-c0ff-eec0-ffeec0ffeec0",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/components/schemas/ID"
							}
						}
					},
					{
						"in": "query",
						"name": "rootIDs",
						"description": "filter by Root Ids",
						"required": false,
						"example": "c0ffeec0-ffee-c0ff-eec0-ffeec0ffeec0",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/components/schemas/ID"
							}
						}
					},
					{
						"in": "query",
						"name": "folderIDs",
						"description": "filter by Folder Ids",
						"required": false,
						"example": "c0ffeec0-ffee-c0ff-eec0-ffeec0ffeec0",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/components/schemas/ID"
							}
						}
					},
					{
						"in": "query",
						"name": "seriesIncAlbumIDs",
						"description": "include album ids on artist(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include album ids on artist(s)"
						}
					},
					{
						"in": "query",
						"name": "seriesIncAlbumCount",
						"description": "include album counts on artist(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include album counts on artist(s)"
						}
					},
					{
						"in": "query",
						"name": "seriesIncState",
						"description": "include user states (fav,rate) on artist(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include user states (fav,rate) on artist(s)"
						}
					},
					{
						"in": "query",
						"name": "seriesIncTrackIDs",
						"description": "include track ids on artist(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include track ids on artist(s)"
						}
					},
					{
						"in": "query",
						"name": "seriesIncTrackCount",
						"description": "include track counts on artist(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include track counts on artist(s)"
						}
					},
					{
						"in": "query",
						"name": "seriesIncInfo",
						"description": "include extended meta data on artist(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include extended meta data on artist(s)"
						}
					},
					{
						"in": "query",
						"name": "skip",
						"description": "return items starting from offset position",
						"required": false,
						"example": 0,
						"schema": {
							"type": "integer",
							"default": 0,
							"minimum": 0,
							"description": "return items starting from offset position"
						}
					},
					{
						"in": "query",
						"name": "take",
						"description": "amount of returned items",
						"required": false,
						"example": 25,
						"schema": {
							"type": "integer",
							"minimum": 1,
							"description": "amount of returned items"
						}
					}
				],
				"responses": {
					"200": {
						"description": "json data",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SeriesPage"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"404": {
						"description": "Item not found"
					},
					"422": {
						"description": "Invalid parameter"
					}
				},
				"security": [
					{
						"cookieAuth": [
							"stream"
						]
					},
					{
						"bearerAuth": [
							"stream"
						]
					}
				]
			}
		},
		"/artwork/id": {
			"get": {
				"operationId": "ArtworkController.id",
				"summary": "Get Artwork",
				"description": "Get an Artwork by Id",
				"tags": [
					"Artwork"
				],
				"parameters": [
					{
						"in": "query",
						"name": "folderIncTag",
						"description": "include tag on folder(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include tag on folder(s)"
						}
					},
					{
						"in": "query",
						"name": "folderIncState",
						"description": "include state (fav,rate) on folder(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include state (fav,rate) on folder(s)"
						}
					},
					{
						"in": "query",
						"name": "folderIncChildFolderCount",
						"description": "include child folder count on folder(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include child folder count on folder(s)"
						}
					},
					{
						"in": "query",
						"name": "folderIncTrackCount",
						"description": "include track count on folder(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include track count on folder(s)"
						}
					},
					{
						"in": "query",
						"name": "folderIncArtworkCount",
						"description": "include artwork count on folder(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include artwork count on folder(s)"
						}
					},
					{
						"in": "query",
						"name": "folderIncParents",
						"description": "include a list of all parent folder ids/names on folder(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include a list of all parent folder ids/names on folder(s)"
						}
					},
					{
						"in": "query",
						"name": "folderIncInfo",
						"description": "include extended meta data on folder(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include extended meta data on folder(s)"
						}
					},
					{
						"in": "query",
						"name": "folderIncSimilar",
						"description": "include similar folders list on folder(s) - only for folders of type artist",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include similar folders list on folder(s) - only for folders of type artist"
						}
					},
					{
						"in": "query",
						"name": "folderIncArtworkIDs",
						"description": "include artwork images Ids on folder(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include artwork images Ids on folder(s)"
						}
					},
					{
						"in": "query",
						"name": "folderIncTrackIDs",
						"description": "include track Ids on folder(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include track Ids on folder(s)"
						}
					},
					{
						"in": "query",
						"name": "folderIncFolderIDs",
						"description": "include children folder Ids on folder(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include children folder Ids on folder(s)"
						}
					},
					{
						"in": "query",
						"name": "artworkIncFolder",
						"description": "include folder on artwork(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include folder on artwork(s)"
						}
					},
					{
						"in": "query",
						"name": "artworkIncState",
						"description": "include state (fav,rate) on artwork(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include state (fav,rate) on artwork(s)"
						}
					},
					{
						"in": "query",
						"name": "id",
						"description": "Artwork Id",
						"required": true,
						"example": "c0ffeec0-ffee-c0ff-eec0-ffeec0ffeec0",
						"schema": {
							"$ref": "#/components/schemas/ID"
						}
					}
				],
				"responses": {
					"200": {
						"description": "json data",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Artwork"
								}
							}
						}
					},
					"400": {
						"description": "Missing parameter"
					},
					"401": {
						"description": "Unauthorized"
					},
					"404": {
						"description": "Item not found"
					},
					"422": {
						"description": "Invalid parameter"
					}
				},
				"security": [
					{
						"cookieAuth": [
							"stream"
						]
					},
					{
						"bearerAuth": [
							"stream"
						]
					}
				]
			}
		},
		"/artwork/search": {
			"get": {
				"operationId": "ArtworkController.search",
				"summary": "Search Artworks",
				"description": "Search Artworks",
				"tags": [
					"Artwork"
				],
				"parameters": [
					{
						"in": "query",
						"name": "list",
						"description": "filter by special list",
						"required": false,
						"example": "faved",
						"schema": {
							"$ref": "#/components/schemas/ListType"
						}
					},
					{
						"in": "query",
						"name": "orderBy",
						"description": "order by field",
						"required": false,
						"schema": {
							"$ref": "#/components/schemas/DefaultOrderFields"
						}
					},
					{
						"in": "query",
						"name": "orderDesc",
						"description": "order direction ascending or descending",
						"required": false,
						"example": true,
						"schema": {
							"type": "boolean",
							"description": "order direction ascending or descending"
						}
					},
					{
						"in": "query",
						"name": "query",
						"description": "filter by Search Query",
						"required": false,
						"example": "cover",
						"schema": {
							"type": "string",
							"description": "filter by Search Query"
						}
					},
					{
						"in": "query",
						"name": "name",
						"description": "filter by Artist Name",
						"required": false,
						"example": "Cover.png",
						"schema": {
							"type": "string",
							"description": "filter by Artist Name"
						}
					},
					{
						"in": "query",
						"name": "ids",
						"description": "filter by Artwork Ids",
						"required": false,
						"example": "c0ffeec0-ffee-c0ff-eec0-ffeec0ffeec0",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/components/schemas/ID"
							}
						}
					},
					{
						"in": "query",
						"name": "formats",
						"description": "filter by Artwork Image Formats",
						"required": false,
						"example": [
							"png"
						],
						"schema": {
							"type": "array",
							"items": {
								"type": "string",
								"description": "filter by Artwork Image Formats"
							}
						}
					},
					{
						"in": "query",
						"name": "folderIDs",
						"description": "filter by Folder Ids",
						"required": false,
						"example": "c0ffeec0-ffee-c0ff-eec0-ffeec0ffeec0",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/components/schemas/ID"
							}
						}
					},
					{
						"in": "query",
						"name": "childOfID",
						"description": "filter if artwork is in folder id (or its child folders)",
						"required": false,
						"example": "c0ffeec0-ffee-c0ff-eec0-ffeec0ffeec0",
						"schema": {
							"$ref": "#/components/schemas/ID"
						}
					},
					{
						"in": "query",
						"name": "types",
						"description": "filter by Artwork Image Types",
						"required": false,
						"example": "front",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/components/schemas/ArtworkImageType"
							}
						}
					},
					{
						"in": "query",
						"name": "since",
						"description": "filter by Creation timestamp",
						"required": false,
						"example": "2000-12-31T23:00:00.000Z",
						"schema": {
							"type": "integer",
							"minimum": 0,
							"description": "filter by Creation timestamp"
						}
					},
					{
						"in": "query",
						"name": "sizeFrom",
						"description": "filter by since size",
						"required": false,
						"example": 100,
						"schema": {
							"type": "integer",
							"minimum": 0,
							"description": "filter by since size"
						}
					},
					{
						"in": "query",
						"name": "sizeTo",
						"description": "filter by until size",
						"required": false,
						"example": 200,
						"schema": {
							"type": "integer",
							"minimum": 0,
							"description": "filter by until size"
						}
					},
					{
						"in": "query",
						"name": "widthFrom",
						"description": "filter by since width",
						"required": false,
						"example": 100,
						"schema": {
							"type": "integer",
							"minimum": 0,
							"description": "filter by since width"
						}
					},
					{
						"in": "query",
						"name": "widthTo",
						"description": "filter by until width",
						"required": false,
						"example": 200,
						"schema": {
							"type": "integer",
							"minimum": 0,
							"description": "filter by until width"
						}
					},
					{
						"in": "query",
						"name": "heightFrom",
						"description": "filter by since height",
						"required": false,
						"example": 100,
						"schema": {
							"type": "integer",
							"minimum": 0,
							"description": "filter by since height"
						}
					},
					{
						"in": "query",
						"name": "heightTo",
						"description": "filter by until height",
						"required": false,
						"example": 200,
						"schema": {
							"type": "integer",
							"minimum": 0,
							"description": "filter by until height"
						}
					},
					{
						"in": "query",
						"name": "folderIncTag",
						"description": "include tag on folder(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include tag on folder(s)"
						}
					},
					{
						"in": "query",
						"name": "folderIncState",
						"description": "include state (fav,rate) on folder(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include state (fav,rate) on folder(s)"
						}
					},
					{
						"in": "query",
						"name": "folderIncChildFolderCount",
						"description": "include child folder count on folder(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include child folder count on folder(s)"
						}
					},
					{
						"in": "query",
						"name": "folderIncTrackCount",
						"description": "include track count on folder(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include track count on folder(s)"
						}
					},
					{
						"in": "query",
						"name": "folderIncArtworkCount",
						"description": "include artwork count on folder(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include artwork count on folder(s)"
						}
					},
					{
						"in": "query",
						"name": "folderIncParents",
						"description": "include a list of all parent folder ids/names on folder(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include a list of all parent folder ids/names on folder(s)"
						}
					},
					{
						"in": "query",
						"name": "folderIncInfo",
						"description": "include extended meta data on folder(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include extended meta data on folder(s)"
						}
					},
					{
						"in": "query",
						"name": "folderIncSimilar",
						"description": "include similar folders list on folder(s) - only for folders of type artist",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include similar folders list on folder(s) - only for folders of type artist"
						}
					},
					{
						"in": "query",
						"name": "folderIncArtworkIDs",
						"description": "include artwork images Ids on folder(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include artwork images Ids on folder(s)"
						}
					},
					{
						"in": "query",
						"name": "folderIncTrackIDs",
						"description": "include track Ids on folder(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include track Ids on folder(s)"
						}
					},
					{
						"in": "query",
						"name": "folderIncFolderIDs",
						"description": "include children folder Ids on folder(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include children folder Ids on folder(s)"
						}
					},
					{
						"in": "query",
						"name": "artworkIncFolder",
						"description": "include folder on artwork(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include folder on artwork(s)"
						}
					},
					{
						"in": "query",
						"name": "artworkIncState",
						"description": "include state (fav,rate) on artwork(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include state (fav,rate) on artwork(s)"
						}
					},
					{
						"in": "query",
						"name": "skip",
						"description": "return items starting from offset position",
						"required": false,
						"example": 0,
						"schema": {
							"type": "integer",
							"default": 0,
							"minimum": 0,
							"description": "return items starting from offset position"
						}
					},
					{
						"in": "query",
						"name": "take",
						"description": "amount of returned items",
						"required": false,
						"example": 25,
						"schema": {
							"type": "integer",
							"minimum": 1,
							"description": "amount of returned items"
						}
					}
				],
				"responses": {
					"200": {
						"description": "json data",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ArtworkPage"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"404": {
						"description": "Item not found"
					},
					"422": {
						"description": "Invalid parameter"
					}
				},
				"security": [
					{
						"cookieAuth": [
							"stream"
						]
					},
					{
						"bearerAuth": [
							"stream"
						]
					}
				]
			}
		},
		"/artwork/create": {
			"post": {
				"operationId": "ArtworkController.createByUrl",
				"summary": "Create Artwork",
				"description": "Create an Artwork",
				"tags": [
					"Artwork"
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/ArtworkNewArgs"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "json data",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/AdminChangeQueueInfo"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					}
				},
				"security": [
					{
						"cookieAuth": [
							"admin"
						]
					},
					{
						"bearerAuth": [
							"admin"
						]
					}
				]
			}
		},
		"/artwork/upload": {
			"post": {
				"operationId": "ArtworkController.createByUpload",
				"summary": "Upload Artwork",
				"description": "Upload an Artwork",
				"tags": [
					"Artwork"
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"multipart/form-data": {
							"schema": {
								"allOf": [
									{
										"properties": {
											"image": {
												"type": "object",
												"properties": {
													"type": {
														"description": "Mime Type",
														"type": "string"
													},
													"file": {
														"description": "Binary Data",
														"type": "string",
														"format": "binary"
													}
												},
												"required": [
													"type",
													"file"
												]
											}
										},
										"required": [
											"image"
										],
										"description": "Binary Part"
									},
									{
										"$ref": "#/components/schemas/ArtworkNewUploadArgs"
									}
								]
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "json data",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/AdminChangeQueueInfo"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					}
				},
				"security": [
					{
						"cookieAuth": [
							"admin"
						]
					},
					{
						"bearerAuth": [
							"admin"
						]
					}
				]
			}
		},
		"/artwork/update": {
			"post": {
				"operationId": "ArtworkController.update",
				"summary": "Update Artwork",
				"description": "Update an Artwork",
				"tags": [
					"Artwork"
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"multipart/form-data": {
							"schema": {
								"allOf": [
									{
										"properties": {
											"image": {
												"type": "object",
												"properties": {
													"type": {
														"description": "Mime Type",
														"type": "string"
													},
													"file": {
														"description": "Binary Data",
														"type": "string",
														"format": "binary"
													}
												},
												"required": [
													"type",
													"file"
												]
											}
										},
										"required": [
											"image"
										],
										"description": "Binary Part"
									},
									{
										"properties": {
											"id": {
												"$ref": "#/components/schemas/ID"
											}
										},
										"description": "Artwork Id",
										"required": [
											"id"
										]
									}
								]
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "json data",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/AdminChangeQueueInfo"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					}
				},
				"security": [
					{
						"cookieAuth": [
							"admin"
						]
					},
					{
						"bearerAuth": [
							"admin"
						]
					}
				]
			}
		},
		"/artwork/rename": {
			"post": {
				"operationId": "ArtworkController.rename",
				"summary": "Rename Artwork",
				"description": "Rename an Artwork",
				"tags": [
					"Artwork"
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/ArtworkRenameArgs"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "json data",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/AdminChangeQueueInfo"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					}
				},
				"security": [
					{
						"cookieAuth": [
							"admin"
						]
					},
					{
						"bearerAuth": [
							"admin"
						]
					}
				]
			}
		},
		"/artwork/remove": {
			"post": {
				"operationId": "ArtworkController.remove",
				"summary": "Remove Artwork",
				"description": "Remove an Artwork",
				"tags": [
					"Artwork"
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"properties": {
									"id": {
										"$ref": "#/components/schemas/ID"
									}
								},
								"description": "Artwork Id",
								"required": [
									"id"
								]
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "json data",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/AdminChangeQueueInfo"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					}
				},
				"security": [
					{
						"cookieAuth": [
							"admin"
						]
					},
					{
						"bearerAuth": [
							"admin"
						]
					}
				]
			}
		},
		"/auth/login": {
			"post": {
				"operationId": "AuthController.login",
				"summary": "Login",
				"description": "Start session or jwt access",
				"tags": [
					"Access"
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/CredentialsArgs"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "json data",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Session"
								}
							}
						}
					}
				},
				"security": []
			}
		},
		"/auth/logout": {
			"post": {
				"operationId": "AuthController.logout",
				"summary": "Logout",
				"description": "End session or jwt access",
				"tags": [
					"Access"
				],
				"parameters": [],
				"responses": {
					"200": {
						"description": "ok"
					},
					"401": {
						"description": "Unauthorized"
					}
				},
				"security": [
					{
						"cookieAuth": [
							"stream"
						]
					},
					{
						"bearerAuth": [
							"stream"
						]
					}
				]
			}
		},
		"/autocomplete": {
			"get": {
				"operationId": "AutocompleteController.autocomplete",
				"summary": "Get Autocomplete",
				"description": "Get compact Search Results for Autocomplete Features",
				"tags": [
					"Various"
				],
				"parameters": [
					{
						"in": "query",
						"name": "query",
						"description": "query to complete",
						"required": true,
						"example": "awesome",
						"schema": {
							"type": "string",
							"description": "query to complete"
						}
					},
					{
						"in": "query",
						"name": "track",
						"description": "amount of track names to complete",
						"required": false,
						"example": 5,
						"schema": {
							"type": "integer",
							"default": 0,
							"minimum": 0,
							"description": "amount of track names to complete"
						}
					},
					{
						"in": "query",
						"name": "artist",
						"description": "amount of artist names to complete",
						"required": false,
						"example": 5,
						"schema": {
							"type": "integer",
							"default": 0,
							"minimum": 0,
							"description": "amount of artist names to complete"
						}
					},
					{
						"in": "query",
						"name": "album",
						"description": "amount of album names to complete",
						"required": false,
						"example": 5,
						"schema": {
							"type": "integer",
							"default": 0,
							"minimum": 0,
							"description": "amount of album names to complete"
						}
					},
					{
						"in": "query",
						"name": "folder",
						"description": "amount of folder names to complete",
						"required": false,
						"example": 5,
						"schema": {
							"type": "integer",
							"default": 0,
							"minimum": 0,
							"description": "amount of folder names to complete"
						}
					},
					{
						"in": "query",
						"name": "playlist",
						"description": "amount of playlist names to complete",
						"required": false,
						"example": 5,
						"schema": {
							"type": "integer",
							"default": 0,
							"minimum": 0,
							"description": "amount of playlist names to complete"
						}
					},
					{
						"in": "query",
						"name": "podcast",
						"description": "amount of podcast names to complete",
						"required": false,
						"example": 5,
						"schema": {
							"type": "integer",
							"default": 0,
							"minimum": 0,
							"description": "amount of podcast names to complete"
						}
					},
					{
						"in": "query",
						"name": "episode",
						"description": "amount of episode names to complete",
						"required": false,
						"example": 5,
						"schema": {
							"type": "integer",
							"default": 0,
							"minimum": 0,
							"description": "amount of episode names to complete"
						}
					},
					{
						"in": "query",
						"name": "series",
						"description": "amount of series names to complete",
						"required": false,
						"example": 5,
						"schema": {
							"type": "integer",
							"default": 0,
							"minimum": 0,
							"description": "amount of series names to complete"
						}
					}
				],
				"responses": {
					"200": {
						"description": "json data",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/AutoComplete"
								}
							}
						}
					},
					"400": {
						"description": "Missing parameter"
					},
					"401": {
						"description": "Unauthorized"
					},
					"422": {
						"description": "Invalid parameter"
					}
				},
				"security": [
					{
						"cookieAuth": [
							"stream"
						]
					},
					{
						"bearerAuth": [
							"stream"
						]
					}
				]
			}
		},
		"/bookmark/id": {
			"get": {
				"operationId": "BookmarkController.id",
				"summary": "Get Bookmark",
				"description": "Get a Bookmark by Id",
				"tags": [
					"Bookmark"
				],
				"parameters": [
					{
						"in": "query",
						"name": "episodeIncMedia",
						"description": "include media information on episode(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include media information on episode(s)"
						}
					},
					{
						"in": "query",
						"name": "episodeIncTag",
						"description": "include tag on episode(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include tag on episode(s)"
						}
					},
					{
						"in": "query",
						"name": "episodeIncRawTag",
						"description": "include raw tag on episode(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include raw tag on episode(s)"
						}
					},
					{
						"in": "query",
						"name": "episodeIncState",
						"description": "include user states (fav,rate) on episode(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include user states (fav,rate) on episode(s)"
						}
					},
					{
						"in": "query",
						"name": "trackIncMedia",
						"description": "include media information on track(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include media information on track(s)"
						}
					},
					{
						"in": "query",
						"name": "trackIncTag",
						"description": "include tag on track(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include tag on track(s)"
						}
					},
					{
						"in": "query",
						"name": "trackIncRawTag",
						"description": "include raw tag on track(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include raw tag on track(s)"
						}
					},
					{
						"in": "query",
						"name": "trackIncState",
						"description": "include user states (fav,rate) on track(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include user states (fav,rate) on track(s)"
						}
					},
					{
						"in": "query",
						"name": "bookmarkIncTrack",
						"description": "include track on bookmarks(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include track on bookmarks(s)"
						}
					},
					{
						"in": "query",
						"name": "id",
						"description": "Bookmark Id",
						"required": true,
						"example": "c0ffeec0-ffee-c0ff-eec0-ffeec0ffeec0",
						"schema": {
							"$ref": "#/components/schemas/ID"
						}
					}
				],
				"responses": {
					"200": {
						"description": "json data",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Bookmark"
								}
							}
						}
					},
					"400": {
						"description": "Missing parameter"
					},
					"401": {
						"description": "Unauthorized"
					},
					"404": {
						"description": "Item not found"
					},
					"422": {
						"description": "Invalid parameter"
					}
				},
				"security": [
					{
						"cookieAuth": [
							"stream"
						]
					},
					{
						"bearerAuth": [
							"stream"
						]
					}
				]
			}
		},
		"/bookmark/search": {
			"get": {
				"operationId": "BookmarkController.search",
				"summary": "Search Bookmarks",
				"description": "Search Bookmarks",
				"tags": [
					"Bookmark"
				],
				"parameters": [
					{
						"in": "query",
						"name": "orderDesc",
						"description": "order direction ascending or descending",
						"required": false,
						"example": true,
						"schema": {
							"type": "boolean",
							"description": "order direction ascending or descending"
						}
					},
					{
						"in": "query",
						"name": "orderBy",
						"description": "order by field",
						"required": false,
						"schema": {
							"$ref": "#/components/schemas/BookmarkOrderFields"
						}
					},
					{
						"in": "query",
						"name": "query",
						"description": "filter by Search Query",
						"required": false,
						"example": "awesome position",
						"schema": {
							"type": "string",
							"description": "filter by Search Query"
						}
					},
					{
						"in": "query",
						"name": "comment",
						"description": "filter by Comment",
						"required": false,
						"example": "This Awesome Position!",
						"schema": {
							"type": "string",
							"description": "filter by Comment"
						}
					},
					{
						"in": "query",
						"name": "ids",
						"description": "filter by Bookmark Ids",
						"required": false,
						"example": "c0ffeec0-ffee-c0ff-eec0-ffeec0ffeec0",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/components/schemas/ID"
							}
						}
					},
					{
						"in": "query",
						"name": "trackIDs",
						"description": "filter by Track Ids",
						"required": false,
						"example": "c0ffeec0-ffee-c0ff-eec0-ffeec0ffeec0",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/components/schemas/ID"
							}
						}
					},
					{
						"in": "query",
						"name": "episodeIDs",
						"description": "filter by Episode Ids",
						"required": false,
						"example": "c0ffeec0-ffee-c0ff-eec0-ffeec0ffeec0",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/components/schemas/ID"
							}
						}
					},
					{
						"in": "query",
						"name": "since",
						"description": "filter by Creation timestamp",
						"required": false,
						"example": "2000-12-31T23:00:00.000Z",
						"schema": {
							"type": "integer",
							"minimum": 0,
							"description": "filter by Creation timestamp"
						}
					},
					{
						"in": "query",
						"name": "userIDs",
						"description": "filter by User Ids",
						"required": false,
						"example": "c0ffeec0-ffee-c0ff-eec0-ffeec0ffeec0",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/components/schemas/ID"
							}
						}
					},
					{
						"in": "query",
						"name": "episodeIncMedia",
						"description": "include media information on episode(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include media information on episode(s)"
						}
					},
					{
						"in": "query",
						"name": "episodeIncTag",
						"description": "include tag on episode(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include tag on episode(s)"
						}
					},
					{
						"in": "query",
						"name": "episodeIncRawTag",
						"description": "include raw tag on episode(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include raw tag on episode(s)"
						}
					},
					{
						"in": "query",
						"name": "episodeIncState",
						"description": "include user states (fav,rate) on episode(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include user states (fav,rate) on episode(s)"
						}
					},
					{
						"in": "query",
						"name": "trackIncMedia",
						"description": "include media information on track(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include media information on track(s)"
						}
					},
					{
						"in": "query",
						"name": "trackIncTag",
						"description": "include tag on track(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include tag on track(s)"
						}
					},
					{
						"in": "query",
						"name": "trackIncRawTag",
						"description": "include raw tag on track(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include raw tag on track(s)"
						}
					},
					{
						"in": "query",
						"name": "trackIncState",
						"description": "include user states (fav,rate) on track(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include user states (fav,rate) on track(s)"
						}
					},
					{
						"in": "query",
						"name": "bookmarkIncTrack",
						"description": "include track on bookmarks(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include track on bookmarks(s)"
						}
					},
					{
						"in": "query",
						"name": "skip",
						"description": "return items starting from offset position",
						"required": false,
						"example": 0,
						"schema": {
							"type": "integer",
							"default": 0,
							"minimum": 0,
							"description": "return items starting from offset position"
						}
					},
					{
						"in": "query",
						"name": "take",
						"description": "amount of returned items",
						"required": false,
						"example": 25,
						"schema": {
							"type": "integer",
							"minimum": 1,
							"description": "amount of returned items"
						}
					}
				],
				"responses": {
					"200": {
						"description": "json data",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/BookmarkPage"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"404": {
						"description": "Item not found"
					},
					"422": {
						"description": "Invalid parameter"
					}
				},
				"security": [
					{
						"cookieAuth": [
							"stream"
						]
					},
					{
						"bearerAuth": [
							"stream"
						]
					}
				]
			}
		},
		"/bookmark/create": {
			"post": {
				"operationId": "BookmarkController.create",
				"summary": "Create Bookmark",
				"description": "Create a Bookmark",
				"tags": [
					"Bookmark"
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/BookmarkCreateArgs"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "json data",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Bookmark"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					}
				},
				"security": [
					{
						"cookieAuth": [
							"stream"
						]
					},
					{
						"bearerAuth": [
							"stream"
						]
					}
				]
			}
		},
		"/bookmark/remove": {
			"post": {
				"operationId": "BookmarkController.remove",
				"summary": "Remove Bookmark",
				"description": "Remove a Bookmark by Id",
				"tags": [
					"Bookmark"
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"properties": {
									"id": {
										"$ref": "#/components/schemas/ID"
									}
								},
								"description": "Bookmark Id",
								"required": [
									"id"
								]
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "ok"
					},
					"401": {
						"description": "Unauthorized"
					}
				},
				"security": [
					{
						"cookieAuth": [
							"stream"
						]
					},
					{
						"bearerAuth": [
							"stream"
						]
					}
				]
			}
		},
		"/bookmark/removeByMedia": {
			"post": {
				"operationId": "BookmarkController.removeByMedia",
				"summary": "Remove Bookmarks",
				"description": "Remove Bookmarks by Media Id [Track/Episode]",
				"tags": [
					"Bookmark"
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"properties": {
									"id": {
										"$ref": "#/components/schemas/ID"
									}
								},
								"description": "Track or Episode Id",
								"required": [
									"id"
								]
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "ok"
					},
					"401": {
						"description": "Unauthorized"
					}
				},
				"security": [
					{
						"cookieAuth": [
							"stream"
						]
					},
					{
						"bearerAuth": [
							"stream"
						]
					}
				]
			}
		},
		"/chat/list": {
			"get": {
				"operationId": "ChatController.list",
				"summary": "Get Chat",
				"description": "Get Chat Messages",
				"tags": [
					"Chat"
				],
				"parameters": [
					{
						"in": "query",
						"name": "since",
						"description": "filter by message timestamp",
						"required": false,
						"example": "2000-12-31T23:00:00.000Z",
						"schema": {
							"type": "integer",
							"minimum": 0,
							"description": "filter by message timestamp"
						}
					}
				],
				"responses": {
					"200": {
						"description": "json data",
						"content": {
							"application/json": {
								"schema": {
									"type": "array",
									"items": {
										"$ref": "#/components/schemas/Chat"
									}
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"422": {
						"description": "Invalid parameter"
					}
				},
				"security": [
					{
						"cookieAuth": [
							"stream"
						]
					},
					{
						"bearerAuth": [
							"stream"
						]
					}
				]
			}
		},
		"/chat/create": {
			"post": {
				"operationId": "ChatController.create",
				"summary": "Post Chat",
				"description": "Post a Chat Message",
				"tags": [
					"Chat"
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/ChatCreateArgs"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "ok"
					},
					"401": {
						"description": "Unauthorized"
					}
				},
				"security": [
					{
						"cookieAuth": [
							"stream"
						]
					},
					{
						"bearerAuth": [
							"stream"
						]
					}
				]
			}
		},
		"/chat/remove": {
			"post": {
				"operationId": "ChatController.remove",
				"summary": "Remove Chat",
				"description": "Remove a Chat Message",
				"tags": [
					"Chat"
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/ChatRemoveArgs"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "ok"
					},
					"401": {
						"description": "Unauthorized"
					}
				},
				"security": [
					{
						"cookieAuth": [
							"stream"
						]
					},
					{
						"bearerAuth": [
							"stream"
						]
					}
				]
			}
		},
		"/download/{id}.{format}": {
			"get": {
				"operationId": "DownloadController.download",
				"summary": "Download",
				"description": "Download Archive Binary [Album, Artist, Artwork, Episode, Folder, Playlist, Podcast, Series, Track]",
				"tags": [
					"Download"
				],
				"parameters": [
					{
						"in": "path",
						"name": "format",
						"description": "format of download stream",
						"required": true,
						"example": "zip",
						"schema": {
							"$ref": "#/components/schemas/DownloadFormatType"
						}
					},
					{
						"in": "path",
						"name": "id",
						"description": "Object Id",
						"required": true,
						"example": "c0ffeec0-ffee-c0ff-eec0-ffeec0ffeec0",
						"schema": {
							"$ref": "#/components/schemas/ID"
						}
					}
				],
				"responses": {
					"200": {
						"description": "binary data",
						"content": {
							"application/zip": {
								"schema": {
									"type": "string",
									"format": "binary"
								}
							},
							"application/tar": {
								"schema": {
									"type": "string",
									"format": "binary"
								}
							}
						}
					},
					"400": {
						"description": "Missing parameter"
					},
					"401": {
						"description": "Unauthorized"
					},
					"404": {
						"description": "Item not found"
					},
					"422": {
						"description": "Invalid parameter"
					}
				},
				"security": [
					{
						"cookieAuth": [
							"stream"
						]
					},
					{
						"bearerAuth": [
							"stream"
						]
					}
				]
			}
		},
		"/download/{id}": {
			"get": {
				"operationId": "DownloadController.download/{id}",
				"summary": "Download by Id",
				"description": "Download Archive Binary [Album, Artist, Artwork, Episode, Folder, Playlist, Podcast, Series, Track]",
				"tags": [
					"Download"
				],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"description": "Object Id",
						"required": true,
						"example": "c0ffeec0-ffee-c0ff-eec0-ffeec0ffeec0",
						"schema": {
							"$ref": "#/components/schemas/ID"
						}
					}
				],
				"responses": {
					"200": {
						"description": "binary data",
						"content": {
							"application/zip": {
								"schema": {
									"type": "string",
									"format": "binary"
								}
							},
							"application/tar": {
								"schema": {
									"type": "string",
									"format": "binary"
								}
							}
						}
					},
					"400": {
						"description": "Missing parameter"
					},
					"401": {
						"description": "Unauthorized"
					},
					"404": {
						"description": "Item not found"
					},
					"422": {
						"description": "Invalid parameter"
					}
				},
				"security": [
					{
						"cookieAuth": [
							"stream"
						]
					},
					{
						"bearerAuth": [
							"stream"
						]
					}
				]
			}
		},
		"/episode/id": {
			"get": {
				"operationId": "EpisodeController.id",
				"summary": "Get Episode",
				"description": "Get a Episode by Id",
				"tags": [
					"Episode"
				],
				"parameters": [
					{
						"in": "query",
						"name": "podcastIncState",
						"description": "include state (fav,rate) on podcast(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include state (fav,rate) on podcast(s)"
						}
					},
					{
						"in": "query",
						"name": "podcastIncEpisodeIDs",
						"description": "include episodes id on podcast(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include episodes id on podcast(s)"
						}
					},
					{
						"in": "query",
						"name": "podcastIncEpisodeCount",
						"description": "include episode count on podcast(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include episode count on podcast(s)"
						}
					},
					{
						"in": "query",
						"name": "episodeIncParent",
						"description": "include parent podcast on episode(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include parent podcast on episode(s)"
						}
					},
					{
						"in": "query",
						"name": "episodeIncMedia",
						"description": "include media information on episode(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include media information on episode(s)"
						}
					},
					{
						"in": "query",
						"name": "episodeIncTag",
						"description": "include tag on episode(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include tag on episode(s)"
						}
					},
					{
						"in": "query",
						"name": "episodeIncRawTag",
						"description": "include raw tag on episode(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include raw tag on episode(s)"
						}
					},
					{
						"in": "query",
						"name": "episodeIncState",
						"description": "include user states (fav,rate) on episode(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include user states (fav,rate) on episode(s)"
						}
					},
					{
						"in": "query",
						"name": "id",
						"description": "Episode Id",
						"required": true,
						"example": "c0ffeec0-ffee-c0ff-eec0-ffeec0ffeec0",
						"schema": {
							"$ref": "#/components/schemas/ID"
						}
					}
				],
				"responses": {
					"200": {
						"description": "json data",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Episode"
								}
							}
						}
					},
					"400": {
						"description": "Missing parameter"
					},
					"401": {
						"description": "Unauthorized"
					},
					"404": {
						"description": "Item not found"
					},
					"422": {
						"description": "Invalid parameter"
					}
				},
				"security": [
					{
						"cookieAuth": [
							"stream"
						]
					},
					{
						"bearerAuth": [
							"stream"
						]
					}
				]
			}
		},
		"/episode/search": {
			"get": {
				"operationId": "EpisodeController.search",
				"summary": "Search Episodes",
				"description": "Search Episodes",
				"tags": [
					"Episode"
				],
				"parameters": [
					{
						"in": "query",
						"name": "list",
						"description": "filter by special list",
						"required": false,
						"example": "faved",
						"schema": {
							"$ref": "#/components/schemas/ListType"
						}
					},
					{
						"in": "query",
						"name": "orderDesc",
						"description": "order direction ascending or descending",
						"required": false,
						"example": true,
						"schema": {
							"type": "boolean",
							"description": "order direction ascending or descending"
						}
					},
					{
						"in": "query",
						"name": "orderBy",
						"description": "order by field",
						"required": false,
						"schema": {
							"$ref": "#/components/schemas/EpisodeOrderFields"
						}
					},
					{
						"in": "query",
						"name": "query",
						"description": "filter by Search Query",
						"required": false,
						"example": "awesome",
						"schema": {
							"type": "string",
							"description": "filter by Search Query"
						}
					},
					{
						"in": "query",
						"name": "name",
						"description": "filter by Name",
						"required": false,
						"example": "Awesome Podcast Episode!",
						"schema": {
							"type": "string",
							"description": "filter by Name"
						}
					},
					{
						"in": "query",
						"name": "ids",
						"description": "filter by Episode Ids",
						"required": false,
						"example": "c0ffeec0-ffee-c0ff-eec0-ffeec0ffeec0",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/components/schemas/ID"
							}
						}
					},
					{
						"in": "query",
						"name": "podcastIDs",
						"description": "filter by Podcast Ids",
						"required": false,
						"example": "c0ffeec0-ffee-c0ff-eec0-ffeec0ffeec0",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/components/schemas/ID"
							}
						}
					},
					{
						"in": "query",
						"name": "since",
						"description": "filter by Creation timestamp",
						"required": false,
						"example": "2000-12-31T23:00:00.000Z",
						"schema": {
							"type": "integer",
							"minimum": 0,
							"description": "filter by Creation timestamp"
						}
					},
					{
						"in": "query",
						"name": "authors",
						"description": "filter by Authors",
						"required": false,
						"example": [
							"Poddy McPodcastface"
						],
						"schema": {
							"type": "array",
							"items": {
								"type": "string",
								"description": "filter by Authors"
							}
						}
					},
					{
						"in": "query",
						"name": "guids",
						"description": "filter by GUIDs",
						"required": false,
						"example": [
							"podlove-2018-04-12t11:08:02+00:00-b3bea1e7437bda4"
						],
						"schema": {
							"type": "array",
							"items": {
								"type": "string",
								"description": "filter by GUIDs"
							}
						}
					},
					{
						"in": "query",
						"name": "statuses",
						"description": "filter by Podcast Status",
						"required": false,
						"example": [
							"downloading"
						],
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/components/schemas/PodcastStatus"
							}
						}
					},
					{
						"in": "query",
						"name": "podcastIncState",
						"description": "include state (fav,rate) on podcast(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include state (fav,rate) on podcast(s)"
						}
					},
					{
						"in": "query",
						"name": "podcastIncEpisodeIDs",
						"description": "include episodes id on podcast(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include episodes id on podcast(s)"
						}
					},
					{
						"in": "query",
						"name": "podcastIncEpisodeCount",
						"description": "include episode count on podcast(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include episode count on podcast(s)"
						}
					},
					{
						"in": "query",
						"name": "episodeIncParent",
						"description": "include parent podcast on episode(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include parent podcast on episode(s)"
						}
					},
					{
						"in": "query",
						"name": "episodeIncMedia",
						"description": "include media information on episode(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include media information on episode(s)"
						}
					},
					{
						"in": "query",
						"name": "episodeIncTag",
						"description": "include tag on episode(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include tag on episode(s)"
						}
					},
					{
						"in": "query",
						"name": "episodeIncRawTag",
						"description": "include raw tag on episode(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include raw tag on episode(s)"
						}
					},
					{
						"in": "query",
						"name": "episodeIncState",
						"description": "include user states (fav,rate) on episode(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include user states (fav,rate) on episode(s)"
						}
					},
					{
						"in": "query",
						"name": "skip",
						"description": "return items starting from offset position",
						"required": false,
						"example": 0,
						"schema": {
							"type": "integer",
							"default": 0,
							"minimum": 0,
							"description": "return items starting from offset position"
						}
					},
					{
						"in": "query",
						"name": "take",
						"description": "amount of returned items",
						"required": false,
						"example": 25,
						"schema": {
							"type": "integer",
							"minimum": 1,
							"description": "amount of returned items"
						}
					}
				],
				"responses": {
					"200": {
						"description": "json data",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/EpisodePage"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"404": {
						"description": "Item not found"
					},
					"422": {
						"description": "Invalid parameter"
					}
				},
				"security": [
					{
						"cookieAuth": [
							"stream"
						]
					},
					{
						"bearerAuth": [
							"stream"
						]
					}
				]
			}
		},
		"/episode/status": {
			"get": {
				"operationId": "EpisodeController.status",
				"summary": "Get Status",
				"description": "Get a Episode Status by Id",
				"tags": [
					"Episode"
				],
				"parameters": [
					{
						"in": "query",
						"name": "id",
						"description": "Episode Id",
						"required": true,
						"example": "c0ffeec0-ffee-c0ff-eec0-ffeec0ffeec0",
						"schema": {
							"$ref": "#/components/schemas/ID"
						}
					}
				],
				"responses": {
					"200": {
						"description": "json data",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/EpisodeUpdateStatus"
								}
							}
						}
					},
					"400": {
						"description": "Missing parameter"
					},
					"401": {
						"description": "Unauthorized"
					},
					"404": {
						"description": "Item not found"
					},
					"422": {
						"description": "Invalid parameter"
					}
				},
				"security": [
					{
						"cookieAuth": [
							"stream"
						]
					},
					{
						"bearerAuth": [
							"stream"
						]
					}
				]
			}
		},
		"/episode/retrieve": {
			"post": {
				"operationId": "EpisodeController.retrieve",
				"summary": "Retrieve Episode",
				"description": "Retrieve a Podcast Episode Media File",
				"tags": [
					"Episode"
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"properties": {
									"id": {
										"$ref": "#/components/schemas/ID"
									}
								},
								"description": "Episode Id",
								"required": [
									"id"
								]
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "ok"
					},
					"401": {
						"description": "Unauthorized"
					}
				},
				"security": [
					{
						"cookieAuth": [
							"podcast"
						]
					},
					{
						"bearerAuth": [
							"podcast"
						]
					}
				]
			}
		},
		"/folder/id": {
			"get": {
				"operationId": "FolderController.id",
				"summary": "Get Folder",
				"description": "Get a Folder by Id",
				"tags": [
					"Folder"
				],
				"parameters": [
					{
						"in": "query",
						"name": "artworkIncState",
						"description": "include state (fav,rate) on artwork(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include state (fav,rate) on artwork(s)"
						}
					},
					{
						"in": "query",
						"name": "trackIncMedia",
						"description": "include media information on track(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include media information on track(s)"
						}
					},
					{
						"in": "query",
						"name": "trackIncTag",
						"description": "include tag on track(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include tag on track(s)"
						}
					},
					{
						"in": "query",
						"name": "trackIncRawTag",
						"description": "include raw tag on track(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include raw tag on track(s)"
						}
					},
					{
						"in": "query",
						"name": "trackIncState",
						"description": "include user states (fav,rate) on track(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include user states (fav,rate) on track(s)"
						}
					},
					{
						"in": "query",
						"name": "folderIncArtworks",
						"description": "include artwork images list on folder(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include artwork images list on folder(s)"
						}
					},
					{
						"in": "query",
						"name": "folderIncChildren",
						"description": "include tracks and sub folders on folder(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include tracks and sub folders on folder(s)"
						}
					},
					{
						"in": "query",
						"name": "folderIncFolders",
						"description": "include child folders on folder(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include child folders on folder(s)"
						}
					},
					{
						"in": "query",
						"name": "folderIncTracks",
						"description": "include tracks on folder(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include tracks on folder(s)"
						}
					},
					{
						"in": "query",
						"name": "folderChildIncTag",
						"description": "include tag on child folder(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include tag on child folder(s)"
						}
					},
					{
						"in": "query",
						"name": "folderChildIncState",
						"description": "include state (fav,rate) on child folder(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include state (fav,rate) on child folder(s)"
						}
					},
					{
						"in": "query",
						"name": "folderChildIncChildFolderCount",
						"description": "include child folder count on child folder(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include child folder count on child folder(s)"
						}
					},
					{
						"in": "query",
						"name": "folderChildIncTrackCount",
						"description": "include track count on child folder(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include track count on child folder(s)"
						}
					},
					{
						"in": "query",
						"name": "folderChildIncArtworkCount",
						"description": "include artwork count on child folder(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include artwork count on child folder(s)"
						}
					},
					{
						"in": "query",
						"name": "folderChildIncParents",
						"description": "include a list of all parent folder ids/names on child folder(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include a list of all parent folder ids/names on child folder(s)"
						}
					},
					{
						"in": "query",
						"name": "folderChildIncInfo",
						"description": "include extended meta data on child folder(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include extended meta data on child folder(s)"
						}
					},
					{
						"in": "query",
						"name": "folderChildIncSimilar",
						"description": "include similar folders list on child folder(s) - only for folders of type artist",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include similar folders list on child folder(s) - only for folders of type artist"
						}
					},
					{
						"in": "query",
						"name": "folderChildIncArtworkIDs",
						"description": "include artwork images Ids on child folder(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include artwork images Ids on child folder(s)"
						}
					},
					{
						"in": "query",
						"name": "folderChildIncTrackIDs",
						"description": "include track Ids on child folder(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include track Ids on child folder(s)"
						}
					},
					{
						"in": "query",
						"name": "folderChildIncFolderIDs",
						"description": "include children folder Ids on child folder(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include children folder Ids on child folder(s)"
						}
					},
					{
						"in": "query",
						"name": "folderIncTag",
						"description": "include tag on folder(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include tag on folder(s)"
						}
					},
					{
						"in": "query",
						"name": "folderIncState",
						"description": "include state (fav,rate) on folder(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include state (fav,rate) on folder(s)"
						}
					},
					{
						"in": "query",
						"name": "folderIncChildFolderCount",
						"description": "include child folder count on folder(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include child folder count on folder(s)"
						}
					},
					{
						"in": "query",
						"name": "folderIncTrackCount",
						"description": "include track count on folder(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include track count on folder(s)"
						}
					},
					{
						"in": "query",
						"name": "folderIncArtworkCount",
						"description": "include artwork count on folder(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include artwork count on folder(s)"
						}
					},
					{
						"in": "query",
						"name": "folderIncParents",
						"description": "include a list of all parent folder ids/names on folder(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include a list of all parent folder ids/names on folder(s)"
						}
					},
					{
						"in": "query",
						"name": "folderIncInfo",
						"description": "include extended meta data on folder(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include extended meta data on folder(s)"
						}
					},
					{
						"in": "query",
						"name": "folderIncSimilar",
						"description": "include similar folders list on folder(s) - only for folders of type artist",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include similar folders list on folder(s) - only for folders of type artist"
						}
					},
					{
						"in": "query",
						"name": "folderIncArtworkIDs",
						"description": "include artwork images Ids on folder(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include artwork images Ids on folder(s)"
						}
					},
					{
						"in": "query",
						"name": "folderIncTrackIDs",
						"description": "include track Ids on folder(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include track Ids on folder(s)"
						}
					},
					{
						"in": "query",
						"name": "folderIncFolderIDs",
						"description": "include children folder Ids on folder(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include children folder Ids on folder(s)"
						}
					},
					{
						"in": "query",
						"name": "id",
						"description": "Folder Id",
						"required": true,
						"example": "c0ffeec0-ffee-c0ff-eec0-ffeec0ffeec0",
						"schema": {
							"$ref": "#/components/schemas/ID"
						}
					}
				],
				"responses": {
					"200": {
						"description": "json data",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Folder"
								}
							}
						}
					},
					"400": {
						"description": "Missing parameter"
					},
					"401": {
						"description": "Unauthorized"
					},
					"404": {
						"description": "Item not found"
					},
					"422": {
						"description": "Invalid parameter"
					}
				},
				"security": [
					{
						"cookieAuth": [
							"stream"
						]
					},
					{
						"bearerAuth": [
							"stream"
						]
					}
				]
			}
		},
		"/folder/index": {
			"get": {
				"operationId": "FolderController.index",
				"summary": "Get Index",
				"description": "Get the Navigation Index for Folders",
				"tags": [
					"Folder"
				],
				"parameters": [
					{
						"in": "query",
						"name": "query",
						"description": "filter by Search Query",
						"required": false,
						"example": "awesome",
						"schema": {
							"type": "string",
							"description": "filter by Search Query"
						}
					},
					{
						"in": "query",
						"name": "name",
						"description": "filter by Name",
						"required": false,
						"example": "Awesome Collection",
						"schema": {
							"type": "string",
							"description": "filter by Name"
						}
					},
					{
						"in": "query",
						"name": "ids",
						"description": "filter by Folder Ids",
						"required": false,
						"example": "c0ffeec0-ffee-c0ff-eec0-ffeec0ffeec0",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/components/schemas/ID"
							}
						}
					},
					{
						"in": "query",
						"name": "since",
						"description": "filter by Creation timestamp",
						"required": false,
						"example": "2000-12-31T23:00:00.000Z",
						"schema": {
							"type": "integer",
							"minimum": 0,
							"description": "filter by Creation timestamp"
						}
					},
					{
						"in": "query",
						"name": "parentIDs",
						"description": "filter by Folder Parent Ids",
						"required": false,
						"example": "c0ffeec0-ffee-c0ff-eec0-ffeec0ffeec0",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/components/schemas/ID"
							}
						}
					},
					{
						"in": "query",
						"name": "childOfID",
						"description": "filter if folder is in folder id (or its child folders)",
						"required": false,
						"example": "c0ffeec0-ffee-c0ff-eec0-ffeec0ffeec0",
						"schema": {
							"$ref": "#/components/schemas/ID"
						}
					},
					{
						"in": "query",
						"name": "level",
						"description": "filter by Folder Tree Level",
						"required": false,
						"example": 4,
						"schema": {
							"type": "integer",
							"minimum": 0,
							"description": "filter by Folder Tree Level"
						}
					},
					{
						"in": "query",
						"name": "albumTypes",
						"description": "filter by Album Types",
						"required": false,
						"example": [
							"live"
						],
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/components/schemas/AlbumType"
							}
						}
					},
					{
						"in": "query",
						"name": "folderTypes",
						"description": "filter by Folder Types",
						"required": false,
						"example": [
							"collection"
						],
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/components/schemas/FolderType"
							}
						}
					},
					{
						"in": "query",
						"name": "genres",
						"description": "filter by Genres",
						"required": false,
						"example": [
							"Pop"
						],
						"schema": {
							"type": "array",
							"items": {
								"type": "string",
								"description": "filter by Genres"
							}
						}
					},
					{
						"in": "query",
						"name": "album",
						"description": "filter by Album Name",
						"required": false,
						"example": [
							"The Awesome Album"
						],
						"schema": {
							"type": "array",
							"items": {
								"type": "string",
								"description": "filter by Album Name"
							}
						}
					},
					{
						"in": "query",
						"name": "artist",
						"description": "filter by Artist Name",
						"required": false,
						"example": [
							"The Awesome Artist"
						],
						"schema": {
							"type": "array",
							"items": {
								"type": "string",
								"description": "filter by Artist Name"
							}
						}
					},
					{
						"in": "query",
						"name": "artistSort",
						"description": "filter by Artist Sort Name",
						"required": false,
						"example": [
							"Awesome Artist, The"
						],
						"schema": {
							"type": "array",
							"items": {
								"type": "string",
								"description": "filter by Artist Sort Name"
							}
						}
					},
					{
						"in": "query",
						"name": "title",
						"description": "filter by Title",
						"required": false,
						"example": "Awesome Folder",
						"schema": {
							"type": "array",
							"items": {
								"type": "string",
								"description": "filter by Title"
							}
						}
					},
					{
						"in": "query",
						"name": "fromYear",
						"description": "filter by since year",
						"required": false,
						"example": 2001,
						"schema": {
							"type": "integer",
							"minimum": 0,
							"description": "filter by since year"
						}
					},
					{
						"in": "query",
						"name": "toYear",
						"description": "filter by until year",
						"required": false,
						"example": 2001,
						"schema": {
							"type": "integer",
							"minimum": 0,
							"description": "filter by until year"
						}
					},
					{
						"in": "query",
						"name": "mbReleaseIDs",
						"description": "filter by MusicBrainz Release Ids",
						"required": false,
						"example": [
							"d5b1d8ab-9a76-4c31-9b51-1049841b8c7e"
						],
						"schema": {
							"type": "array",
							"items": {
								"type": "string",
								"description": "filter by MusicBrainz Release Ids"
							}
						}
					},
					{
						"in": "query",
						"name": "mbReleaseGroupIDs",
						"description": "filter by MusicBrainz Release Group Ids",
						"required": false,
						"example": [
							"68445df6-13b2-360b-b43f-7b286e506c7c"
						],
						"schema": {
							"type": "array",
							"items": {
								"type": "string",
								"description": "filter by MusicBrainz Release Group Ids"
							}
						}
					},
					{
						"in": "query",
						"name": "mbAlbumTypes",
						"description": "filter by MusicBrainz Album Type",
						"required": false,
						"example": [
							"album"
						],
						"schema": {
							"type": "array",
							"items": {
								"type": "string",
								"description": "filter by MusicBrainz Album Type"
							}
						}
					},
					{
						"in": "query",
						"name": "mbArtistIDs",
						"description": "filter by MusicBrainz Artist Ids",
						"required": false,
						"example": [
							"b15ebd71-a252-417d-9e1c-3e6863da68f8"
						],
						"schema": {
							"type": "array",
							"items": {
								"type": "string",
								"description": "filter by MusicBrainz Artist Ids"
							}
						}
					},
					{
						"in": "query",
						"name": "artworksIDs",
						"description": "filter by Artwork Ids",
						"required": false,
						"example": "c0ffeec0-ffee-c0ff-eec0-ffeec0ffeec0",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/components/schemas/ID"
							}
						}
					},
					{
						"in": "query",
						"name": "rootIDs",
						"description": "filter by Root Ids",
						"required": false,
						"example": "c0ffeec0-ffee-c0ff-eec0-ffeec0ffeec0",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/components/schemas/ID"
							}
						}
					},
					{
						"in": "query",
						"name": "trackIDs",
						"description": "filter by Track Ids",
						"required": false,
						"example": "c0ffeec0-ffee-c0ff-eec0-ffeec0ffeec0",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/components/schemas/ID"
							}
						}
					},
					{
						"in": "query",
						"name": "albumIDs",
						"description": "filter by Album Ids",
						"required": false,
						"example": "c0ffeec0-ffee-c0ff-eec0-ffeec0ffeec0",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/components/schemas/ID"
							}
						}
					},
					{
						"in": "query",
						"name": "artistIDs",
						"description": "filter by Artist Ids",
						"required": false,
						"example": "c0ffeec0-ffee-c0ff-eec0-ffeec0ffeec0",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/components/schemas/ID"
							}
						}
					},
					{
						"in": "query",
						"name": "seriesIDs",
						"description": "filter by Series Ids",
						"required": false,
						"example": "c0ffeec0-ffee-c0ff-eec0-ffeec0ffeec0",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/components/schemas/ID"
							}
						}
					}
				],
				"responses": {
					"200": {
						"description": "json data",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/FolderIndex"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"404": {
						"description": "Item not found"
					},
					"422": {
						"description": "Invalid parameter"
					}
				},
				"security": [
					{
						"cookieAuth": [
							"stream"
						]
					},
					{
						"bearerAuth": [
							"stream"
						]
					}
				]
			}
		},
		"/folder/search": {
			"get": {
				"operationId": "FolderController.search",
				"summary": "Search Folders",
				"description": "Search Folders",
				"tags": [
					"Folder"
				],
				"parameters": [
					{
						"in": "query",
						"name": "list",
						"description": "filter by special list",
						"required": false,
						"example": "faved",
						"schema": {
							"$ref": "#/components/schemas/ListType"
						}
					},
					{
						"in": "query",
						"name": "orderDesc",
						"description": "order direction ascending or descending",
						"required": false,
						"example": true,
						"schema": {
							"type": "boolean",
							"description": "order direction ascending or descending"
						}
					},
					{
						"in": "query",
						"name": "orderBy",
						"description": "order by field",
						"required": false,
						"schema": {
							"$ref": "#/components/schemas/FolderOrderFields"
						}
					},
					{
						"in": "query",
						"name": "query",
						"description": "filter by Search Query",
						"required": false,
						"example": "awesome",
						"schema": {
							"type": "string",
							"description": "filter by Search Query"
						}
					},
					{
						"in": "query",
						"name": "name",
						"description": "filter by Name",
						"required": false,
						"example": "Awesome Collection",
						"schema": {
							"type": "string",
							"description": "filter by Name"
						}
					},
					{
						"in": "query",
						"name": "ids",
						"description": "filter by Folder Ids",
						"required": false,
						"example": "c0ffeec0-ffee-c0ff-eec0-ffeec0ffeec0",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/components/schemas/ID"
							}
						}
					},
					{
						"in": "query",
						"name": "since",
						"description": "filter by Creation timestamp",
						"required": false,
						"example": "2000-12-31T23:00:00.000Z",
						"schema": {
							"type": "integer",
							"minimum": 0,
							"description": "filter by Creation timestamp"
						}
					},
					{
						"in": "query",
						"name": "parentIDs",
						"description": "filter by Folder Parent Ids",
						"required": false,
						"example": "c0ffeec0-ffee-c0ff-eec0-ffeec0ffeec0",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/components/schemas/ID"
							}
						}
					},
					{
						"in": "query",
						"name": "childOfID",
						"description": "filter if folder is in folder id (or its child folders)",
						"required": false,
						"example": "c0ffeec0-ffee-c0ff-eec0-ffeec0ffeec0",
						"schema": {
							"$ref": "#/components/schemas/ID"
						}
					},
					{
						"in": "query",
						"name": "level",
						"description": "filter by Folder Tree Level",
						"required": false,
						"example": 4,
						"schema": {
							"type": "integer",
							"minimum": 0,
							"description": "filter by Folder Tree Level"
						}
					},
					{
						"in": "query",
						"name": "albumTypes",
						"description": "filter by Album Types",
						"required": false,
						"example": [
							"live"
						],
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/components/schemas/AlbumType"
							}
						}
					},
					{
						"in": "query",
						"name": "folderTypes",
						"description": "filter by Folder Types",
						"required": false,
						"example": [
							"collection"
						],
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/components/schemas/FolderType"
							}
						}
					},
					{
						"in": "query",
						"name": "genres",
						"description": "filter by Genres",
						"required": false,
						"example": [
							"Pop"
						],
						"schema": {
							"type": "array",
							"items": {
								"type": "string",
								"description": "filter by Genres"
							}
						}
					},
					{
						"in": "query",
						"name": "album",
						"description": "filter by Album Name",
						"required": false,
						"example": [
							"The Awesome Album"
						],
						"schema": {
							"type": "array",
							"items": {
								"type": "string",
								"description": "filter by Album Name"
							}
						}
					},
					{
						"in": "query",
						"name": "artist",
						"description": "filter by Artist Name",
						"required": false,
						"example": [
							"The Awesome Artist"
						],
						"schema": {
							"type": "array",
							"items": {
								"type": "string",
								"description": "filter by Artist Name"
							}
						}
					},
					{
						"in": "query",
						"name": "artistSort",
						"description": "filter by Artist Sort Name",
						"required": false,
						"example": [
							"Awesome Artist, The"
						],
						"schema": {
							"type": "array",
							"items": {
								"type": "string",
								"description": "filter by Artist Sort Name"
							}
						}
					},
					{
						"in": "query",
						"name": "title",
						"description": "filter by Title",
						"required": false,
						"example": "Awesome Folder",
						"schema": {
							"type": "array",
							"items": {
								"type": "string",
								"description": "filter by Title"
							}
						}
					},
					{
						"in": "query",
						"name": "fromYear",
						"description": "filter by since year",
						"required": false,
						"example": 2001,
						"schema": {
							"type": "integer",
							"minimum": 0,
							"description": "filter by since year"
						}
					},
					{
						"in": "query",
						"name": "toYear",
						"description": "filter by until year",
						"required": false,
						"example": 2001,
						"schema": {
							"type": "integer",
							"minimum": 0,
							"description": "filter by until year"
						}
					},
					{
						"in": "query",
						"name": "mbReleaseIDs",
						"description": "filter by MusicBrainz Release Ids",
						"required": false,
						"example": [
							"d5b1d8ab-9a76-4c31-9b51-1049841b8c7e"
						],
						"schema": {
							"type": "array",
							"items": {
								"type": "string",
								"description": "filter by MusicBrainz Release Ids"
							}
						}
					},
					{
						"in": "query",
						"name": "mbReleaseGroupIDs",
						"description": "filter by MusicBrainz Release Group Ids",
						"required": false,
						"example": [
							"68445df6-13b2-360b-b43f-7b286e506c7c"
						],
						"schema": {
							"type": "array",
							"items": {
								"type": "string",
								"description": "filter by MusicBrainz Release Group Ids"
							}
						}
					},
					{
						"in": "query",
						"name": "mbAlbumTypes",
						"description": "filter by MusicBrainz Album Type",
						"required": false,
						"example": [
							"album"
						],
						"schema": {
							"type": "array",
							"items": {
								"type": "string",
								"description": "filter by MusicBrainz Album Type"
							}
						}
					},
					{
						"in": "query",
						"name": "mbArtistIDs",
						"description": "filter by MusicBrainz Artist Ids",
						"required": false,
						"example": [
							"b15ebd71-a252-417d-9e1c-3e6863da68f8"
						],
						"schema": {
							"type": "array",
							"items": {
								"type": "string",
								"description": "filter by MusicBrainz Artist Ids"
							}
						}
					},
					{
						"in": "query",
						"name": "artworksIDs",
						"description": "filter by Artwork Ids",
						"required": false,
						"example": "c0ffeec0-ffee-c0ff-eec0-ffeec0ffeec0",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/components/schemas/ID"
							}
						}
					},
					{
						"in": "query",
						"name": "rootIDs",
						"description": "filter by Root Ids",
						"required": false,
						"example": "c0ffeec0-ffee-c0ff-eec0-ffeec0ffeec0",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/components/schemas/ID"
							}
						}
					},
					{
						"in": "query",
						"name": "trackIDs",
						"description": "filter by Track Ids",
						"required": false,
						"example": "c0ffeec0-ffee-c0ff-eec0-ffeec0ffeec0",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/components/schemas/ID"
							}
						}
					},
					{
						"in": "query",
						"name": "albumIDs",
						"description": "filter by Album Ids",
						"required": false,
						"example": "c0ffeec0-ffee-c0ff-eec0-ffeec0ffeec0",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/components/schemas/ID"
							}
						}
					},
					{
						"in": "query",
						"name": "artistIDs",
						"description": "filter by Artist Ids",
						"required": false,
						"example": "c0ffeec0-ffee-c0ff-eec0-ffeec0ffeec0",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/components/schemas/ID"
							}
						}
					},
					{
						"in": "query",
						"name": "seriesIDs",
						"description": "filter by Series Ids",
						"required": false,
						"example": "c0ffeec0-ffee-c0ff-eec0-ffeec0ffeec0",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/components/schemas/ID"
							}
						}
					},
					{
						"in": "query",
						"name": "artworkIncState",
						"description": "include state (fav,rate) on artwork(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include state (fav,rate) on artwork(s)"
						}
					},
					{
						"in": "query",
						"name": "trackIncMedia",
						"description": "include media information on track(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include media information on track(s)"
						}
					},
					{
						"in": "query",
						"name": "trackIncTag",
						"description": "include tag on track(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include tag on track(s)"
						}
					},
					{
						"in": "query",
						"name": "trackIncRawTag",
						"description": "include raw tag on track(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include raw tag on track(s)"
						}
					},
					{
						"in": "query",
						"name": "trackIncState",
						"description": "include user states (fav,rate) on track(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include user states (fav,rate) on track(s)"
						}
					},
					{
						"in": "query",
						"name": "folderIncArtworks",
						"description": "include artwork images list on folder(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include artwork images list on folder(s)"
						}
					},
					{
						"in": "query",
						"name": "folderIncChildren",
						"description": "include tracks and sub folders on folder(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include tracks and sub folders on folder(s)"
						}
					},
					{
						"in": "query",
						"name": "folderIncFolders",
						"description": "include child folders on folder(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include child folders on folder(s)"
						}
					},
					{
						"in": "query",
						"name": "folderIncTracks",
						"description": "include tracks on folder(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include tracks on folder(s)"
						}
					},
					{
						"in": "query",
						"name": "folderChildIncTag",
						"description": "include tag on child folder(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include tag on child folder(s)"
						}
					},
					{
						"in": "query",
						"name": "folderChildIncState",
						"description": "include state (fav,rate) on child folder(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include state (fav,rate) on child folder(s)"
						}
					},
					{
						"in": "query",
						"name": "folderChildIncChildFolderCount",
						"description": "include child folder count on child folder(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include child folder count on child folder(s)"
						}
					},
					{
						"in": "query",
						"name": "folderChildIncTrackCount",
						"description": "include track count on child folder(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include track count on child folder(s)"
						}
					},
					{
						"in": "query",
						"name": "folderChildIncArtworkCount",
						"description": "include artwork count on child folder(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include artwork count on child folder(s)"
						}
					},
					{
						"in": "query",
						"name": "folderChildIncParents",
						"description": "include a list of all parent folder ids/names on child folder(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include a list of all parent folder ids/names on child folder(s)"
						}
					},
					{
						"in": "query",
						"name": "folderChildIncInfo",
						"description": "include extended meta data on child folder(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include extended meta data on child folder(s)"
						}
					},
					{
						"in": "query",
						"name": "folderChildIncSimilar",
						"description": "include similar folders list on child folder(s) - only for folders of type artist",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include similar folders list on child folder(s) - only for folders of type artist"
						}
					},
					{
						"in": "query",
						"name": "folderChildIncArtworkIDs",
						"description": "include artwork images Ids on child folder(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include artwork images Ids on child folder(s)"
						}
					},
					{
						"in": "query",
						"name": "folderChildIncTrackIDs",
						"description": "include track Ids on child folder(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include track Ids on child folder(s)"
						}
					},
					{
						"in": "query",
						"name": "folderChildIncFolderIDs",
						"description": "include children folder Ids on child folder(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include children folder Ids on child folder(s)"
						}
					},
					{
						"in": "query",
						"name": "folderIncTag",
						"description": "include tag on folder(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include tag on folder(s)"
						}
					},
					{
						"in": "query",
						"name": "folderIncState",
						"description": "include state (fav,rate) on folder(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include state (fav,rate) on folder(s)"
						}
					},
					{
						"in": "query",
						"name": "folderIncChildFolderCount",
						"description": "include child folder count on folder(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include child folder count on folder(s)"
						}
					},
					{
						"in": "query",
						"name": "folderIncTrackCount",
						"description": "include track count on folder(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include track count on folder(s)"
						}
					},
					{
						"in": "query",
						"name": "folderIncArtworkCount",
						"description": "include artwork count on folder(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include artwork count on folder(s)"
						}
					},
					{
						"in": "query",
						"name": "folderIncParents",
						"description": "include a list of all parent folder ids/names on folder(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include a list of all parent folder ids/names on folder(s)"
						}
					},
					{
						"in": "query",
						"name": "folderIncInfo",
						"description": "include extended meta data on folder(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include extended meta data on folder(s)"
						}
					},
					{
						"in": "query",
						"name": "folderIncSimilar",
						"description": "include similar folders list on folder(s) - only for folders of type artist",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include similar folders list on folder(s) - only for folders of type artist"
						}
					},
					{
						"in": "query",
						"name": "folderIncArtworkIDs",
						"description": "include artwork images Ids on folder(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include artwork images Ids on folder(s)"
						}
					},
					{
						"in": "query",
						"name": "folderIncTrackIDs",
						"description": "include track Ids on folder(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include track Ids on folder(s)"
						}
					},
					{
						"in": "query",
						"name": "folderIncFolderIDs",
						"description": "include children folder Ids on folder(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include children folder Ids on folder(s)"
						}
					},
					{
						"in": "query",
						"name": "skip",
						"description": "return items starting from offset position",
						"required": false,
						"example": 0,
						"schema": {
							"type": "integer",
							"default": 0,
							"minimum": 0,
							"description": "return items starting from offset position"
						}
					},
					{
						"in": "query",
						"name": "take",
						"description": "amount of returned items",
						"required": false,
						"example": 25,
						"schema": {
							"type": "integer",
							"minimum": 1,
							"description": "amount of returned items"
						}
					}
				],
				"responses": {
					"200": {
						"description": "json data",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/FolderPage"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"404": {
						"description": "Item not found"
					},
					"422": {
						"description": "Invalid parameter"
					}
				},
				"security": [
					{
						"cookieAuth": [
							"stream"
						]
					},
					{
						"bearerAuth": [
							"stream"
						]
					}
				]
			}
		},
		"/folder/tracks": {
			"get": {
				"operationId": "FolderController.tracks",
				"summary": "Get Tracks",
				"description": "Get Tracks of Folders",
				"tags": [
					"Folder"
				],
				"parameters": [
					{
						"in": "query",
						"name": "orderDesc",
						"description": "order direction ascending or descending",
						"required": false,
						"example": true,
						"schema": {
							"type": "boolean",
							"description": "order direction ascending or descending"
						}
					},
					{
						"in": "query",
						"name": "orderBy",
						"description": "order by field",
						"required": false,
						"schema": {
							"$ref": "#/components/schemas/TrackOrderFields"
						}
					},
					{
						"in": "query",
						"name": "query",
						"description": "filter by Search Query",
						"required": false,
						"example": "awesome",
						"schema": {
							"type": "string",
							"description": "filter by Search Query"
						}
					},
					{
						"in": "query",
						"name": "name",
						"description": "filter by Name",
						"required": false,
						"example": "Awesome Collection",
						"schema": {
							"type": "string",
							"description": "filter by Name"
						}
					},
					{
						"in": "query",
						"name": "ids",
						"description": "filter by Folder Ids",
						"required": false,
						"example": "c0ffeec0-ffee-c0ff-eec0-ffeec0ffeec0",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/components/schemas/ID"
							}
						}
					},
					{
						"in": "query",
						"name": "since",
						"description": "filter by Creation timestamp",
						"required": false,
						"example": "2000-12-31T23:00:00.000Z",
						"schema": {
							"type": "integer",
							"minimum": 0,
							"description": "filter by Creation timestamp"
						}
					},
					{
						"in": "query",
						"name": "parentIDs",
						"description": "filter by Folder Parent Ids",
						"required": false,
						"example": "c0ffeec0-ffee-c0ff-eec0-ffeec0ffeec0",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/components/schemas/ID"
							}
						}
					},
					{
						"in": "query",
						"name": "childOfID",
						"description": "filter if folder is in folder id (or its child folders)",
						"required": false,
						"example": "c0ffeec0-ffee-c0ff-eec0-ffeec0ffeec0",
						"schema": {
							"$ref": "#/components/schemas/ID"
						}
					},
					{
						"in": "query",
						"name": "level",
						"description": "filter by Folder Tree Level",
						"required": false,
						"example": 4,
						"schema": {
							"type": "integer",
							"minimum": 0,
							"description": "filter by Folder Tree Level"
						}
					},
					{
						"in": "query",
						"name": "albumTypes",
						"description": "filter by Album Types",
						"required": false,
						"example": [
							"live"
						],
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/components/schemas/AlbumType"
							}
						}
					},
					{
						"in": "query",
						"name": "folderTypes",
						"description": "filter by Folder Types",
						"required": false,
						"example": [
							"collection"
						],
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/components/schemas/FolderType"
							}
						}
					},
					{
						"in": "query",
						"name": "genres",
						"description": "filter by Genres",
						"required": false,
						"example": [
							"Pop"
						],
						"schema": {
							"type": "array",
							"items": {
								"type": "string",
								"description": "filter by Genres"
							}
						}
					},
					{
						"in": "query",
						"name": "album",
						"description": "filter by Album Name",
						"required": false,
						"example": [
							"The Awesome Album"
						],
						"schema": {
							"type": "array",
							"items": {
								"type": "string",
								"description": "filter by Album Name"
							}
						}
					},
					{
						"in": "query",
						"name": "artist",
						"description": "filter by Artist Name",
						"required": false,
						"example": [
							"The Awesome Artist"
						],
						"schema": {
							"type": "array",
							"items": {
								"type": "string",
								"description": "filter by Artist Name"
							}
						}
					},
					{
						"in": "query",
						"name": "artistSort",
						"description": "filter by Artist Sort Name",
						"required": false,
						"example": [
							"Awesome Artist, The"
						],
						"schema": {
							"type": "array",
							"items": {
								"type": "string",
								"description": "filter by Artist Sort Name"
							}
						}
					},
					{
						"in": "query",
						"name": "title",
						"description": "filter by Title",
						"required": false,
						"example": "Awesome Folder",
						"schema": {
							"type": "array",
							"items": {
								"type": "string",
								"description": "filter by Title"
							}
						}
					},
					{
						"in": "query",
						"name": "fromYear",
						"description": "filter by since year",
						"required": false,
						"example": 2001,
						"schema": {
							"type": "integer",
							"minimum": 0,
							"description": "filter by since year"
						}
					},
					{
						"in": "query",
						"name": "toYear",
						"description": "filter by until year",
						"required": false,
						"example": 2001,
						"schema": {
							"type": "integer",
							"minimum": 0,
							"description": "filter by until year"
						}
					},
					{
						"in": "query",
						"name": "mbReleaseIDs",
						"description": "filter by MusicBrainz Release Ids",
						"required": false,
						"example": [
							"d5b1d8ab-9a76-4c31-9b51-1049841b8c7e"
						],
						"schema": {
							"type": "array",
							"items": {
								"type": "string",
								"description": "filter by MusicBrainz Release Ids"
							}
						}
					},
					{
						"in": "query",
						"name": "mbReleaseGroupIDs",
						"description": "filter by MusicBrainz Release Group Ids",
						"required": false,
						"example": [
							"68445df6-13b2-360b-b43f-7b286e506c7c"
						],
						"schema": {
							"type": "array",
							"items": {
								"type": "string",
								"description": "filter by MusicBrainz Release Group Ids"
							}
						}
					},
					{
						"in": "query",
						"name": "mbAlbumTypes",
						"description": "filter by MusicBrainz Album Type",
						"required": false,
						"example": [
							"album"
						],
						"schema": {
							"type": "array",
							"items": {
								"type": "string",
								"description": "filter by MusicBrainz Album Type"
							}
						}
					},
					{
						"in": "query",
						"name": "mbArtistIDs",
						"description": "filter by MusicBrainz Artist Ids",
						"required": false,
						"example": [
							"b15ebd71-a252-417d-9e1c-3e6863da68f8"
						],
						"schema": {
							"type": "array",
							"items": {
								"type": "string",
								"description": "filter by MusicBrainz Artist Ids"
							}
						}
					},
					{
						"in": "query",
						"name": "artworksIDs",
						"description": "filter by Artwork Ids",
						"required": false,
						"example": "c0ffeec0-ffee-c0ff-eec0-ffeec0ffeec0",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/components/schemas/ID"
							}
						}
					},
					{
						"in": "query",
						"name": "rootIDs",
						"description": "filter by Root Ids",
						"required": false,
						"example": "c0ffeec0-ffee-c0ff-eec0-ffeec0ffeec0",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/components/schemas/ID"
							}
						}
					},
					{
						"in": "query",
						"name": "trackIDs",
						"description": "filter by Track Ids",
						"required": false,
						"example": "c0ffeec0-ffee-c0ff-eec0-ffeec0ffeec0",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/components/schemas/ID"
							}
						}
					},
					{
						"in": "query",
						"name": "albumIDs",
						"description": "filter by Album Ids",
						"required": false,
						"example": "c0ffeec0-ffee-c0ff-eec0-ffeec0ffeec0",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/components/schemas/ID"
							}
						}
					},
					{
						"in": "query",
						"name": "artistIDs",
						"description": "filter by Artist Ids",
						"required": false,
						"example": "c0ffeec0-ffee-c0ff-eec0-ffeec0ffeec0",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/components/schemas/ID"
							}
						}
					},
					{
						"in": "query",
						"name": "seriesIDs",
						"description": "filter by Series Ids",
						"required": false,
						"example": "c0ffeec0-ffee-c0ff-eec0-ffeec0ffeec0",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/components/schemas/ID"
							}
						}
					},
					{
						"in": "query",
						"name": "trackIncMedia",
						"description": "include media information on track(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include media information on track(s)"
						}
					},
					{
						"in": "query",
						"name": "trackIncTag",
						"description": "include tag on track(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include tag on track(s)"
						}
					},
					{
						"in": "query",
						"name": "trackIncRawTag",
						"description": "include raw tag on track(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include raw tag on track(s)"
						}
					},
					{
						"in": "query",
						"name": "trackIncState",
						"description": "include user states (fav,rate) on track(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include user states (fav,rate) on track(s)"
						}
					},
					{
						"in": "query",
						"name": "skip",
						"description": "return items starting from offset position",
						"required": false,
						"example": 0,
						"schema": {
							"type": "integer",
							"default": 0,
							"minimum": 0,
							"description": "return items starting from offset position"
						}
					},
					{
						"in": "query",
						"name": "take",
						"description": "amount of returned items",
						"required": false,
						"example": 25,
						"schema": {
							"type": "integer",
							"minimum": 1,
							"description": "amount of returned items"
						}
					}
				],
				"responses": {
					"200": {
						"description": "json data",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/TrackPage"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"404": {
						"description": "Item not found"
					},
					"422": {
						"description": "Invalid parameter"
					}
				},
				"security": [
					{
						"cookieAuth": [
							"stream"
						]
					},
					{
						"bearerAuth": [
							"stream"
						]
					}
				]
			}
		},
		"/folder/subfolders": {
			"get": {
				"operationId": "FolderController.subfolders",
				"summary": "Get Sub-Folders",
				"description": "Get Child Folders of Folders",
				"tags": [
					"Folder"
				],
				"parameters": [
					{
						"in": "query",
						"name": "orderDesc",
						"description": "order direction ascending or descending",
						"required": false,
						"example": true,
						"schema": {
							"type": "boolean",
							"description": "order direction ascending or descending"
						}
					},
					{
						"in": "query",
						"name": "orderBy",
						"description": "order by field",
						"required": false,
						"schema": {
							"$ref": "#/components/schemas/FolderOrderFields"
						}
					},
					{
						"in": "query",
						"name": "query",
						"description": "filter by Search Query",
						"required": false,
						"example": "awesome",
						"schema": {
							"type": "string",
							"description": "filter by Search Query"
						}
					},
					{
						"in": "query",
						"name": "name",
						"description": "filter by Name",
						"required": false,
						"example": "Awesome Collection",
						"schema": {
							"type": "string",
							"description": "filter by Name"
						}
					},
					{
						"in": "query",
						"name": "ids",
						"description": "filter by Folder Ids",
						"required": false,
						"example": "c0ffeec0-ffee-c0ff-eec0-ffeec0ffeec0",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/components/schemas/ID"
							}
						}
					},
					{
						"in": "query",
						"name": "since",
						"description": "filter by Creation timestamp",
						"required": false,
						"example": "2000-12-31T23:00:00.000Z",
						"schema": {
							"type": "integer",
							"minimum": 0,
							"description": "filter by Creation timestamp"
						}
					},
					{
						"in": "query",
						"name": "parentIDs",
						"description": "filter by Folder Parent Ids",
						"required": false,
						"example": "c0ffeec0-ffee-c0ff-eec0-ffeec0ffeec0",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/components/schemas/ID"
							}
						}
					},
					{
						"in": "query",
						"name": "childOfID",
						"description": "filter if folder is in folder id (or its child folders)",
						"required": false,
						"example": "c0ffeec0-ffee-c0ff-eec0-ffeec0ffeec0",
						"schema": {
							"$ref": "#/components/schemas/ID"
						}
					},
					{
						"in": "query",
						"name": "level",
						"description": "filter by Folder Tree Level",
						"required": false,
						"example": 4,
						"schema": {
							"type": "integer",
							"minimum": 0,
							"description": "filter by Folder Tree Level"
						}
					},
					{
						"in": "query",
						"name": "albumTypes",
						"description": "filter by Album Types",
						"required": false,
						"example": [
							"live"
						],
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/components/schemas/AlbumType"
							}
						}
					},
					{
						"in": "query",
						"name": "folderTypes",
						"description": "filter by Folder Types",
						"required": false,
						"example": [
							"collection"
						],
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/components/schemas/FolderType"
							}
						}
					},
					{
						"in": "query",
						"name": "genres",
						"description": "filter by Genres",
						"required": false,
						"example": [
							"Pop"
						],
						"schema": {
							"type": "array",
							"items": {
								"type": "string",
								"description": "filter by Genres"
							}
						}
					},
					{
						"in": "query",
						"name": "album",
						"description": "filter by Album Name",
						"required": false,
						"example": [
							"The Awesome Album"
						],
						"schema": {
							"type": "array",
							"items": {
								"type": "string",
								"description": "filter by Album Name"
							}
						}
					},
					{
						"in": "query",
						"name": "artist",
						"description": "filter by Artist Name",
						"required": false,
						"example": [
							"The Awesome Artist"
						],
						"schema": {
							"type": "array",
							"items": {
								"type": "string",
								"description": "filter by Artist Name"
							}
						}
					},
					{
						"in": "query",
						"name": "artistSort",
						"description": "filter by Artist Sort Name",
						"required": false,
						"example": [
							"Awesome Artist, The"
						],
						"schema": {
							"type": "array",
							"items": {
								"type": "string",
								"description": "filter by Artist Sort Name"
							}
						}
					},
					{
						"in": "query",
						"name": "title",
						"description": "filter by Title",
						"required": false,
						"example": "Awesome Folder",
						"schema": {
							"type": "array",
							"items": {
								"type": "string",
								"description": "filter by Title"
							}
						}
					},
					{
						"in": "query",
						"name": "fromYear",
						"description": "filter by since year",
						"required": false,
						"example": 2001,
						"schema": {
							"type": "integer",
							"minimum": 0,
							"description": "filter by since year"
						}
					},
					{
						"in": "query",
						"name": "toYear",
						"description": "filter by until year",
						"required": false,
						"example": 2001,
						"schema": {
							"type": "integer",
							"minimum": 0,
							"description": "filter by until year"
						}
					},
					{
						"in": "query",
						"name": "mbReleaseIDs",
						"description": "filter by MusicBrainz Release Ids",
						"required": false,
						"example": [
							"d5b1d8ab-9a76-4c31-9b51-1049841b8c7e"
						],
						"schema": {
							"type": "array",
							"items": {
								"type": "string",
								"description": "filter by MusicBrainz Release Ids"
							}
						}
					},
					{
						"in": "query",
						"name": "mbReleaseGroupIDs",
						"description": "filter by MusicBrainz Release Group Ids",
						"required": false,
						"example": [
							"68445df6-13b2-360b-b43f-7b286e506c7c"
						],
						"schema": {
							"type": "array",
							"items": {
								"type": "string",
								"description": "filter by MusicBrainz Release Group Ids"
							}
						}
					},
					{
						"in": "query",
						"name": "mbAlbumTypes",
						"description": "filter by MusicBrainz Album Type",
						"required": false,
						"example": [
							"album"
						],
						"schema": {
							"type": "array",
							"items": {
								"type": "string",
								"description": "filter by MusicBrainz Album Type"
							}
						}
					},
					{
						"in": "query",
						"name": "mbArtistIDs",
						"description": "filter by MusicBrainz Artist Ids",
						"required": false,
						"example": [
							"b15ebd71-a252-417d-9e1c-3e6863da68f8"
						],
						"schema": {
							"type": "array",
							"items": {
								"type": "string",
								"description": "filter by MusicBrainz Artist Ids"
							}
						}
					},
					{
						"in": "query",
						"name": "artworksIDs",
						"description": "filter by Artwork Ids",
						"required": false,
						"example": "c0ffeec0-ffee-c0ff-eec0-ffeec0ffeec0",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/components/schemas/ID"
							}
						}
					},
					{
						"in": "query",
						"name": "rootIDs",
						"description": "filter by Root Ids",
						"required": false,
						"example": "c0ffeec0-ffee-c0ff-eec0-ffeec0ffeec0",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/components/schemas/ID"
							}
						}
					},
					{
						"in": "query",
						"name": "trackIDs",
						"description": "filter by Track Ids",
						"required": false,
						"example": "c0ffeec0-ffee-c0ff-eec0-ffeec0ffeec0",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/components/schemas/ID"
							}
						}
					},
					{
						"in": "query",
						"name": "albumIDs",
						"description": "filter by Album Ids",
						"required": false,
						"example": "c0ffeec0-ffee-c0ff-eec0-ffeec0ffeec0",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/components/schemas/ID"
							}
						}
					},
					{
						"in": "query",
						"name": "artistIDs",
						"description": "filter by Artist Ids",
						"required": false,
						"example": "c0ffeec0-ffee-c0ff-eec0-ffeec0ffeec0",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/components/schemas/ID"
							}
						}
					},
					{
						"in": "query",
						"name": "seriesIDs",
						"description": "filter by Series Ids",
						"required": false,
						"example": "c0ffeec0-ffee-c0ff-eec0-ffeec0ffeec0",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/components/schemas/ID"
							}
						}
					},
					{
						"in": "query",
						"name": "folderIncTag",
						"description": "include tag on folder(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include tag on folder(s)"
						}
					},
					{
						"in": "query",
						"name": "folderIncState",
						"description": "include state (fav,rate) on folder(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include state (fav,rate) on folder(s)"
						}
					},
					{
						"in": "query",
						"name": "folderIncChildFolderCount",
						"description": "include child folder count on folder(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include child folder count on folder(s)"
						}
					},
					{
						"in": "query",
						"name": "folderIncTrackCount",
						"description": "include track count on folder(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include track count on folder(s)"
						}
					},
					{
						"in": "query",
						"name": "folderIncArtworkCount",
						"description": "include artwork count on folder(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include artwork count on folder(s)"
						}
					},
					{
						"in": "query",
						"name": "folderIncParents",
						"description": "include a list of all parent folder ids/names on folder(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include a list of all parent folder ids/names on folder(s)"
						}
					},
					{
						"in": "query",
						"name": "folderIncInfo",
						"description": "include extended meta data on folder(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include extended meta data on folder(s)"
						}
					},
					{
						"in": "query",
						"name": "folderIncSimilar",
						"description": "include similar folders list on folder(s) - only for folders of type artist",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include similar folders list on folder(s) - only for folders of type artist"
						}
					},
					{
						"in": "query",
						"name": "folderIncArtworkIDs",
						"description": "include artwork images Ids on folder(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include artwork images Ids on folder(s)"
						}
					},
					{
						"in": "query",
						"name": "folderIncTrackIDs",
						"description": "include track Ids on folder(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include track Ids on folder(s)"
						}
					},
					{
						"in": "query",
						"name": "folderIncFolderIDs",
						"description": "include children folder Ids on folder(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include children folder Ids on folder(s)"
						}
					},
					{
						"in": "query",
						"name": "skip",
						"description": "return items starting from offset position",
						"required": false,
						"example": 0,
						"schema": {
							"type": "integer",
							"default": 0,
							"minimum": 0,
							"description": "return items starting from offset position"
						}
					},
					{
						"in": "query",
						"name": "take",
						"description": "amount of returned items",
						"required": false,
						"example": 25,
						"schema": {
							"type": "integer",
							"minimum": 1,
							"description": "amount of returned items"
						}
					}
				],
				"responses": {
					"200": {
						"description": "json data",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/TrackPage"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"404": {
						"description": "Item not found"
					},
					"422": {
						"description": "Invalid parameter"
					}
				},
				"security": [
					{
						"cookieAuth": [
							"stream"
						]
					},
					{
						"bearerAuth": [
							"stream"
						]
					}
				]
			}
		},
		"/folder/artworks": {
			"get": {
				"operationId": "FolderController.artworks",
				"summary": "Get Artwork",
				"description": "Get Artworks of Folders",
				"tags": [
					"Folder"
				],
				"parameters": [
					{
						"in": "query",
						"name": "orderBy",
						"description": "order by field",
						"required": false,
						"schema": {
							"$ref": "#/components/schemas/DefaultOrderFields"
						}
					},
					{
						"in": "query",
						"name": "orderDesc",
						"description": "order direction ascending or descending",
						"required": false,
						"example": true,
						"schema": {
							"type": "boolean",
							"description": "order direction ascending or descending"
						}
					},
					{
						"in": "query",
						"name": "query",
						"description": "filter by Search Query",
						"required": false,
						"example": "awesome",
						"schema": {
							"type": "string",
							"description": "filter by Search Query"
						}
					},
					{
						"in": "query",
						"name": "name",
						"description": "filter by Name",
						"required": false,
						"example": "Awesome Collection",
						"schema": {
							"type": "string",
							"description": "filter by Name"
						}
					},
					{
						"in": "query",
						"name": "ids",
						"description": "filter by Folder Ids",
						"required": false,
						"example": "c0ffeec0-ffee-c0ff-eec0-ffeec0ffeec0",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/components/schemas/ID"
							}
						}
					},
					{
						"in": "query",
						"name": "since",
						"description": "filter by Creation timestamp",
						"required": false,
						"example": "2000-12-31T23:00:00.000Z",
						"schema": {
							"type": "integer",
							"minimum": 0,
							"description": "filter by Creation timestamp"
						}
					},
					{
						"in": "query",
						"name": "parentIDs",
						"description": "filter by Folder Parent Ids",
						"required": false,
						"example": "c0ffeec0-ffee-c0ff-eec0-ffeec0ffeec0",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/components/schemas/ID"
							}
						}
					},
					{
						"in": "query",
						"name": "childOfID",
						"description": "filter if folder is in folder id (or its child folders)",
						"required": false,
						"example": "c0ffeec0-ffee-c0ff-eec0-ffeec0ffeec0",
						"schema": {
							"$ref": "#/components/schemas/ID"
						}
					},
					{
						"in": "query",
						"name": "level",
						"description": "filter by Folder Tree Level",
						"required": false,
						"example": 4,
						"schema": {
							"type": "integer",
							"minimum": 0,
							"description": "filter by Folder Tree Level"
						}
					},
					{
						"in": "query",
						"name": "albumTypes",
						"description": "filter by Album Types",
						"required": false,
						"example": [
							"live"
						],
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/components/schemas/AlbumType"
							}
						}
					},
					{
						"in": "query",
						"name": "folderTypes",
						"description": "filter by Folder Types",
						"required": false,
						"example": [
							"collection"
						],
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/components/schemas/FolderType"
							}
						}
					},
					{
						"in": "query",
						"name": "genres",
						"description": "filter by Genres",
						"required": false,
						"example": [
							"Pop"
						],
						"schema": {
							"type": "array",
							"items": {
								"type": "string",
								"description": "filter by Genres"
							}
						}
					},
					{
						"in": "query",
						"name": "album",
						"description": "filter by Album Name",
						"required": false,
						"example": [
							"The Awesome Album"
						],
						"schema": {
							"type": "array",
							"items": {
								"type": "string",
								"description": "filter by Album Name"
							}
						}
					},
					{
						"in": "query",
						"name": "artist",
						"description": "filter by Artist Name",
						"required": false,
						"example": [
							"The Awesome Artist"
						],
						"schema": {
							"type": "array",
							"items": {
								"type": "string",
								"description": "filter by Artist Name"
							}
						}
					},
					{
						"in": "query",
						"name": "artistSort",
						"description": "filter by Artist Sort Name",
						"required": false,
						"example": [
							"Awesome Artist, The"
						],
						"schema": {
							"type": "array",
							"items": {
								"type": "string",
								"description": "filter by Artist Sort Name"
							}
						}
					},
					{
						"in": "query",
						"name": "title",
						"description": "filter by Title",
						"required": false,
						"example": "Awesome Folder",
						"schema": {
							"type": "array",
							"items": {
								"type": "string",
								"description": "filter by Title"
							}
						}
					},
					{
						"in": "query",
						"name": "fromYear",
						"description": "filter by since year",
						"required": false,
						"example": 2001,
						"schema": {
							"type": "integer",
							"minimum": 0,
							"description": "filter by since year"
						}
					},
					{
						"in": "query",
						"name": "toYear",
						"description": "filter by until year",
						"required": false,
						"example": 2001,
						"schema": {
							"type": "integer",
							"minimum": 0,
							"description": "filter by until year"
						}
					},
					{
						"in": "query",
						"name": "mbReleaseIDs",
						"description": "filter by MusicBrainz Release Ids",
						"required": false,
						"example": [
							"d5b1d8ab-9a76-4c31-9b51-1049841b8c7e"
						],
						"schema": {
							"type": "array",
							"items": {
								"type": "string",
								"description": "filter by MusicBrainz Release Ids"
							}
						}
					},
					{
						"in": "query",
						"name": "mbReleaseGroupIDs",
						"description": "filter by MusicBrainz Release Group Ids",
						"required": false,
						"example": [
							"68445df6-13b2-360b-b43f-7b286e506c7c"
						],
						"schema": {
							"type": "array",
							"items": {
								"type": "string",
								"description": "filter by MusicBrainz Release Group Ids"
							}
						}
					},
					{
						"in": "query",
						"name": "mbAlbumTypes",
						"description": "filter by MusicBrainz Album Type",
						"required": false,
						"example": [
							"album"
						],
						"schema": {
							"type": "array",
							"items": {
								"type": "string",
								"description": "filter by MusicBrainz Album Type"
							}
						}
					},
					{
						"in": "query",
						"name": "mbArtistIDs",
						"description": "filter by MusicBrainz Artist Ids",
						"required": false,
						"example": [
							"b15ebd71-a252-417d-9e1c-3e6863da68f8"
						],
						"schema": {
							"type": "array",
							"items": {
								"type": "string",
								"description": "filter by MusicBrainz Artist Ids"
							}
						}
					},
					{
						"in": "query",
						"name": "artworksIDs",
						"description": "filter by Artwork Ids",
						"required": false,
						"example": "c0ffeec0-ffee-c0ff-eec0-ffeec0ffeec0",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/components/schemas/ID"
							}
						}
					},
					{
						"in": "query",
						"name": "rootIDs",
						"description": "filter by Root Ids",
						"required": false,
						"example": "c0ffeec0-ffee-c0ff-eec0-ffeec0ffeec0",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/components/schemas/ID"
							}
						}
					},
					{
						"in": "query",
						"name": "trackIDs",
						"description": "filter by Track Ids",
						"required": false,
						"example": "c0ffeec0-ffee-c0ff-eec0-ffeec0ffeec0",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/components/schemas/ID"
							}
						}
					},
					{
						"in": "query",
						"name": "albumIDs",
						"description": "filter by Album Ids",
						"required": false,
						"example": "c0ffeec0-ffee-c0ff-eec0-ffeec0ffeec0",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/components/schemas/ID"
							}
						}
					},
					{
						"in": "query",
						"name": "artistIDs",
						"description": "filter by Artist Ids",
						"required": false,
						"example": "c0ffeec0-ffee-c0ff-eec0-ffeec0ffeec0",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/components/schemas/ID"
							}
						}
					},
					{
						"in": "query",
						"name": "seriesIDs",
						"description": "filter by Series Ids",
						"required": false,
						"example": "c0ffeec0-ffee-c0ff-eec0-ffeec0ffeec0",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/components/schemas/ID"
							}
						}
					},
					{
						"in": "query",
						"name": "artworkIncState",
						"description": "include state (fav,rate) on artwork(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include state (fav,rate) on artwork(s)"
						}
					},
					{
						"in": "query",
						"name": "skip",
						"description": "return items starting from offset position",
						"required": false,
						"example": 0,
						"schema": {
							"type": "integer",
							"default": 0,
							"minimum": 0,
							"description": "return items starting from offset position"
						}
					},
					{
						"in": "query",
						"name": "take",
						"description": "amount of returned items",
						"required": false,
						"example": 25,
						"schema": {
							"type": "integer",
							"minimum": 1,
							"description": "amount of returned items"
						}
					}
				],
				"responses": {
					"200": {
						"description": "json data",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ArtworkPage"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"404": {
						"description": "Item not found"
					},
					"422": {
						"description": "Invalid parameter"
					}
				},
				"security": [
					{
						"cookieAuth": [
							"stream"
						]
					},
					{
						"bearerAuth": [
							"stream"
						]
					}
				]
			}
		},
		"/folder/artist/info": {
			"get": {
				"operationId": "FolderController.artistInfo",
				"summary": "Get Artist Info",
				"description": "Get Meta Data Info of an Artist by Folder Id (External Service)",
				"tags": [
					"Folder"
				],
				"parameters": [
					{
						"in": "query",
						"name": "id",
						"description": "Folder Id",
						"required": true,
						"example": "c0ffeec0-ffee-c0ff-eec0-ffeec0ffeec0",
						"schema": {
							"$ref": "#/components/schemas/ID"
						}
					}
				],
				"responses": {
					"200": {
						"description": "json data",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ExtendedInfoResult"
								}
							}
						}
					},
					"400": {
						"description": "Missing parameter"
					},
					"401": {
						"description": "Unauthorized"
					},
					"404": {
						"description": "Item not found"
					},
					"422": {
						"description": "Invalid parameter"
					}
				},
				"security": [
					{
						"cookieAuth": [
							"stream"
						]
					},
					{
						"bearerAuth": [
							"stream"
						]
					}
				]
			}
		},
		"/folder/album/info": {
			"get": {
				"operationId": "FolderController.albumInfo",
				"summary": "Get Album Info",
				"description": "Get Meta Data Info of an Album by Folder Id (External Service)",
				"tags": [
					"Folder"
				],
				"parameters": [
					{
						"in": "query",
						"name": "id",
						"description": "Folder Id",
						"required": true,
						"example": "c0ffeec0-ffee-c0ff-eec0-ffeec0ffeec0",
						"schema": {
							"$ref": "#/components/schemas/ID"
						}
					}
				],
				"responses": {
					"200": {
						"description": "json data",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ExtendedInfoResult"
								}
							}
						}
					},
					"400": {
						"description": "Missing parameter"
					},
					"401": {
						"description": "Unauthorized"
					},
					"404": {
						"description": "Item not found"
					},
					"422": {
						"description": "Invalid parameter"
					}
				},
				"security": [
					{
						"cookieAuth": [
							"stream"
						]
					},
					{
						"bearerAuth": [
							"stream"
						]
					}
				]
			}
		},
		"/folder/artist/similar": {
			"get": {
				"operationId": "FolderController.artistsSimilar",
				"summary": "Get similar Artists",
				"description": "Get similar Artist Folders of a Folder by Id (External Service)",
				"tags": [
					"Folder"
				],
				"parameters": [
					{
						"in": "query",
						"name": "folderIncTag",
						"description": "include tag on folder(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include tag on folder(s)"
						}
					},
					{
						"in": "query",
						"name": "folderIncState",
						"description": "include state (fav,rate) on folder(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include state (fav,rate) on folder(s)"
						}
					},
					{
						"in": "query",
						"name": "folderIncChildFolderCount",
						"description": "include child folder count on folder(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include child folder count on folder(s)"
						}
					},
					{
						"in": "query",
						"name": "folderIncTrackCount",
						"description": "include track count on folder(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include track count on folder(s)"
						}
					},
					{
						"in": "query",
						"name": "folderIncArtworkCount",
						"description": "include artwork count on folder(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include artwork count on folder(s)"
						}
					},
					{
						"in": "query",
						"name": "folderIncParents",
						"description": "include a list of all parent folder ids/names on folder(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include a list of all parent folder ids/names on folder(s)"
						}
					},
					{
						"in": "query",
						"name": "folderIncInfo",
						"description": "include extended meta data on folder(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include extended meta data on folder(s)"
						}
					},
					{
						"in": "query",
						"name": "folderIncSimilar",
						"description": "include similar folders list on folder(s) - only for folders of type artist",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include similar folders list on folder(s) - only for folders of type artist"
						}
					},
					{
						"in": "query",
						"name": "folderIncArtworkIDs",
						"description": "include artwork images Ids on folder(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include artwork images Ids on folder(s)"
						}
					},
					{
						"in": "query",
						"name": "folderIncTrackIDs",
						"description": "include track Ids on folder(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include track Ids on folder(s)"
						}
					},
					{
						"in": "query",
						"name": "folderIncFolderIDs",
						"description": "include children folder Ids on folder(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include children folder Ids on folder(s)"
						}
					},
					{
						"in": "query",
						"name": "skip",
						"description": "return items starting from offset position",
						"required": false,
						"example": 0,
						"schema": {
							"type": "integer",
							"default": 0,
							"minimum": 0,
							"description": "return items starting from offset position"
						}
					},
					{
						"in": "query",
						"name": "take",
						"description": "amount of returned items",
						"required": false,
						"example": 25,
						"schema": {
							"type": "integer",
							"minimum": 1,
							"description": "amount of returned items"
						}
					},
					{
						"in": "query",
						"name": "id",
						"description": "Folder Id",
						"required": true,
						"example": "c0ffeec0-ffee-c0ff-eec0-ffeec0ffeec0",
						"schema": {
							"$ref": "#/components/schemas/ID"
						}
					}
				],
				"responses": {
					"200": {
						"description": "json data",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/FolderPage"
								}
							}
						}
					},
					"400": {
						"description": "Missing parameter"
					},
					"401": {
						"description": "Unauthorized"
					},
					"404": {
						"description": "Item not found"
					},
					"422": {
						"description": "Invalid parameter"
					}
				},
				"security": [
					{
						"cookieAuth": [
							"stream"
						]
					},
					{
						"bearerAuth": [
							"stream"
						]
					}
				]
			}
		},
		"/folder/artist/similar/tracks": {
			"get": {
				"operationId": "FolderController.artistsSimilarTracks",
				"summary": "Get similar Tracks",
				"description": "Get similar Tracks of a Artist Folder by Id (External Service)",
				"tags": [
					"Folder"
				],
				"parameters": [
					{
						"in": "query",
						"name": "trackIncMedia",
						"description": "include media information on track(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include media information on track(s)"
						}
					},
					{
						"in": "query",
						"name": "trackIncTag",
						"description": "include tag on track(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include tag on track(s)"
						}
					},
					{
						"in": "query",
						"name": "trackIncRawTag",
						"description": "include raw tag on track(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include raw tag on track(s)"
						}
					},
					{
						"in": "query",
						"name": "trackIncState",
						"description": "include user states (fav,rate) on track(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include user states (fav,rate) on track(s)"
						}
					},
					{
						"in": "query",
						"name": "skip",
						"description": "return items starting from offset position",
						"required": false,
						"example": 0,
						"schema": {
							"type": "integer",
							"default": 0,
							"minimum": 0,
							"description": "return items starting from offset position"
						}
					},
					{
						"in": "query",
						"name": "take",
						"description": "amount of returned items",
						"required": false,
						"example": 25,
						"schema": {
							"type": "integer",
							"minimum": 1,
							"description": "amount of returned items"
						}
					},
					{
						"in": "query",
						"name": "id",
						"description": "Folder Id",
						"required": true,
						"example": "c0ffeec0-ffee-c0ff-eec0-ffeec0ffeec0",
						"schema": {
							"$ref": "#/components/schemas/ID"
						}
					}
				],
				"responses": {
					"200": {
						"description": "json data",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/TrackPage"
								}
							}
						}
					},
					"400": {
						"description": "Missing parameter"
					},
					"401": {
						"description": "Unauthorized"
					},
					"404": {
						"description": "Item not found"
					},
					"422": {
						"description": "Invalid parameter"
					}
				},
				"security": [
					{
						"cookieAuth": [
							"stream"
						]
					},
					{
						"bearerAuth": [
							"stream"
						]
					}
				]
			}
		},
		"/folder/health": {
			"get": {
				"operationId": "FolderController.health",
				"summary": "Get Health",
				"description": "Get a List of Folders with Health Issues",
				"tags": [
					"Folder"
				],
				"parameters": [
					{
						"in": "query",
						"name": "folderIncTag",
						"description": "include tag on folder(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include tag on folder(s)"
						}
					},
					{
						"in": "query",
						"name": "folderIncState",
						"description": "include state (fav,rate) on folder(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include state (fav,rate) on folder(s)"
						}
					},
					{
						"in": "query",
						"name": "folderIncChildFolderCount",
						"description": "include child folder count on folder(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include child folder count on folder(s)"
						}
					},
					{
						"in": "query",
						"name": "folderIncTrackCount",
						"description": "include track count on folder(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include track count on folder(s)"
						}
					},
					{
						"in": "query",
						"name": "folderIncArtworkCount",
						"description": "include artwork count on folder(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include artwork count on folder(s)"
						}
					},
					{
						"in": "query",
						"name": "folderIncParents",
						"description": "include a list of all parent folder ids/names on folder(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include a list of all parent folder ids/names on folder(s)"
						}
					},
					{
						"in": "query",
						"name": "folderIncInfo",
						"description": "include extended meta data on folder(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include extended meta data on folder(s)"
						}
					},
					{
						"in": "query",
						"name": "folderIncSimilar",
						"description": "include similar folders list on folder(s) - only for folders of type artist",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include similar folders list on folder(s) - only for folders of type artist"
						}
					},
					{
						"in": "query",
						"name": "folderIncArtworkIDs",
						"description": "include artwork images Ids on folder(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include artwork images Ids on folder(s)"
						}
					},
					{
						"in": "query",
						"name": "folderIncTrackIDs",
						"description": "include track Ids on folder(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include track Ids on folder(s)"
						}
					},
					{
						"in": "query",
						"name": "folderIncFolderIDs",
						"description": "include children folder Ids on folder(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include children folder Ids on folder(s)"
						}
					},
					{
						"in": "query",
						"name": "query",
						"description": "filter by Search Query",
						"required": false,
						"example": "awesome",
						"schema": {
							"type": "string",
							"description": "filter by Search Query"
						}
					},
					{
						"in": "query",
						"name": "name",
						"description": "filter by Name",
						"required": false,
						"example": "Awesome Collection",
						"schema": {
							"type": "string",
							"description": "filter by Name"
						}
					},
					{
						"in": "query",
						"name": "ids",
						"description": "filter by Folder Ids",
						"required": false,
						"example": "c0ffeec0-ffee-c0ff-eec0-ffeec0ffeec0",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/components/schemas/ID"
							}
						}
					},
					{
						"in": "query",
						"name": "since",
						"description": "filter by Creation timestamp",
						"required": false,
						"example": "2000-12-31T23:00:00.000Z",
						"schema": {
							"type": "integer",
							"minimum": 0,
							"description": "filter by Creation timestamp"
						}
					},
					{
						"in": "query",
						"name": "parentIDs",
						"description": "filter by Folder Parent Ids",
						"required": false,
						"example": "c0ffeec0-ffee-c0ff-eec0-ffeec0ffeec0",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/components/schemas/ID"
							}
						}
					},
					{
						"in": "query",
						"name": "childOfID",
						"description": "filter if folder is in folder id (or its child folders)",
						"required": false,
						"example": "c0ffeec0-ffee-c0ff-eec0-ffeec0ffeec0",
						"schema": {
							"$ref": "#/components/schemas/ID"
						}
					},
					{
						"in": "query",
						"name": "level",
						"description": "filter by Folder Tree Level",
						"required": false,
						"example": 4,
						"schema": {
							"type": "integer",
							"minimum": 0,
							"description": "filter by Folder Tree Level"
						}
					},
					{
						"in": "query",
						"name": "albumTypes",
						"description": "filter by Album Types",
						"required": false,
						"example": [
							"live"
						],
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/components/schemas/AlbumType"
							}
						}
					},
					{
						"in": "query",
						"name": "folderTypes",
						"description": "filter by Folder Types",
						"required": false,
						"example": [
							"collection"
						],
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/components/schemas/FolderType"
							}
						}
					},
					{
						"in": "query",
						"name": "genres",
						"description": "filter by Genres",
						"required": false,
						"example": [
							"Pop"
						],
						"schema": {
							"type": "array",
							"items": {
								"type": "string",
								"description": "filter by Genres"
							}
						}
					},
					{
						"in": "query",
						"name": "album",
						"description": "filter by Album Name",
						"required": false,
						"example": [
							"The Awesome Album"
						],
						"schema": {
							"type": "array",
							"items": {
								"type": "string",
								"description": "filter by Album Name"
							}
						}
					},
					{
						"in": "query",
						"name": "artist",
						"description": "filter by Artist Name",
						"required": false,
						"example": [
							"The Awesome Artist"
						],
						"schema": {
							"type": "array",
							"items": {
								"type": "string",
								"description": "filter by Artist Name"
							}
						}
					},
					{
						"in": "query",
						"name": "artistSort",
						"description": "filter by Artist Sort Name",
						"required": false,
						"example": [
							"Awesome Artist, The"
						],
						"schema": {
							"type": "array",
							"items": {
								"type": "string",
								"description": "filter by Artist Sort Name"
							}
						}
					},
					{
						"in": "query",
						"name": "title",
						"description": "filter by Title",
						"required": false,
						"example": "Awesome Folder",
						"schema": {
							"type": "array",
							"items": {
								"type": "string",
								"description": "filter by Title"
							}
						}
					},
					{
						"in": "query",
						"name": "fromYear",
						"description": "filter by since year",
						"required": false,
						"example": 2001,
						"schema": {
							"type": "integer",
							"minimum": 0,
							"description": "filter by since year"
						}
					},
					{
						"in": "query",
						"name": "toYear",
						"description": "filter by until year",
						"required": false,
						"example": 2001,
						"schema": {
							"type": "integer",
							"minimum": 0,
							"description": "filter by until year"
						}
					},
					{
						"in": "query",
						"name": "mbReleaseIDs",
						"description": "filter by MusicBrainz Release Ids",
						"required": false,
						"example": [
							"d5b1d8ab-9a76-4c31-9b51-1049841b8c7e"
						],
						"schema": {
							"type": "array",
							"items": {
								"type": "string",
								"description": "filter by MusicBrainz Release Ids"
							}
						}
					},
					{
						"in": "query",
						"name": "mbReleaseGroupIDs",
						"description": "filter by MusicBrainz Release Group Ids",
						"required": false,
						"example": [
							"68445df6-13b2-360b-b43f-7b286e506c7c"
						],
						"schema": {
							"type": "array",
							"items": {
								"type": "string",
								"description": "filter by MusicBrainz Release Group Ids"
							}
						}
					},
					{
						"in": "query",
						"name": "mbAlbumTypes",
						"description": "filter by MusicBrainz Album Type",
						"required": false,
						"example": [
							"album"
						],
						"schema": {
							"type": "array",
							"items": {
								"type": "string",
								"description": "filter by MusicBrainz Album Type"
							}
						}
					},
					{
						"in": "query",
						"name": "mbArtistIDs",
						"description": "filter by MusicBrainz Artist Ids",
						"required": false,
						"example": [
							"b15ebd71-a252-417d-9e1c-3e6863da68f8"
						],
						"schema": {
							"type": "array",
							"items": {
								"type": "string",
								"description": "filter by MusicBrainz Artist Ids"
							}
						}
					},
					{
						"in": "query",
						"name": "artworksIDs",
						"description": "filter by Artwork Ids",
						"required": false,
						"example": "c0ffeec0-ffee-c0ff-eec0-ffeec0ffeec0",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/components/schemas/ID"
							}
						}
					},
					{
						"in": "query",
						"name": "rootIDs",
						"description": "filter by Root Ids",
						"required": false,
						"example": "c0ffeec0-ffee-c0ff-eec0-ffeec0ffeec0",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/components/schemas/ID"
							}
						}
					},
					{
						"in": "query",
						"name": "trackIDs",
						"description": "filter by Track Ids",
						"required": false,
						"example": "c0ffeec0-ffee-c0ff-eec0-ffeec0ffeec0",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/components/schemas/ID"
							}
						}
					},
					{
						"in": "query",
						"name": "albumIDs",
						"description": "filter by Album Ids",
						"required": false,
						"example": "c0ffeec0-ffee-c0ff-eec0-ffeec0ffeec0",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/components/schemas/ID"
							}
						}
					},
					{
						"in": "query",
						"name": "artistIDs",
						"description": "filter by Artist Ids",
						"required": false,
						"example": "c0ffeec0-ffee-c0ff-eec0-ffeec0ffeec0",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/components/schemas/ID"
							}
						}
					},
					{
						"in": "query",
						"name": "seriesIDs",
						"description": "filter by Series Ids",
						"required": false,
						"example": "c0ffeec0-ffee-c0ff-eec0-ffeec0ffeec0",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/components/schemas/ID"
							}
						}
					}
				],
				"responses": {
					"200": {
						"description": "json data",
						"content": {
							"application/json": {
								"schema": {
									"type": "array",
									"items": {
										"$ref": "#/components/schemas/FolderHealth"
									}
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"404": {
						"description": "Item not found"
					},
					"422": {
						"description": "Invalid parameter"
					}
				},
				"security": [
					{
						"cookieAuth": [
							"admin"
						]
					},
					{
						"bearerAuth": [
							"admin"
						]
					}
				]
			}
		},
		"/folder/create": {
			"post": {
				"operationId": "FolderController.create",
				"summary": "Create Folder",
				"description": "Create a Folder",
				"tags": [
					"Folder"
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/FolderCreateArgs"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "json data",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/AdminChangeQueueInfo"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					}
				},
				"security": [
					{
						"cookieAuth": [
							"admin"
						]
					},
					{
						"bearerAuth": [
							"admin"
						]
					}
				]
			}
		},
		"/folder/rename": {
			"post": {
				"operationId": "FolderController.rename",
				"summary": "Rename Folder",
				"description": "Rename a folder",
				"tags": [
					"Folder"
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/FolderRenameArgs"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "json data",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/AdminChangeQueueInfo"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					}
				},
				"security": [
					{
						"cookieAuth": [
							"admin"
						]
					},
					{
						"bearerAuth": [
							"admin"
						]
					}
				]
			}
		},
		"/folder/move": {
			"post": {
				"operationId": "FolderController.move",
				"summary": "Move Folder",
				"description": "Move a Folder",
				"tags": [
					"Folder"
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/FolderMoveArgs"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "json data",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/AdminChangeQueueInfo"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					}
				},
				"security": [
					{
						"cookieAuth": [
							"admin"
						]
					},
					{
						"bearerAuth": [
							"admin"
						]
					}
				]
			}
		},
		"/folder/remove": {
			"post": {
				"operationId": "FolderController.remove",
				"summary": "Remove Folder",
				"description": "Remove a Folder",
				"tags": [
					"Folder"
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"properties": {
									"id": {
										"$ref": "#/components/schemas/ID"
									}
								},
								"description": "Folder Id",
								"required": [
									"id"
								]
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "json data",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/AdminChangeQueueInfo"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					}
				},
				"security": [
					{
						"cookieAuth": [
							"stream"
						]
					},
					{
						"bearerAuth": [
							"stream"
						]
					}
				]
			}
		},
		"/genre/list": {
			"get": {
				"operationId": "GenreController.list",
				"summary": "Get Genres",
				"description": "Get a list of genres found in the library",
				"tags": [
					"Genres"
				],
				"parameters": [
					{
						"in": "query",
						"name": "rootID",
						"description": "filter genre by Root Id",
						"required": false,
						"example": "c0ffeec0-ffee-c0ff-eec0-ffeec0ffeec0",
						"schema": {
							"$ref": "#/components/schemas/ID"
						}
					},
					{
						"in": "query",
						"name": "skip",
						"description": "return items starting from offset position",
						"required": false,
						"example": 0,
						"schema": {
							"type": "integer",
							"default": 0,
							"minimum": 0,
							"description": "return items starting from offset position"
						}
					},
					{
						"in": "query",
						"name": "take",
						"description": "amount of returned items",
						"required": false,
						"example": 25,
						"schema": {
							"type": "integer",
							"minimum": 1,
							"description": "amount of returned items"
						}
					}
				],
				"responses": {
					"200": {
						"description": "json data",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/GenrePage"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"404": {
						"description": "Item not found"
					},
					"422": {
						"description": "Invalid parameter"
					}
				},
				"security": [
					{
						"cookieAuth": [
							"stream"
						]
					},
					{
						"bearerAuth": [
							"stream"
						]
					}
				]
			}
		},
		"/genre/index": {
			"get": {
				"operationId": "GenreController.index",
				"summary": "Get Genre Index",
				"description": "Get the Navigation Index for Genres",
				"tags": [
					"Genres"
				],
				"parameters": [],
				"responses": {
					"200": {
						"description": "json data",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/GenreIndex"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					}
				},
				"security": [
					{
						"cookieAuth": [
							"stream"
						]
					},
					{
						"bearerAuth": [
							"stream"
						]
					}
				]
			}
		},
		"/image/{id}_{size}.{format}": {
			"get": {
				"operationId": "ImageController.image",
				"summary": "Get Image",
				"description": "Image Binary [Album, Artist, Artwork, Episode, Folder, Root, Playlist, Podcast, Radio, Series, Track, User]",
				"tags": [
					"Image"
				],
				"parameters": [
					{
						"in": "path",
						"name": "size",
						"description": "size of the image",
						"required": true,
						"example": 300,
						"schema": {
							"type": "integer",
							"minimum": 16,
							"maximum": 1024,
							"description": "size of the image"
						}
					},
					{
						"in": "path",
						"name": "id",
						"description": "Object Id",
						"required": true,
						"example": "c0ffeec0-ffee-c0ff-eec0-ffeec0ffeec0",
						"schema": {
							"$ref": "#/components/schemas/ID"
						}
					},
					{
						"in": "path",
						"name": "format",
						"description": "format of the image",
						"required": true,
						"example": "png",
						"schema": {
							"$ref": "#/components/schemas/ImageFormatType"
						}
					}
				],
				"responses": {
					"200": {
						"description": "binary data",
						"content": {
							"image/jpeg": {
								"schema": {
									"type": "string",
									"format": "binary"
								}
							},
							"image/png": {
								"schema": {
									"type": "string",
									"format": "binary"
								}
							},
							"image/tiff": {
								"schema": {
									"type": "string",
									"format": "binary"
								}
							}
						}
					},
					"400": {
						"description": "Missing parameter"
					},
					"401": {
						"description": "Unauthorized"
					},
					"404": {
						"description": "Item not found"
					},
					"422": {
						"description": "Invalid parameter"
					}
				},
				"security": [
					{
						"cookieAuth": [
							"stream"
						]
					},
					{
						"bearerAuth": [
							"stream"
						]
					}
				]
			}
		},
		"/image/{id}_{size}": {
			"get": {
				"operationId": "ImageController.image/{id}_{size}",
				"summary": "Get Image by Id and Size",
				"description": "Image Binary [Album, Artist, Artwork, Episode, Folder, Root, Playlist, Podcast, Radio, Series, Track, User]",
				"tags": [
					"Image"
				],
				"parameters": [
					{
						"in": "path",
						"name": "size",
						"description": "size of the image",
						"required": true,
						"example": 300,
						"schema": {
							"type": "integer",
							"minimum": 16,
							"maximum": 1024,
							"description": "size of the image"
						}
					},
					{
						"in": "path",
						"name": "id",
						"description": "Object Id",
						"required": true,
						"example": "c0ffeec0-ffee-c0ff-eec0-ffeec0ffeec0",
						"schema": {
							"$ref": "#/components/schemas/ID"
						}
					}
				],
				"responses": {
					"200": {
						"description": "binary data",
						"content": {
							"image/jpeg": {
								"schema": {
									"type": "string",
									"format": "binary"
								}
							},
							"image/png": {
								"schema": {
									"type": "string",
									"format": "binary"
								}
							},
							"image/tiff": {
								"schema": {
									"type": "string",
									"format": "binary"
								}
							}
						}
					},
					"400": {
						"description": "Missing parameter"
					},
					"401": {
						"description": "Unauthorized"
					},
					"404": {
						"description": "Item not found"
					},
					"422": {
						"description": "Invalid parameter"
					}
				},
				"security": [
					{
						"cookieAuth": [
							"stream"
						]
					},
					{
						"bearerAuth": [
							"stream"
						]
					}
				]
			}
		},
		"/image/{id}.{format}": {
			"get": {
				"operationId": "ImageController.image/{id}.{format}",
				"summary": "Get Image by Id and Format",
				"description": "Image Binary [Album, Artist, Artwork, Episode, Folder, Root, Playlist, Podcast, Radio, Series, Track, User]",
				"tags": [
					"Image"
				],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"description": "Object Id",
						"required": true,
						"example": "c0ffeec0-ffee-c0ff-eec0-ffeec0ffeec0",
						"schema": {
							"$ref": "#/components/schemas/ID"
						}
					},
					{
						"in": "path",
						"name": "format",
						"description": "format of the image",
						"required": true,
						"example": "png",
						"schema": {
							"$ref": "#/components/schemas/ImageFormatType"
						}
					}
				],
				"responses": {
					"200": {
						"description": "binary data",
						"content": {
							"image/jpeg": {
								"schema": {
									"type": "string",
									"format": "binary"
								}
							},
							"image/png": {
								"schema": {
									"type": "string",
									"format": "binary"
								}
							},
							"image/tiff": {
								"schema": {
									"type": "string",
									"format": "binary"
								}
							}
						}
					},
					"400": {
						"description": "Missing parameter"
					},
					"401": {
						"description": "Unauthorized"
					},
					"404": {
						"description": "Item not found"
					},
					"422": {
						"description": "Invalid parameter"
					}
				},
				"security": [
					{
						"cookieAuth": [
							"stream"
						]
					},
					{
						"bearerAuth": [
							"stream"
						]
					}
				]
			}
		},
		"/image/{id}": {
			"get": {
				"operationId": "ImageController.image/{id}",
				"summary": "Get Image by Id",
				"description": "Image Binary [Album, Artist, Artwork, Episode, Folder, Root, Playlist, Podcast, Radio, Series, Track, User]",
				"tags": [
					"Image"
				],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"description": "Object Id",
						"required": true,
						"example": "c0ffeec0-ffee-c0ff-eec0-ffeec0ffeec0",
						"schema": {
							"$ref": "#/components/schemas/ID"
						}
					}
				],
				"responses": {
					"200": {
						"description": "binary data",
						"content": {
							"image/jpeg": {
								"schema": {
									"type": "string",
									"format": "binary"
								}
							},
							"image/png": {
								"schema": {
									"type": "string",
									"format": "binary"
								}
							},
							"image/tiff": {
								"schema": {
									"type": "string",
									"format": "binary"
								}
							}
						}
					},
					"400": {
						"description": "Missing parameter"
					},
					"401": {
						"description": "Unauthorized"
					},
					"404": {
						"description": "Item not found"
					},
					"422": {
						"description": "Invalid parameter"
					}
				},
				"security": [
					{
						"cookieAuth": [
							"stream"
						]
					},
					{
						"bearerAuth": [
							"stream"
						]
					}
				]
			}
		},
		"/metadata/lastfm/lookup": {
			"get": {
				"operationId": "MetaDataController.lastfmLookup",
				"summary": "Lookup LastFM",
				"description": "Lookup LastFM data",
				"tags": [
					"Meta Data"
				],
				"parameters": [
					{
						"in": "query",
						"name": "mbID",
						"description": "MusicBrainz ID",
						"required": true,
						"example": "d5b1d8ab-9a76-4c31-9b51-1049841b8c7e",
						"schema": {
							"type": "string",
							"description": "MusicBrainz ID"
						}
					},
					{
						"in": "query",
						"name": "type",
						"description": "lookup by lastfm type",
						"required": true,
						"example": "album",
						"schema": {
							"$ref": "#/components/schemas/LastFMLookupType"
						}
					}
				],
				"responses": {
					"200": {
						"description": "json data",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/MetaDataResult"
								}
							}
						}
					},
					"400": {
						"description": "Missing parameter"
					},
					"401": {
						"description": "Unauthorized"
					},
					"422": {
						"description": "Invalid parameter"
					}
				},
				"security": [
					{
						"cookieAuth": [
							"stream"
						]
					},
					{
						"bearerAuth": [
							"stream"
						]
					}
				]
			}
		},
		"/metadata/lyricsovh/search": {
			"get": {
				"operationId": "MetaDataController.lyricsovhSearch",
				"summary": "Search Lyrics",
				"description": "Search Lyrics.ovh data",
				"tags": [
					"Meta Data"
				],
				"parameters": [
					{
						"in": "query",
						"name": "title",
						"description": "Song Title",
						"required": true,
						"example": "Jerry Was a Race Car Driver",
						"schema": {
							"type": "string",
							"description": "Song Title"
						}
					},
					{
						"in": "query",
						"name": "artist",
						"description": "Song Artist",
						"required": true,
						"example": "Primus",
						"schema": {
							"type": "string",
							"description": "Song Artist"
						}
					}
				],
				"responses": {
					"200": {
						"description": "json data",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/MetaDataResult"
								}
							}
						}
					},
					"400": {
						"description": "Missing parameter"
					},
					"401": {
						"description": "Unauthorized"
					},
					"422": {
						"description": "Invalid parameter"
					}
				},
				"security": [
					{
						"cookieAuth": [
							"stream"
						]
					},
					{
						"bearerAuth": [
							"stream"
						]
					}
				]
			}
		},
		"/metadata/acoustid/lookup": {
			"get": {
				"operationId": "MetaDataController.acoustidLookup",
				"summary": "Lookup AcoustId",
				"description": "Lookup AcoustId data",
				"tags": [
					"Meta Data"
				],
				"parameters": [
					{
						"in": "query",
						"name": "trackID",
						"description": "Track ID",
						"required": true,
						"example": "0eee4027-47fc-4993-b389-edb1d82a73a9",
						"schema": {
							"type": "string",
							"description": "Track ID"
						}
					},
					{
						"in": "query",
						"name": "inc",
						"description": "Lookup Includes (comma-separated AcoustId includes)",
						"required": false,
						"schema": {
							"type": "string",
							"default": "recordings,releases,releasegroups,tracks,compress,usermeta,sources",
							"description": "Lookup Includes (comma-separated AcoustId includes)"
						}
					}
				],
				"responses": {
					"200": {
						"description": "json data",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/MetaDataResult"
								}
							}
						}
					},
					"400": {
						"description": "Missing parameter"
					},
					"401": {
						"description": "Unauthorized"
					},
					"422": {
						"description": "Invalid parameter"
					}
				},
				"security": [
					{
						"cookieAuth": [
							"stream"
						]
					},
					{
						"bearerAuth": [
							"stream"
						]
					}
				]
			}
		},
		"/metadata/musicbrainz/lookup": {
			"get": {
				"operationId": "MetaDataController.musicbrainzLookup",
				"summary": "Lookup MusicBrainz",
				"description": "Lookup MusicBrainz data",
				"tags": [
					"Meta Data"
				],
				"parameters": [
					{
						"in": "query",
						"name": "mbID",
						"description": "MusicBrainz ID",
						"required": true,
						"example": "d5b1d8ab-9a76-4c31-9b51-1049841b8c7e",
						"schema": {
							"type": "string",
							"description": "MusicBrainz ID"
						}
					},
					{
						"in": "query",
						"name": "type",
						"description": "MusicBrainz Lookup Type",
						"required": true,
						"example": "release",
						"schema": {
							"$ref": "#/components/schemas/MusicBrainzLookupType"
						}
					},
					{
						"in": "query",
						"name": "inc",
						"description": "Lookup Includes (comma-separated MusicBrainz includes https://musicbrainz.org/doc/Development/XML_Web_Service/Version_2#Lookups )",
						"required": false,
						"schema": {
							"type": "string",
							"description": "Lookup Includes (comma-separated MusicBrainz includes https://musicbrainz.org/doc/Development/XML_Web_Service/Version_2#Lookups )"
						}
					}
				],
				"responses": {
					"200": {
						"description": "json data",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/MetaDataResult"
								}
							}
						}
					},
					"400": {
						"description": "Missing parameter"
					},
					"401": {
						"description": "Unauthorized"
					},
					"422": {
						"description": "Invalid parameter"
					}
				},
				"security": [
					{
						"cookieAuth": [
							"stream"
						]
					},
					{
						"bearerAuth": [
							"stream"
						]
					}
				]
			}
		},
		"/metadata/musicbrainz/search": {
			"get": {
				"operationId": "MetaDataController.musicbrainzSearch",
				"summary": "Search MusicBrainz",
				"description": "Search MusicBrainz data",
				"tags": [
					"Meta Data"
				],
				"parameters": [
					{
						"in": "query",
						"name": "type",
						"description": "MusicBrainz Search Type",
						"required": true,
						"example": "artist",
						"schema": {
							"$ref": "#/components/schemas/MusicBrainzSearchType"
						}
					},
					{
						"in": "query",
						"name": "recording",
						"description": "Search by recording name",
						"required": false,
						"schema": {
							"type": "string",
							"description": "Search by recording name"
						}
					},
					{
						"in": "query",
						"name": "releasegroup",
						"description": "Search by releasegroup name",
						"required": false,
						"schema": {
							"type": "string",
							"description": "Search by releasegroup name"
						}
					},
					{
						"in": "query",
						"name": "release",
						"description": "Search by release name",
						"required": false,
						"schema": {
							"type": "string",
							"description": "Search by release name"
						}
					},
					{
						"in": "query",
						"name": "artist",
						"description": "Search by artist name",
						"required": false,
						"schema": {
							"type": "string",
							"description": "Search by artist name"
						}
					},
					{
						"in": "query",
						"name": "tracks",
						"description": "Search by number of release tracks",
						"required": false,
						"schema": {
							"type": "integer",
							"minimum": 0,
							"description": "Search by number of release tracks"
						}
					}
				],
				"responses": {
					"200": {
						"description": "json data",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/MetaDataResult"
								}
							}
						}
					},
					"400": {
						"description": "Missing parameter"
					},
					"401": {
						"description": "Unauthorized"
					},
					"422": {
						"description": "Invalid parameter"
					}
				},
				"security": [
					{
						"cookieAuth": [
							"stream"
						]
					},
					{
						"bearerAuth": [
							"stream"
						]
					}
				]
			}
		},
		"/metadata/acousticbrainz/lookup": {
			"get": {
				"operationId": "MetaDataController.acousticbrainzLookup",
				"summary": "Lookup AcousticBrainz",
				"description": "Lookup AcousticBrainz data",
				"tags": [
					"Meta Data"
				],
				"parameters": [
					{
						"in": "query",
						"name": "mbID",
						"description": "MusicBrainz ID",
						"required": true,
						"example": "d5b1d8ab-9a76-4c31-9b51-1049841b8c7e",
						"schema": {
							"type": "string",
							"description": "MusicBrainz ID"
						}
					},
					{
						"in": "query",
						"name": "nr",
						"description": "Page parameter if more than one acousticbrainz info is available",
						"required": false,
						"schema": {
							"type": "integer",
							"minimum": 0,
							"description": "Page parameter if more than one acousticbrainz info is available"
						}
					}
				],
				"responses": {
					"200": {
						"description": "json data",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/MetaDataResult"
								}
							}
						}
					},
					"400": {
						"description": "Missing parameter"
					},
					"401": {
						"description": "Unauthorized"
					},
					"422": {
						"description": "Invalid parameter"
					}
				},
				"security": [
					{
						"cookieAuth": [
							"stream"
						]
					},
					{
						"bearerAuth": [
							"stream"
						]
					}
				]
			}
		},
		"/metadata/coverartarchive/lookup": {
			"get": {
				"operationId": "MetaDataController.coverartarchiveLookup",
				"summary": "Lookup CoverArtArchive",
				"description": "Lookup CoverArtArchive data",
				"tags": [
					"Meta Data"
				],
				"parameters": [
					{
						"in": "query",
						"name": "mbID",
						"description": "MusicBrainz ID",
						"required": true,
						"example": "d5b1d8ab-9a76-4c31-9b51-1049841b8c7e",
						"schema": {
							"type": "string",
							"description": "MusicBrainz ID"
						}
					},
					{
						"in": "query",
						"name": "type",
						"description": "Lookup by CoverArtArchive MusicBrainz Type",
						"required": true,
						"example": "release",
						"schema": {
							"$ref": "#/components/schemas/CoverArtArchiveLookupType"
						}
					}
				],
				"responses": {
					"200": {
						"description": "json data",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/MetaDataResult"
								}
							}
						}
					},
					"400": {
						"description": "Missing parameter"
					},
					"401": {
						"description": "Unauthorized"
					},
					"422": {
						"description": "Invalid parameter"
					}
				},
				"security": [
					{
						"cookieAuth": [
							"stream"
						]
					},
					{
						"bearerAuth": [
							"stream"
						]
					}
				]
			}
		},
		"/metadata/wikipedia/summary": {
			"get": {
				"operationId": "MetaDataController.wikipediaSummarySearch",
				"summary": "Search Wikipedia",
				"description": "Search Wikipedia Summary data",
				"tags": [
					"Meta Data"
				],
				"parameters": [
					{
						"in": "query",
						"name": "title",
						"description": "MusicBrainz ID",
						"required": true,
						"example": "Primus",
						"schema": {
							"type": "string",
							"description": "MusicBrainz ID"
						}
					},
					{
						"in": "query",
						"name": "lang",
						"description": "Wikipedia Language",
						"required": false,
						"example": "en",
						"schema": {
							"type": "string",
							"default": "en",
							"description": "Wikipedia Language"
						}
					}
				],
				"responses": {
					"200": {
						"description": "json data",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/MetaDataResult"
								}
							}
						}
					},
					"400": {
						"description": "Missing parameter"
					},
					"401": {
						"description": "Unauthorized"
					},
					"422": {
						"description": "Invalid parameter"
					}
				},
				"security": [
					{
						"cookieAuth": [
							"stream"
						]
					},
					{
						"bearerAuth": [
							"stream"
						]
					}
				]
			}
		},
		"/metadata/wikidata/summary": {
			"get": {
				"operationId": "MetaDataController.wikidataSummarySearch",
				"summary": "Search Wikidata",
				"description": "Search WikiData summary data",
				"tags": [
					"Meta Data"
				],
				"parameters": [
					{
						"in": "query",
						"name": "wikiDataID",
						"description": "WikiData ID",
						"required": true,
						"schema": {
							"type": "string",
							"description": "WikiData ID"
						}
					},
					{
						"in": "query",
						"name": "lang",
						"description": "Wikipedia Language",
						"required": false,
						"example": "en",
						"schema": {
							"type": "string",
							"default": "en",
							"description": "Wikipedia Language"
						}
					}
				],
				"responses": {
					"200": {
						"description": "json data",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/MetaDataResult"
								}
							}
						}
					},
					"400": {
						"description": "Missing parameter"
					},
					"401": {
						"description": "Unauthorized"
					},
					"422": {
						"description": "Invalid parameter"
					}
				},
				"security": [
					{
						"cookieAuth": [
							"stream"
						]
					},
					{
						"bearerAuth": [
							"stream"
						]
					}
				]
			}
		},
		"/metadata/wikidata/lookup": {
			"get": {
				"operationId": "MetaDataController.wikidataLookup",
				"summary": "Lookup WikiData",
				"description": "Lookup WikiData summary data",
				"tags": [
					"Meta Data"
				],
				"parameters": [
					{
						"in": "query",
						"name": "wikiDataID",
						"description": "WikiData ID",
						"required": true,
						"schema": {
							"type": "string",
							"description": "WikiData ID"
						}
					}
				],
				"responses": {
					"200": {
						"description": "json data",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/MetaDataResult"
								}
							}
						}
					},
					"400": {
						"description": "Missing parameter"
					},
					"401": {
						"description": "Unauthorized"
					},
					"422": {
						"description": "Invalid parameter"
					}
				},
				"security": [
					{
						"cookieAuth": [
							"stream"
						]
					},
					{
						"bearerAuth": [
							"stream"
						]
					}
				]
			}
		},
		"/nowPlaying/list": {
			"get": {
				"operationId": "NowPlayingController.list",
				"summary": "Get Now Playing",
				"description": "Get a List of media [Track, Episode] played currently by Users",
				"tags": [
					"Now Playing"
				],
				"parameters": [
					{
						"in": "query",
						"name": "episodeIncMedia",
						"description": "include media information on episode(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include media information on episode(s)"
						}
					},
					{
						"in": "query",
						"name": "episodeIncTag",
						"description": "include tag on episode(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include tag on episode(s)"
						}
					},
					{
						"in": "query",
						"name": "episodeIncRawTag",
						"description": "include raw tag on episode(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include raw tag on episode(s)"
						}
					},
					{
						"in": "query",
						"name": "episodeIncState",
						"description": "include user states (fav,rate) on episode(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include user states (fav,rate) on episode(s)"
						}
					},
					{
						"in": "query",
						"name": "trackIncMedia",
						"description": "include media information on track(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include media information on track(s)"
						}
					},
					{
						"in": "query",
						"name": "trackIncTag",
						"description": "include tag on track(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include tag on track(s)"
						}
					},
					{
						"in": "query",
						"name": "trackIncRawTag",
						"description": "include raw tag on track(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include raw tag on track(s)"
						}
					},
					{
						"in": "query",
						"name": "trackIncState",
						"description": "include user states (fav,rate) on track(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include user states (fav,rate) on track(s)"
						}
					},
					{
						"in": "query",
						"name": "nowPlayingIncTrackIDs",
						"description": "include track Id on now playing entries",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include track Id on now playing entries"
						}
					},
					{
						"in": "query",
						"name": "nowPlayingIncTracks",
						"description": "include tracks on now playing entries",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include tracks on now playing entries"
						}
					},
					{
						"in": "query",
						"name": "nowPlayingIncEpisodeIDs",
						"description": "include track Id on now playing entries",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include track Id on now playing entries"
						}
					},
					{
						"in": "query",
						"name": "nowPlayingIncEpisodes",
						"description": "include tracks on now playing entries",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include tracks on now playing entries"
						}
					}
				],
				"responses": {
					"200": {
						"description": "json data",
						"content": {
							"application/json": {
								"schema": {
									"type": "array",
									"items": {
										"$ref": "#/components/schemas/NowPlaying"
									}
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"422": {
						"description": "Invalid parameter"
					}
				},
				"security": [
					{
						"cookieAuth": [
							"stream"
						]
					},
					{
						"bearerAuth": [
							"stream"
						]
					}
				]
			}
		},
		"/nowPlaying/scrobble": {
			"post": {
				"operationId": "NowPlayingController.scrobble",
				"summary": "Scrobble",
				"description": "Report playing (scrobble) a media file [Track, Episode]",
				"tags": [
					"Now Playing"
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"properties": {
									"id": {
										"$ref": "#/components/schemas/ID"
									}
								},
								"description": "Media Id",
								"required": [
									"id"
								]
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "ok"
					},
					"401": {
						"description": "Unauthorized"
					}
				},
				"security": [
					{
						"cookieAuth": [
							"stream"
						]
					},
					{
						"bearerAuth": [
							"stream"
						]
					}
				]
			}
		},
		"/ping": {
			"get": {
				"operationId": "PingController.ping",
				"summary": "Ping",
				"description": "Is the Api online?",
				"tags": [
					"Access"
				],
				"parameters": [],
				"responses": {
					"200": {
						"description": "json data",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Ping"
								}
							}
						}
					}
				},
				"security": []
			}
		},
		"/playlist/id": {
			"get": {
				"operationId": "PlaylistController.id",
				"summary": "Get Playlist",
				"description": "Get a Playlist by Id",
				"tags": [
					"Playlist"
				],
				"parameters": [
					{
						"in": "query",
						"name": "episodeIncMedia",
						"description": "include media information on episode(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include media information on episode(s)"
						}
					},
					{
						"in": "query",
						"name": "episodeIncTag",
						"description": "include tag on episode(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include tag on episode(s)"
						}
					},
					{
						"in": "query",
						"name": "episodeIncRawTag",
						"description": "include raw tag on episode(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include raw tag on episode(s)"
						}
					},
					{
						"in": "query",
						"name": "episodeIncState",
						"description": "include user states (fav,rate) on episode(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include user states (fav,rate) on episode(s)"
						}
					},
					{
						"in": "query",
						"name": "trackIncMedia",
						"description": "include media information on track(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include media information on track(s)"
						}
					},
					{
						"in": "query",
						"name": "trackIncTag",
						"description": "include tag on track(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include tag on track(s)"
						}
					},
					{
						"in": "query",
						"name": "trackIncRawTag",
						"description": "include raw tag on track(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include raw tag on track(s)"
						}
					},
					{
						"in": "query",
						"name": "trackIncState",
						"description": "include user states (fav,rate) on track(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include user states (fav,rate) on track(s)"
						}
					},
					{
						"in": "query",
						"name": "playlistIncEntries",
						"description": "include entries on playlist",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include entries on playlist"
						}
					},
					{
						"in": "query",
						"name": "playlistIncEntriesIDs",
						"description": "include entry ids on playlist",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include entry ids on playlist"
						}
					},
					{
						"in": "query",
						"name": "playlistIncState",
						"description": "include user state on playlist",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include user state on playlist"
						}
					},
					{
						"in": "query",
						"name": "id",
						"description": "Playlist Id",
						"required": true,
						"example": "c0ffeec0-ffee-c0ff-eec0-ffeec0ffeec0",
						"schema": {
							"$ref": "#/components/schemas/ID"
						}
					}
				],
				"responses": {
					"200": {
						"description": "json data",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Playlist"
								}
							}
						}
					},
					"400": {
						"description": "Missing parameter"
					},
					"401": {
						"description": "Unauthorized"
					},
					"404": {
						"description": "Item not found"
					},
					"422": {
						"description": "Invalid parameter"
					}
				},
				"security": [
					{
						"cookieAuth": [
							"stream"
						]
					},
					{
						"bearerAuth": [
							"stream"
						]
					}
				]
			}
		},
		"/playlist/index": {
			"get": {
				"operationId": "PlaylistController.index",
				"summary": "Get Index",
				"description": "Get the Navigation Index for Playlists",
				"tags": [
					"Playlist"
				],
				"parameters": [
					{
						"in": "query",
						"name": "query",
						"description": "filter by Search Query",
						"required": false,
						"example": "awesome",
						"schema": {
							"type": "string",
							"description": "filter by Search Query"
						}
					},
					{
						"in": "query",
						"name": "name",
						"description": "filter by Name",
						"required": false,
						"example": "Awesome Playlist",
						"schema": {
							"type": "string",
							"description": "filter by Name"
						}
					},
					{
						"in": "query",
						"name": "comment",
						"description": "filter by Comment",
						"required": false,
						"example": "Awesome Comment",
						"schema": {
							"type": "string",
							"description": "filter by Comment"
						}
					},
					{
						"in": "query",
						"name": "ids",
						"description": "filter by Playlist Ids",
						"required": false,
						"example": "c0ffeec0-ffee-c0ff-eec0-ffeec0ffeec0",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/components/schemas/ID"
							}
						}
					},
					{
						"in": "query",
						"name": "since",
						"description": "filter by Creation timestamp",
						"required": false,
						"example": "2000-12-31T23:00:00.000Z",
						"schema": {
							"type": "integer",
							"minimum": 0,
							"description": "filter by Creation timestamp"
						}
					},
					{
						"in": "query",
						"name": "userIDs",
						"description": "filter by User Ids",
						"required": false,
						"example": "c0ffeec0-ffee-c0ff-eec0-ffeec0ffeec0",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/components/schemas/ID"
							}
						}
					},
					{
						"in": "query",
						"name": "isPublic",
						"description": "filter by isPublic Flag",
						"required": false,
						"example": true,
						"schema": {
							"type": "boolean",
							"description": "filter by isPublic Flag"
						}
					},
					{
						"in": "query",
						"name": "durationFrom",
						"description": "filter by since Playlist duration",
						"required": false,
						"example": "2000-12-31T23:00:00.000Z",
						"schema": {
							"type": "integer",
							"minimum": 0,
							"description": "filter by since Playlist duration"
						}
					},
					{
						"in": "query",
						"name": "durationTo",
						"description": "filter by until Playlist duration",
						"required": false,
						"example": "2000-12-31T23:00:00.000Z",
						"schema": {
							"type": "integer",
							"minimum": 0,
							"description": "filter by until Playlist duration"
						}
					}
				],
				"responses": {
					"200": {
						"description": "json data",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/PlaylistIndex"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"404": {
						"description": "Item not found"
					},
					"422": {
						"description": "Invalid parameter"
					}
				},
				"security": [
					{
						"cookieAuth": [
							"stream"
						]
					},
					{
						"bearerAuth": [
							"stream"
						]
					}
				]
			}
		},
		"/playlist/search": {
			"get": {
				"operationId": "PlaylistController.search",
				"summary": "Search Playlists",
				"description": "Search Playlists",
				"tags": [
					"Playlist"
				],
				"parameters": [
					{
						"in": "query",
						"name": "list",
						"description": "filter by special list",
						"required": false,
						"example": "faved",
						"schema": {
							"$ref": "#/components/schemas/ListType"
						}
					},
					{
						"in": "query",
						"name": "orderBy",
						"description": "order by field",
						"required": false,
						"schema": {
							"$ref": "#/components/schemas/DefaultOrderFields"
						}
					},
					{
						"in": "query",
						"name": "orderDesc",
						"description": "order direction ascending or descending",
						"required": false,
						"example": true,
						"schema": {
							"type": "boolean",
							"description": "order direction ascending or descending"
						}
					},
					{
						"in": "query",
						"name": "query",
						"description": "filter by Search Query",
						"required": false,
						"example": "awesome",
						"schema": {
							"type": "string",
							"description": "filter by Search Query"
						}
					},
					{
						"in": "query",
						"name": "name",
						"description": "filter by Name",
						"required": false,
						"example": "Awesome Playlist",
						"schema": {
							"type": "string",
							"description": "filter by Name"
						}
					},
					{
						"in": "query",
						"name": "comment",
						"description": "filter by Comment",
						"required": false,
						"example": "Awesome Comment",
						"schema": {
							"type": "string",
							"description": "filter by Comment"
						}
					},
					{
						"in": "query",
						"name": "ids",
						"description": "filter by Playlist Ids",
						"required": false,
						"example": "c0ffeec0-ffee-c0ff-eec0-ffeec0ffeec0",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/components/schemas/ID"
							}
						}
					},
					{
						"in": "query",
						"name": "since",
						"description": "filter by Creation timestamp",
						"required": false,
						"example": "2000-12-31T23:00:00.000Z",
						"schema": {
							"type": "integer",
							"minimum": 0,
							"description": "filter by Creation timestamp"
						}
					},
					{
						"in": "query",
						"name": "userIDs",
						"description": "filter by User Ids",
						"required": false,
						"example": "c0ffeec0-ffee-c0ff-eec0-ffeec0ffeec0",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/components/schemas/ID"
							}
						}
					},
					{
						"in": "query",
						"name": "isPublic",
						"description": "filter by isPublic Flag",
						"required": false,
						"example": true,
						"schema": {
							"type": "boolean",
							"description": "filter by isPublic Flag"
						}
					},
					{
						"in": "query",
						"name": "durationFrom",
						"description": "filter by since Playlist duration",
						"required": false,
						"example": "2000-12-31T23:00:00.000Z",
						"schema": {
							"type": "integer",
							"minimum": 0,
							"description": "filter by since Playlist duration"
						}
					},
					{
						"in": "query",
						"name": "durationTo",
						"description": "filter by until Playlist duration",
						"required": false,
						"example": "2000-12-31T23:00:00.000Z",
						"schema": {
							"type": "integer",
							"minimum": 0,
							"description": "filter by until Playlist duration"
						}
					},
					{
						"in": "query",
						"name": "episodeIncMedia",
						"description": "include media information on episode(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include media information on episode(s)"
						}
					},
					{
						"in": "query",
						"name": "episodeIncTag",
						"description": "include tag on episode(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include tag on episode(s)"
						}
					},
					{
						"in": "query",
						"name": "episodeIncRawTag",
						"description": "include raw tag on episode(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include raw tag on episode(s)"
						}
					},
					{
						"in": "query",
						"name": "episodeIncState",
						"description": "include user states (fav,rate) on episode(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include user states (fav,rate) on episode(s)"
						}
					},
					{
						"in": "query",
						"name": "trackIncMedia",
						"description": "include media information on track(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include media information on track(s)"
						}
					},
					{
						"in": "query",
						"name": "trackIncTag",
						"description": "include tag on track(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include tag on track(s)"
						}
					},
					{
						"in": "query",
						"name": "trackIncRawTag",
						"description": "include raw tag on track(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include raw tag on track(s)"
						}
					},
					{
						"in": "query",
						"name": "trackIncState",
						"description": "include user states (fav,rate) on track(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include user states (fav,rate) on track(s)"
						}
					},
					{
						"in": "query",
						"name": "playlistIncEntries",
						"description": "include entries on playlist",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include entries on playlist"
						}
					},
					{
						"in": "query",
						"name": "playlistIncEntriesIDs",
						"description": "include entry ids on playlist",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include entry ids on playlist"
						}
					},
					{
						"in": "query",
						"name": "playlistIncState",
						"description": "include user state on playlist",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include user state on playlist"
						}
					},
					{
						"in": "query",
						"name": "skip",
						"description": "return items starting from offset position",
						"required": false,
						"example": 0,
						"schema": {
							"type": "integer",
							"default": 0,
							"minimum": 0,
							"description": "return items starting from offset position"
						}
					},
					{
						"in": "query",
						"name": "take",
						"description": "amount of returned items",
						"required": false,
						"example": 25,
						"schema": {
							"type": "integer",
							"minimum": 1,
							"description": "amount of returned items"
						}
					}
				],
				"responses": {
					"200": {
						"description": "json data",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/PlaylistPage"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"404": {
						"description": "Item not found"
					},
					"422": {
						"description": "Invalid parameter"
					}
				},
				"security": [
					{
						"cookieAuth": [
							"stream"
						]
					},
					{
						"bearerAuth": [
							"stream"
						]
					}
				]
			}
		},
		"/playlist/entries": {
			"get": {
				"operationId": "PlaylistController.entries",
				"summary": "Get Entries",
				"description": "Get Media Entries [Track/Episode] of Playlists",
				"tags": [
					"Playlist"
				],
				"parameters": [
					{
						"in": "query",
						"name": "orderDesc",
						"description": "order direction ascending or descending",
						"required": false,
						"example": true,
						"schema": {
							"type": "boolean",
							"description": "order direction ascending or descending"
						}
					},
					{
						"in": "query",
						"name": "orderBy",
						"description": "order by field",
						"required": false,
						"schema": {
							"$ref": "#/components/schemas/PlaylistEntryOrderFields"
						}
					},
					{
						"in": "query",
						"name": "query",
						"description": "filter by Search Query",
						"required": false,
						"example": "awesome",
						"schema": {
							"type": "string",
							"description": "filter by Search Query"
						}
					},
					{
						"in": "query",
						"name": "name",
						"description": "filter by Name",
						"required": false,
						"example": "Awesome Playlist",
						"schema": {
							"type": "string",
							"description": "filter by Name"
						}
					},
					{
						"in": "query",
						"name": "comment",
						"description": "filter by Comment",
						"required": false,
						"example": "Awesome Comment",
						"schema": {
							"type": "string",
							"description": "filter by Comment"
						}
					},
					{
						"in": "query",
						"name": "ids",
						"description": "filter by Playlist Ids",
						"required": false,
						"example": "c0ffeec0-ffee-c0ff-eec0-ffeec0ffeec0",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/components/schemas/ID"
							}
						}
					},
					{
						"in": "query",
						"name": "since",
						"description": "filter by Creation timestamp",
						"required": false,
						"example": "2000-12-31T23:00:00.000Z",
						"schema": {
							"type": "integer",
							"minimum": 0,
							"description": "filter by Creation timestamp"
						}
					},
					{
						"in": "query",
						"name": "userIDs",
						"description": "filter by User Ids",
						"required": false,
						"example": "c0ffeec0-ffee-c0ff-eec0-ffeec0ffeec0",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/components/schemas/ID"
							}
						}
					},
					{
						"in": "query",
						"name": "isPublic",
						"description": "filter by isPublic Flag",
						"required": false,
						"example": true,
						"schema": {
							"type": "boolean",
							"description": "filter by isPublic Flag"
						}
					},
					{
						"in": "query",
						"name": "durationFrom",
						"description": "filter by since Playlist duration",
						"required": false,
						"example": "2000-12-31T23:00:00.000Z",
						"schema": {
							"type": "integer",
							"minimum": 0,
							"description": "filter by since Playlist duration"
						}
					},
					{
						"in": "query",
						"name": "durationTo",
						"description": "filter by until Playlist duration",
						"required": false,
						"example": "2000-12-31T23:00:00.000Z",
						"schema": {
							"type": "integer",
							"minimum": 0,
							"description": "filter by until Playlist duration"
						}
					},
					{
						"in": "query",
						"name": "episodeIncMedia",
						"description": "include media information on episode(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include media information on episode(s)"
						}
					},
					{
						"in": "query",
						"name": "episodeIncTag",
						"description": "include tag on episode(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include tag on episode(s)"
						}
					},
					{
						"in": "query",
						"name": "episodeIncRawTag",
						"description": "include raw tag on episode(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include raw tag on episode(s)"
						}
					},
					{
						"in": "query",
						"name": "episodeIncState",
						"description": "include user states (fav,rate) on episode(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include user states (fav,rate) on episode(s)"
						}
					},
					{
						"in": "query",
						"name": "trackIncMedia",
						"description": "include media information on track(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include media information on track(s)"
						}
					},
					{
						"in": "query",
						"name": "trackIncTag",
						"description": "include tag on track(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include tag on track(s)"
						}
					},
					{
						"in": "query",
						"name": "trackIncRawTag",
						"description": "include raw tag on track(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include raw tag on track(s)"
						}
					},
					{
						"in": "query",
						"name": "trackIncState",
						"description": "include user states (fav,rate) on track(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include user states (fav,rate) on track(s)"
						}
					},
					{
						"in": "query",
						"name": "skip",
						"description": "return items starting from offset position",
						"required": false,
						"example": 0,
						"schema": {
							"type": "integer",
							"default": 0,
							"minimum": 0,
							"description": "return items starting from offset position"
						}
					},
					{
						"in": "query",
						"name": "take",
						"description": "amount of returned items",
						"required": false,
						"example": 25,
						"schema": {
							"type": "integer",
							"minimum": 1,
							"description": "amount of returned items"
						}
					}
				],
				"responses": {
					"200": {
						"description": "json data",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/PlaylistEntryPage"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"404": {
						"description": "Item not found"
					},
					"422": {
						"description": "Invalid parameter"
					}
				},
				"security": [
					{
						"cookieAuth": [
							"stream"
						]
					},
					{
						"bearerAuth": [
							"stream"
						]
					}
				]
			}
		},
		"/playlist/create": {
			"post": {
				"operationId": "PlaylistController.create",
				"summary": "Create Playlist",
				"description": "Create a Playlist",
				"tags": [
					"Playlist"
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/PlaylistMutateArgs"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "json data",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Playlist"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					}
				},
				"security": [
					{
						"cookieAuth": [
							"stream"
						]
					},
					{
						"bearerAuth": [
							"stream"
						]
					}
				]
			}
		},
		"/playlist/update": {
			"post": {
				"operationId": "PlaylistController.update",
				"summary": "Update Playlist",
				"description": "Update a Playlist",
				"tags": [
					"Playlist"
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"allOf": [
									{
										"$ref": "#/components/schemas/PlaylistMutateArgs"
									},
									{
										"properties": {
											"id": {
												"$ref": "#/components/schemas/ID"
											}
										},
										"description": "Playlist Id",
										"required": [
											"id"
										]
									}
								]
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "json data",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Playlist"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					}
				},
				"security": [
					{
						"cookieAuth": [
							"stream"
						]
					},
					{
						"bearerAuth": [
							"stream"
						]
					}
				]
			}
		},
		"/playlist/remove": {
			"post": {
				"operationId": "PlaylistController.remove",
				"summary": "Remove Playlist",
				"description": "Remove a Playlist",
				"tags": [
					"Playlist"
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"properties": {
									"id": {
										"$ref": "#/components/schemas/ID"
									}
								},
								"description": "Playlist Id",
								"required": [
									"id"
								]
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "ok"
					},
					"401": {
						"description": "Unauthorized"
					}
				},
				"security": [
					{
						"cookieAuth": [
							"stream"
						]
					},
					{
						"bearerAuth": [
							"stream"
						]
					}
				]
			}
		},
		"/playqueue/get": {
			"get": {
				"operationId": "PlayQueueController.get",
				"summary": "Get PlayQueue",
				"description": "Get a PlayQueue for the calling user",
				"tags": [
					"PlayQueue"
				],
				"parameters": [
					{
						"in": "query",
						"name": "episodeIncMedia",
						"description": "include media information on episode(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include media information on episode(s)"
						}
					},
					{
						"in": "query",
						"name": "episodeIncTag",
						"description": "include tag on episode(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include tag on episode(s)"
						}
					},
					{
						"in": "query",
						"name": "episodeIncRawTag",
						"description": "include raw tag on episode(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include raw tag on episode(s)"
						}
					},
					{
						"in": "query",
						"name": "episodeIncState",
						"description": "include user states (fav,rate) on episode(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include user states (fav,rate) on episode(s)"
						}
					},
					{
						"in": "query",
						"name": "trackIncMedia",
						"description": "include media information on track(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include media information on track(s)"
						}
					},
					{
						"in": "query",
						"name": "trackIncTag",
						"description": "include tag on track(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include tag on track(s)"
						}
					},
					{
						"in": "query",
						"name": "trackIncRawTag",
						"description": "include raw tag on track(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include raw tag on track(s)"
						}
					},
					{
						"in": "query",
						"name": "trackIncState",
						"description": "include user states (fav,rate) on track(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include user states (fav,rate) on track(s)"
						}
					},
					{
						"in": "query",
						"name": "playQueueEntries",
						"description": "include entries on play queue",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include entries on play queue"
						}
					},
					{
						"in": "query",
						"name": "playQueueEntriesIDs",
						"description": "include entry ids on play queue",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include entry ids on play queue"
						}
					}
				],
				"responses": {
					"200": {
						"description": "json data",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/PlayQueue"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"422": {
						"description": "Invalid parameter"
					}
				},
				"security": [
					{
						"cookieAuth": [
							"stream"
						]
					},
					{
						"bearerAuth": [
							"stream"
						]
					}
				]
			}
		},
		"/playqueue/set": {
			"post": {
				"operationId": "PlayQueueController.set",
				"summary": "Set PlayQueue",
				"description": "Create/update the PlayQueue for the calling user",
				"tags": [
					"PlayQueue"
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/PlayQueueSetArgs"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "ok"
					},
					"401": {
						"description": "Unauthorized"
					}
				},
				"security": [
					{
						"cookieAuth": [
							"stream"
						]
					},
					{
						"bearerAuth": [
							"stream"
						]
					}
				]
			}
		},
		"/playqueue/clear": {
			"post": {
				"operationId": "PlayQueueController.clear",
				"summary": "Clear PlayQueue",
				"description": "Clear the PlayQueue for the calling user",
				"tags": [
					"PlayQueue"
				],
				"parameters": [],
				"responses": {
					"200": {
						"description": "ok"
					},
					"401": {
						"description": "Unauthorized"
					}
				},
				"security": [
					{
						"cookieAuth": [
							"stream"
						]
					},
					{
						"bearerAuth": [
							"stream"
						]
					}
				]
			}
		},
		"/podcast/id": {
			"get": {
				"operationId": "PodcastController.id",
				"summary": "Get Podcast",
				"description": "Get a Podcast by Id",
				"tags": [
					"Podcast"
				],
				"parameters": [
					{
						"in": "query",
						"name": "episodeIncMedia",
						"description": "include media information on episode(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include media information on episode(s)"
						}
					},
					{
						"in": "query",
						"name": "episodeIncTag",
						"description": "include tag on episode(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include tag on episode(s)"
						}
					},
					{
						"in": "query",
						"name": "episodeIncRawTag",
						"description": "include raw tag on episode(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include raw tag on episode(s)"
						}
					},
					{
						"in": "query",
						"name": "episodeIncState",
						"description": "include user states (fav,rate) on episode(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include user states (fav,rate) on episode(s)"
						}
					},
					{
						"in": "query",
						"name": "podcastIncEpisodes",
						"description": "include episodes on podcast(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include episodes on podcast(s)"
						}
					},
					{
						"in": "query",
						"name": "podcastIncState",
						"description": "include state (fav,rate) on podcast(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include state (fav,rate) on podcast(s)"
						}
					},
					{
						"in": "query",
						"name": "podcastIncEpisodeIDs",
						"description": "include episodes id on podcast(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include episodes id on podcast(s)"
						}
					},
					{
						"in": "query",
						"name": "podcastIncEpisodeCount",
						"description": "include episode count on podcast(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include episode count on podcast(s)"
						}
					},
					{
						"in": "query",
						"name": "id",
						"description": "Podcast Id",
						"required": true,
						"example": "c0ffeec0-ffee-c0ff-eec0-ffeec0ffeec0",
						"schema": {
							"$ref": "#/components/schemas/ID"
						}
					}
				],
				"responses": {
					"200": {
						"description": "json data",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Podcast"
								}
							}
						}
					},
					"400": {
						"description": "Missing parameter"
					},
					"401": {
						"description": "Unauthorized"
					},
					"404": {
						"description": "Item not found"
					},
					"422": {
						"description": "Invalid parameter"
					}
				},
				"security": [
					{
						"cookieAuth": [
							"stream"
						]
					},
					{
						"bearerAuth": [
							"stream"
						]
					}
				]
			}
		},
		"/podcast/index": {
			"get": {
				"operationId": "PodcastController.index",
				"summary": "Get Index",
				"description": "Get the Navigation Index for Podcasts",
				"tags": [
					"Podcast"
				],
				"parameters": [
					{
						"in": "query",
						"name": "query",
						"description": "filter by Search Query",
						"required": false,
						"example": "awesome",
						"schema": {
							"type": "string",
							"description": "filter by Search Query"
						}
					},
					{
						"in": "query",
						"name": "name",
						"description": "filter by Name",
						"required": false,
						"example": "Awesome Podcast",
						"schema": {
							"type": "string",
							"description": "filter by Name"
						}
					},
					{
						"in": "query",
						"name": "ids",
						"description": "filter by Podcast Ids",
						"required": false,
						"example": "c0ffeec0-ffee-c0ff-eec0-ffeec0ffeec0",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/components/schemas/ID"
							}
						}
					},
					{
						"in": "query",
						"name": "episodeIDs",
						"description": "filter by Episode Ids",
						"required": false,
						"example": "c0ffeec0-ffee-c0ff-eec0-ffeec0ffeec0",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/components/schemas/ID"
							}
						}
					},
					{
						"in": "query",
						"name": "since",
						"description": "filter by Creation timestamp",
						"required": false,
						"example": "2000-12-31T23:00:00.000Z",
						"schema": {
							"type": "integer",
							"minimum": 0,
							"description": "filter by Creation timestamp"
						}
					},
					{
						"in": "query",
						"name": "url",
						"description": "filter by URL",
						"required": false,
						"example": "https://podcast.example.com/feed.xml",
						"schema": {
							"type": "string",
							"description": "filter by URL"
						}
					},
					{
						"in": "query",
						"name": "statuses",
						"description": "filter by Podcast Status",
						"required": false,
						"example": [
							"downloading"
						],
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/components/schemas/PodcastStatus"
							}
						}
					},
					{
						"in": "query",
						"name": "lastCheckFrom",
						"description": "filter by since Last Check timestamp",
						"required": false,
						"example": "2000-12-31T23:00:00.000Z",
						"schema": {
							"type": "integer",
							"minimum": 0,
							"description": "filter by since Last Check timestamp"
						}
					},
					{
						"in": "query",
						"name": "lastCheckTo",
						"description": "filter by until Last Check timestamp",
						"required": false,
						"example": "2000-12-31T23:00:00.000Z",
						"schema": {
							"type": "integer",
							"minimum": 0,
							"description": "filter by until Last Check timestamp"
						}
					},
					{
						"in": "query",
						"name": "title",
						"description": "filter by Title",
						"required": false,
						"example": "Awesome Podcast",
						"schema": {
							"type": "string",
							"description": "filter by Title"
						}
					},
					{
						"in": "query",
						"name": "author",
						"description": "filter by Author",
						"required": false,
						"example": "Poddy McPodcastface",
						"schema": {
							"type": "string",
							"description": "filter by Author"
						}
					},
					{
						"in": "query",
						"name": "description",
						"description": "filter by Title",
						"required": false,
						"example": "Awesome Topic",
						"schema": {
							"type": "string",
							"description": "filter by Title"
						}
					},
					{
						"in": "query",
						"name": "generator",
						"description": "filter by Title",
						"required": false,
						"example": "Awesome Feed Generator",
						"schema": {
							"type": "string",
							"description": "filter by Title"
						}
					},
					{
						"in": "query",
						"name": "categories",
						"description": "filter by Podcast Category",
						"required": false,
						"example": [
							"Awesome"
						],
						"schema": {
							"type": "array",
							"items": {
								"type": "string",
								"description": "filter by Podcast Category"
							}
						}
					}
				],
				"responses": {
					"200": {
						"description": "json data",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/PodcastIndex"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"404": {
						"description": "Item not found"
					},
					"422": {
						"description": "Invalid parameter"
					}
				},
				"security": [
					{
						"cookieAuth": [
							"stream"
						]
					},
					{
						"bearerAuth": [
							"stream"
						]
					}
				]
			}
		},
		"/podcast/search": {
			"get": {
				"operationId": "PodcastController.search",
				"summary": "Search Podcasts",
				"description": "Search Podcasts",
				"tags": [
					"Podcast"
				],
				"parameters": [
					{
						"in": "query",
						"name": "list",
						"description": "filter by special list",
						"required": false,
						"example": "faved",
						"schema": {
							"$ref": "#/components/schemas/ListType"
						}
					},
					{
						"in": "query",
						"name": "orderDesc",
						"description": "order direction ascending or descending",
						"required": false,
						"example": true,
						"schema": {
							"type": "boolean",
							"description": "order direction ascending or descending"
						}
					},
					{
						"in": "query",
						"name": "orderBy",
						"description": "order by field",
						"required": false,
						"schema": {
							"$ref": "#/components/schemas/PodcastOrderFields"
						}
					},
					{
						"in": "query",
						"name": "query",
						"description": "filter by Search Query",
						"required": false,
						"example": "awesome",
						"schema": {
							"type": "string",
							"description": "filter by Search Query"
						}
					},
					{
						"in": "query",
						"name": "name",
						"description": "filter by Name",
						"required": false,
						"example": "Awesome Podcast",
						"schema": {
							"type": "string",
							"description": "filter by Name"
						}
					},
					{
						"in": "query",
						"name": "ids",
						"description": "filter by Podcast Ids",
						"required": false,
						"example": "c0ffeec0-ffee-c0ff-eec0-ffeec0ffeec0",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/components/schemas/ID"
							}
						}
					},
					{
						"in": "query",
						"name": "episodeIDs",
						"description": "filter by Episode Ids",
						"required": false,
						"example": "c0ffeec0-ffee-c0ff-eec0-ffeec0ffeec0",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/components/schemas/ID"
							}
						}
					},
					{
						"in": "query",
						"name": "since",
						"description": "filter by Creation timestamp",
						"required": false,
						"example": "2000-12-31T23:00:00.000Z",
						"schema": {
							"type": "integer",
							"minimum": 0,
							"description": "filter by Creation timestamp"
						}
					},
					{
						"in": "query",
						"name": "url",
						"description": "filter by URL",
						"required": false,
						"example": "https://podcast.example.com/feed.xml",
						"schema": {
							"type": "string",
							"description": "filter by URL"
						}
					},
					{
						"in": "query",
						"name": "statuses",
						"description": "filter by Podcast Status",
						"required": false,
						"example": [
							"downloading"
						],
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/components/schemas/PodcastStatus"
							}
						}
					},
					{
						"in": "query",
						"name": "lastCheckFrom",
						"description": "filter by since Last Check timestamp",
						"required": false,
						"example": "2000-12-31T23:00:00.000Z",
						"schema": {
							"type": "integer",
							"minimum": 0,
							"description": "filter by since Last Check timestamp"
						}
					},
					{
						"in": "query",
						"name": "lastCheckTo",
						"description": "filter by until Last Check timestamp",
						"required": false,
						"example": "2000-12-31T23:00:00.000Z",
						"schema": {
							"type": "integer",
							"minimum": 0,
							"description": "filter by until Last Check timestamp"
						}
					},
					{
						"in": "query",
						"name": "title",
						"description": "filter by Title",
						"required": false,
						"example": "Awesome Podcast",
						"schema": {
							"type": "string",
							"description": "filter by Title"
						}
					},
					{
						"in": "query",
						"name": "author",
						"description": "filter by Author",
						"required": false,
						"example": "Poddy McPodcastface",
						"schema": {
							"type": "string",
							"description": "filter by Author"
						}
					},
					{
						"in": "query",
						"name": "description",
						"description": "filter by Title",
						"required": false,
						"example": "Awesome Topic",
						"schema": {
							"type": "string",
							"description": "filter by Title"
						}
					},
					{
						"in": "query",
						"name": "generator",
						"description": "filter by Title",
						"required": false,
						"example": "Awesome Feed Generator",
						"schema": {
							"type": "string",
							"description": "filter by Title"
						}
					},
					{
						"in": "query",
						"name": "categories",
						"description": "filter by Podcast Category",
						"required": false,
						"example": [
							"Awesome"
						],
						"schema": {
							"type": "array",
							"items": {
								"type": "string",
								"description": "filter by Podcast Category"
							}
						}
					},
					{
						"in": "query",
						"name": "episodeIncMedia",
						"description": "include media information on episode(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include media information on episode(s)"
						}
					},
					{
						"in": "query",
						"name": "episodeIncTag",
						"description": "include tag on episode(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include tag on episode(s)"
						}
					},
					{
						"in": "query",
						"name": "episodeIncRawTag",
						"description": "include raw tag on episode(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include raw tag on episode(s)"
						}
					},
					{
						"in": "query",
						"name": "episodeIncState",
						"description": "include user states (fav,rate) on episode(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include user states (fav,rate) on episode(s)"
						}
					},
					{
						"in": "query",
						"name": "podcastIncEpisodes",
						"description": "include episodes on podcast(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include episodes on podcast(s)"
						}
					},
					{
						"in": "query",
						"name": "podcastIncState",
						"description": "include state (fav,rate) on podcast(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include state (fav,rate) on podcast(s)"
						}
					},
					{
						"in": "query",
						"name": "podcastIncEpisodeIDs",
						"description": "include episodes id on podcast(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include episodes id on podcast(s)"
						}
					},
					{
						"in": "query",
						"name": "podcastIncEpisodeCount",
						"description": "include episode count on podcast(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include episode count on podcast(s)"
						}
					},
					{
						"in": "query",
						"name": "skip",
						"description": "return items starting from offset position",
						"required": false,
						"example": 0,
						"schema": {
							"type": "integer",
							"default": 0,
							"minimum": 0,
							"description": "return items starting from offset position"
						}
					},
					{
						"in": "query",
						"name": "take",
						"description": "amount of returned items",
						"required": false,
						"example": 25,
						"schema": {
							"type": "integer",
							"minimum": 1,
							"description": "amount of returned items"
						}
					}
				],
				"responses": {
					"200": {
						"description": "json data",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/PodcastPage"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"404": {
						"description": "Item not found"
					},
					"422": {
						"description": "Invalid parameter"
					}
				},
				"security": [
					{
						"cookieAuth": [
							"stream"
						]
					},
					{
						"bearerAuth": [
							"stream"
						]
					}
				]
			}
		},
		"/podcast/episodes": {
			"get": {
				"operationId": "PodcastController.episodes",
				"summary": "Get Episodes",
				"description": "Get Episodes of Podcasts",
				"tags": [
					"Podcast"
				],
				"parameters": [
					{
						"in": "query",
						"name": "orderDesc",
						"description": "order direction ascending or descending",
						"required": false,
						"example": true,
						"schema": {
							"type": "boolean",
							"description": "order direction ascending or descending"
						}
					},
					{
						"in": "query",
						"name": "orderBy",
						"description": "order by field",
						"required": false,
						"schema": {
							"$ref": "#/components/schemas/EpisodeOrderFields"
						}
					},
					{
						"in": "query",
						"name": "query",
						"description": "filter by Search Query",
						"required": false,
						"example": "awesome",
						"schema": {
							"type": "string",
							"description": "filter by Search Query"
						}
					},
					{
						"in": "query",
						"name": "name",
						"description": "filter by Name",
						"required": false,
						"example": "Awesome Podcast",
						"schema": {
							"type": "string",
							"description": "filter by Name"
						}
					},
					{
						"in": "query",
						"name": "ids",
						"description": "filter by Podcast Ids",
						"required": false,
						"example": "c0ffeec0-ffee-c0ff-eec0-ffeec0ffeec0",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/components/schemas/ID"
							}
						}
					},
					{
						"in": "query",
						"name": "episodeIDs",
						"description": "filter by Episode Ids",
						"required": false,
						"example": "c0ffeec0-ffee-c0ff-eec0-ffeec0ffeec0",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/components/schemas/ID"
							}
						}
					},
					{
						"in": "query",
						"name": "since",
						"description": "filter by Creation timestamp",
						"required": false,
						"example": "2000-12-31T23:00:00.000Z",
						"schema": {
							"type": "integer",
							"minimum": 0,
							"description": "filter by Creation timestamp"
						}
					},
					{
						"in": "query",
						"name": "url",
						"description": "filter by URL",
						"required": false,
						"example": "https://podcast.example.com/feed.xml",
						"schema": {
							"type": "string",
							"description": "filter by URL"
						}
					},
					{
						"in": "query",
						"name": "statuses",
						"description": "filter by Podcast Status",
						"required": false,
						"example": [
							"downloading"
						],
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/components/schemas/PodcastStatus"
							}
						}
					},
					{
						"in": "query",
						"name": "lastCheckFrom",
						"description": "filter by since Last Check timestamp",
						"required": false,
						"example": "2000-12-31T23:00:00.000Z",
						"schema": {
							"type": "integer",
							"minimum": 0,
							"description": "filter by since Last Check timestamp"
						}
					},
					{
						"in": "query",
						"name": "lastCheckTo",
						"description": "filter by until Last Check timestamp",
						"required": false,
						"example": "2000-12-31T23:00:00.000Z",
						"schema": {
							"type": "integer",
							"minimum": 0,
							"description": "filter by until Last Check timestamp"
						}
					},
					{
						"in": "query",
						"name": "title",
						"description": "filter by Title",
						"required": false,
						"example": "Awesome Podcast",
						"schema": {
							"type": "string",
							"description": "filter by Title"
						}
					},
					{
						"in": "query",
						"name": "author",
						"description": "filter by Author",
						"required": false,
						"example": "Poddy McPodcastface",
						"schema": {
							"type": "string",
							"description": "filter by Author"
						}
					},
					{
						"in": "query",
						"name": "description",
						"description": "filter by Title",
						"required": false,
						"example": "Awesome Topic",
						"schema": {
							"type": "string",
							"description": "filter by Title"
						}
					},
					{
						"in": "query",
						"name": "generator",
						"description": "filter by Title",
						"required": false,
						"example": "Awesome Feed Generator",
						"schema": {
							"type": "string",
							"description": "filter by Title"
						}
					},
					{
						"in": "query",
						"name": "categories",
						"description": "filter by Podcast Category",
						"required": false,
						"example": [
							"Awesome"
						],
						"schema": {
							"type": "array",
							"items": {
								"type": "string",
								"description": "filter by Podcast Category"
							}
						}
					},
					{
						"in": "query",
						"name": "episodeIncMedia",
						"description": "include media information on episode(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include media information on episode(s)"
						}
					},
					{
						"in": "query",
						"name": "episodeIncTag",
						"description": "include tag on episode(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include tag on episode(s)"
						}
					},
					{
						"in": "query",
						"name": "episodeIncRawTag",
						"description": "include raw tag on episode(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include raw tag on episode(s)"
						}
					},
					{
						"in": "query",
						"name": "episodeIncState",
						"description": "include user states (fav,rate) on episode(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include user states (fav,rate) on episode(s)"
						}
					},
					{
						"in": "query",
						"name": "skip",
						"description": "return items starting from offset position",
						"required": false,
						"example": 0,
						"schema": {
							"type": "integer",
							"default": 0,
							"minimum": 0,
							"description": "return items starting from offset position"
						}
					},
					{
						"in": "query",
						"name": "take",
						"description": "amount of returned items",
						"required": false,
						"example": 25,
						"schema": {
							"type": "integer",
							"minimum": 1,
							"description": "amount of returned items"
						}
					}
				],
				"responses": {
					"200": {
						"description": "json data",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/EpisodePage"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"404": {
						"description": "Item not found"
					},
					"422": {
						"description": "Invalid parameter"
					}
				},
				"security": [
					{
						"cookieAuth": [
							"stream"
						]
					},
					{
						"bearerAuth": [
							"stream"
						]
					}
				]
			}
		},
		"/podcast/status": {
			"get": {
				"operationId": "PodcastController.status",
				"summary": "Get Status",
				"description": "Get a Podcast Status by Podcast Id",
				"tags": [
					"Podcast"
				],
				"parameters": [
					{
						"in": "query",
						"name": "id",
						"description": "Podcast Id",
						"required": true,
						"example": "c0ffeec0-ffee-c0ff-eec0-ffeec0ffeec0",
						"schema": {
							"$ref": "#/components/schemas/ID"
						}
					}
				],
				"responses": {
					"200": {
						"description": "json data",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/PodcastUpdateStatus"
								}
							}
						}
					},
					"400": {
						"description": "Missing parameter"
					},
					"401": {
						"description": "Unauthorized"
					},
					"404": {
						"description": "Item not found"
					},
					"422": {
						"description": "Invalid parameter"
					}
				},
				"security": [
					{
						"cookieAuth": [
							"stream"
						]
					},
					{
						"bearerAuth": [
							"stream"
						]
					}
				]
			}
		},
		"/podcast/create": {
			"post": {
				"operationId": "PodcastController.create",
				"summary": "Create Podcast",
				"description": "Create a Podcast",
				"tags": [
					"Podcast"
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/PodcastCreateArgs"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "json data",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Podcast"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					}
				},
				"security": [
					{
						"cookieAuth": [
							"podcast"
						]
					},
					{
						"bearerAuth": [
							"podcast"
						]
					}
				]
			}
		},
		"/podcast/refresh": {
			"post": {
				"operationId": "PodcastController.refresh",
				"summary": "Refresh Podcasts",
				"description": "Check Podcast Feeds for new Episodes",
				"tags": [
					"Podcast"
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/PodcastRefreshArgs"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "ok"
					},
					"401": {
						"description": "Unauthorized"
					}
				},
				"security": [
					{
						"cookieAuth": [
							"podcast"
						]
					},
					{
						"bearerAuth": [
							"podcast"
						]
					}
				]
			}
		},
		"/podcast/remove": {
			"post": {
				"operationId": "PodcastController.remove",
				"summary": "Remove Podcast",
				"description": "Remove a Podcast",
				"tags": [
					"Podcast"
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"properties": {
									"id": {
										"$ref": "#/components/schemas/ID"
									}
								},
								"description": "Podcast ID to remove",
								"required": [
									"id"
								]
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "ok"
					},
					"401": {
						"description": "Unauthorized"
					}
				},
				"security": [
					{
						"cookieAuth": [
							"podcast"
						]
					},
					{
						"bearerAuth": [
							"podcast"
						]
					}
				]
			}
		},
		"/radio/id": {
			"get": {
				"operationId": "RadioController.id",
				"summary": "Get Radio",
				"description": "Get a Radio by Id",
				"tags": [
					"Radio"
				],
				"parameters": [
					{
						"in": "query",
						"name": "radioState",
						"description": "include state (fav,rate) on radio(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include state (fav,rate) on radio(s)"
						}
					},
					{
						"in": "query",
						"name": "id",
						"description": "Radio Id",
						"required": true,
						"example": "c0ffeec0-ffee-c0ff-eec0-ffeec0ffeec0",
						"schema": {
							"$ref": "#/components/schemas/ID"
						}
					}
				],
				"responses": {
					"200": {
						"description": "json data",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Radio"
								}
							}
						}
					},
					"400": {
						"description": "Missing parameter"
					},
					"401": {
						"description": "Unauthorized"
					},
					"404": {
						"description": "Item not found"
					},
					"422": {
						"description": "Invalid parameter"
					}
				},
				"security": [
					{
						"cookieAuth": [
							"stream"
						]
					},
					{
						"bearerAuth": [
							"stream"
						]
					}
				]
			}
		},
		"/radio/index": {
			"get": {
				"operationId": "RadioController.index",
				"summary": "Get Index",
				"description": "Get the Navigation Index for Radios",
				"tags": [
					"Radio"
				],
				"parameters": [
					{
						"in": "query",
						"name": "query",
						"description": "filter by Search Query",
						"required": false,
						"example": "awesome",
						"schema": {
							"type": "string",
							"description": "filter by Search Query"
						}
					},
					{
						"in": "query",
						"name": "name",
						"description": "filter by Name",
						"required": false,
						"example": "Awesome Radio",
						"schema": {
							"type": "string",
							"description": "filter by Name"
						}
					},
					{
						"in": "query",
						"name": "ids",
						"description": "filter by Radio Ids",
						"required": false,
						"example": "c0ffeec0-ffee-c0ff-eec0-ffeec0ffeec0",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/components/schemas/ID"
							}
						}
					},
					{
						"in": "query",
						"name": "url",
						"description": "filter by URL",
						"required": false,
						"example": "https://radio.example.com/stream.m3u",
						"schema": {
							"type": "string",
							"description": "filter by URL"
						}
					},
					{
						"in": "query",
						"name": "homepage",
						"description": "filter by Homepage URL",
						"required": false,
						"example": "https://radio.example.com",
						"schema": {
							"type": "string",
							"description": "filter by Homepage URL"
						}
					},
					{
						"in": "query",
						"name": "since",
						"description": "filter by Creation timestamp",
						"required": false,
						"example": "2000-12-31T23:00:00.000Z",
						"schema": {
							"type": "integer",
							"minimum": 0,
							"description": "filter by Creation timestamp"
						}
					},
					{
						"in": "query",
						"name": "disabled",
						"description": "filter by Disabled Flag",
						"required": false,
						"example": true,
						"schema": {
							"type": "boolean",
							"description": "filter by Disabled Flag"
						}
					}
				],
				"responses": {
					"200": {
						"description": "json data",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/RadioIndex"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"404": {
						"description": "Item not found"
					},
					"422": {
						"description": "Invalid parameter"
					}
				},
				"security": [
					{
						"cookieAuth": [
							"stream"
						]
					},
					{
						"bearerAuth": [
							"stream"
						]
					}
				]
			}
		},
		"/radio/search": {
			"get": {
				"operationId": "RadioController.search",
				"summary": "Search Radios",
				"description": "Search Radios",
				"tags": [
					"Radio"
				],
				"parameters": [
					{
						"in": "query",
						"name": "orderBy",
						"description": "order by field",
						"required": false,
						"schema": {
							"$ref": "#/components/schemas/DefaultOrderFields"
						}
					},
					{
						"in": "query",
						"name": "orderDesc",
						"description": "order direction ascending or descending",
						"required": false,
						"example": true,
						"schema": {
							"type": "boolean",
							"description": "order direction ascending or descending"
						}
					},
					{
						"in": "query",
						"name": "query",
						"description": "filter by Search Query",
						"required": false,
						"example": "awesome",
						"schema": {
							"type": "string",
							"description": "filter by Search Query"
						}
					},
					{
						"in": "query",
						"name": "name",
						"description": "filter by Name",
						"required": false,
						"example": "Awesome Radio",
						"schema": {
							"type": "string",
							"description": "filter by Name"
						}
					},
					{
						"in": "query",
						"name": "ids",
						"description": "filter by Radio Ids",
						"required": false,
						"example": "c0ffeec0-ffee-c0ff-eec0-ffeec0ffeec0",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/components/schemas/ID"
							}
						}
					},
					{
						"in": "query",
						"name": "url",
						"description": "filter by URL",
						"required": false,
						"example": "https://radio.example.com/stream.m3u",
						"schema": {
							"type": "string",
							"description": "filter by URL"
						}
					},
					{
						"in": "query",
						"name": "homepage",
						"description": "filter by Homepage URL",
						"required": false,
						"example": "https://radio.example.com",
						"schema": {
							"type": "string",
							"description": "filter by Homepage URL"
						}
					},
					{
						"in": "query",
						"name": "since",
						"description": "filter by Creation timestamp",
						"required": false,
						"example": "2000-12-31T23:00:00.000Z",
						"schema": {
							"type": "integer",
							"minimum": 0,
							"description": "filter by Creation timestamp"
						}
					},
					{
						"in": "query",
						"name": "disabled",
						"description": "filter by Disabled Flag",
						"required": false,
						"example": true,
						"schema": {
							"type": "boolean",
							"description": "filter by Disabled Flag"
						}
					},
					{
						"in": "query",
						"name": "radioState",
						"description": "include state (fav,rate) on radio(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include state (fav,rate) on radio(s)"
						}
					},
					{
						"in": "query",
						"name": "skip",
						"description": "return items starting from offset position",
						"required": false,
						"example": 0,
						"schema": {
							"type": "integer",
							"default": 0,
							"minimum": 0,
							"description": "return items starting from offset position"
						}
					},
					{
						"in": "query",
						"name": "take",
						"description": "amount of returned items",
						"required": false,
						"example": 25,
						"schema": {
							"type": "integer",
							"minimum": 1,
							"description": "amount of returned items"
						}
					}
				],
				"responses": {
					"200": {
						"description": "json data",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/RadioPage"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"404": {
						"description": "Item not found"
					},
					"422": {
						"description": "Invalid parameter"
					}
				},
				"security": [
					{
						"cookieAuth": [
							"stream"
						]
					},
					{
						"bearerAuth": [
							"stream"
						]
					}
				]
			}
		},
		"/radio/create": {
			"post": {
				"operationId": "RadioController.create",
				"summary": "Create Radio",
				"description": "Create a Radio",
				"tags": [
					"Radio"
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/RadioMutateArgs"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "ok"
					},
					"401": {
						"description": "Unauthorized"
					}
				},
				"security": [
					{
						"cookieAuth": [
							"admin"
						]
					},
					{
						"bearerAuth": [
							"admin"
						]
					}
				]
			}
		},
		"/radio/update": {
			"post": {
				"operationId": "RadioController.update",
				"summary": "Update Radio",
				"description": "Update a Radio",
				"tags": [
					"Radio"
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"allOf": [
									{
										"$ref": "#/components/schemas/RadioMutateArgs"
									},
									{
										"properties": {
											"id": {
												"$ref": "#/components/schemas/ID"
											}
										},
										"description": "Root Id",
										"required": [
											"id"
										]
									}
								]
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "ok"
					},
					"401": {
						"description": "Unauthorized"
					}
				},
				"security": [
					{
						"cookieAuth": [
							"admin"
						]
					},
					{
						"bearerAuth": [
							"admin"
						]
					}
				]
			}
		},
		"/radio/remove": {
			"post": {
				"operationId": "RadioController.remove",
				"summary": "Remove Radio",
				"description": "Remove a Radio",
				"tags": [
					"Radio"
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"properties": {
									"id": {
										"$ref": "#/components/schemas/ID"
									}
								},
								"description": "Root Id",
								"required": [
									"id"
								]
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "ok"
					},
					"401": {
						"description": "Unauthorized"
					}
				},
				"security": [
					{
						"cookieAuth": [
							"admin"
						]
					},
					{
						"bearerAuth": [
							"admin"
						]
					}
				]
			}
		},
		"/root/id": {
			"get": {
				"operationId": "RootController.id",
				"summary": "Get Root",
				"description": "Get a Root by Id",
				"tags": [
					"Root"
				],
				"parameters": [
					{
						"in": "query",
						"name": "id",
						"description": "Root Id",
						"required": true,
						"example": "c0ffeec0-ffee-c0ff-eec0-ffeec0ffeec0",
						"schema": {
							"$ref": "#/components/schemas/ID"
						}
					}
				],
				"responses": {
					"200": {
						"description": "json data",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Root"
								}
							}
						}
					},
					"400": {
						"description": "Missing parameter"
					},
					"401": {
						"description": "Unauthorized"
					},
					"404": {
						"description": "Item not found"
					},
					"422": {
						"description": "Invalid parameter"
					}
				},
				"security": [
					{
						"cookieAuth": [
							"stream"
						]
					},
					{
						"bearerAuth": [
							"stream"
						]
					}
				]
			}
		},
		"/root/search": {
			"get": {
				"operationId": "RootController.search",
				"summary": "Search Roots",
				"description": "Search Roots",
				"tags": [
					"Root"
				],
				"parameters": [
					{
						"in": "query",
						"name": "orderBy",
						"description": "order by field",
						"required": false,
						"schema": {
							"$ref": "#/components/schemas/DefaultOrderFields"
						}
					},
					{
						"in": "query",
						"name": "orderDesc",
						"description": "order direction ascending or descending",
						"required": false,
						"example": true,
						"schema": {
							"type": "boolean",
							"description": "order direction ascending or descending"
						}
					},
					{
						"in": "query",
						"name": "query",
						"description": "filter by Search Query",
						"required": false,
						"example": "compilations",
						"schema": {
							"type": "string",
							"description": "filter by Search Query"
						}
					},
					{
						"in": "query",
						"name": "name",
						"description": "filter by Artist Name",
						"required": false,
						"example": "Compilations",
						"schema": {
							"type": "string",
							"description": "filter by Artist Name"
						}
					},
					{
						"in": "query",
						"name": "ids",
						"description": "filter by Root Ids",
						"required": false,
						"example": "c0ffeec0-ffee-c0ff-eec0-ffeec0ffeec0",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/components/schemas/ID"
							}
						}
					},
					{
						"in": "query",
						"name": "since",
						"description": "filter by Creation timestamp",
						"required": false,
						"example": "2000-12-31T23:00:00.000Z",
						"schema": {
							"type": "integer",
							"minimum": 0,
							"description": "filter by Creation timestamp"
						}
					},
					{
						"in": "query",
						"name": "strategies",
						"description": "filter by Scan Strategy",
						"required": false,
						"example": [
							"auto"
						],
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/components/schemas/RootScanStrategy"
							}
						}
					},
					{
						"in": "query",
						"name": "trackIDs",
						"description": "filter by Track Ids",
						"required": false,
						"example": "c0ffeec0-ffee-c0ff-eec0-ffeec0ffeec0",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/components/schemas/ID"
							}
						}
					},
					{
						"in": "query",
						"name": "folderIDs",
						"description": "filter by Folder Ids",
						"required": false,
						"example": "c0ffeec0-ffee-c0ff-eec0-ffeec0ffeec0",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/components/schemas/ID"
							}
						}
					},
					{
						"in": "query",
						"name": "albumIDs",
						"description": "filter by Album Ids",
						"required": false,
						"example": "c0ffeec0-ffee-c0ff-eec0-ffeec0ffeec0",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/components/schemas/ID"
							}
						}
					},
					{
						"in": "query",
						"name": "artistIDs",
						"description": "filter by Artist Ids",
						"required": false,
						"example": "c0ffeec0-ffee-c0ff-eec0-ffeec0ffeec0",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/components/schemas/ID"
							}
						}
					},
					{
						"in": "query",
						"name": "seriesIDs",
						"description": "filter by Series Ids",
						"required": false,
						"example": "c0ffeec0-ffee-c0ff-eec0-ffeec0ffeec0",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/components/schemas/ID"
							}
						}
					},
					{
						"in": "query",
						"name": "skip",
						"description": "return items starting from offset position",
						"required": false,
						"example": 0,
						"schema": {
							"type": "integer",
							"default": 0,
							"minimum": 0,
							"description": "return items starting from offset position"
						}
					},
					{
						"in": "query",
						"name": "take",
						"description": "amount of returned items",
						"required": false,
						"example": 25,
						"schema": {
							"type": "integer",
							"minimum": 1,
							"description": "amount of returned items"
						}
					}
				],
				"responses": {
					"200": {
						"description": "json data",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/RootPage"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"404": {
						"description": "Item not found"
					},
					"422": {
						"description": "Invalid parameter"
					}
				},
				"security": [
					{
						"cookieAuth": [
							"stream"
						]
					},
					{
						"bearerAuth": [
							"stream"
						]
					}
				]
			}
		},
		"/root/status": {
			"get": {
				"operationId": "RootController.status",
				"summary": "Get root status by id",
				"description": "Get root status by id",
				"tags": [
					"Root"
				],
				"parameters": [
					{
						"in": "query",
						"name": "id",
						"description": "Root Id",
						"required": true,
						"example": "c0ffeec0-ffee-c0ff-eec0-ffeec0ffeec0",
						"schema": {
							"$ref": "#/components/schemas/ID"
						}
					}
				],
				"responses": {
					"200": {
						"description": "json data",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/RootUpdateStatus"
								}
							}
						}
					},
					"400": {
						"description": "Missing parameter"
					},
					"401": {
						"description": "Unauthorized"
					},
					"404": {
						"description": "Item not found"
					},
					"422": {
						"description": "Invalid parameter"
					}
				},
				"security": [
					{
						"cookieAuth": [
							"stream"
						]
					},
					{
						"bearerAuth": [
							"stream"
						]
					}
				]
			}
		},
		"/root/create": {
			"post": {
				"operationId": "RootController.create",
				"summary": "Create a root",
				"description": "Create a root",
				"tags": [
					"Root"
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/RootMutateArgs"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "json data",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/AdminChangeQueueInfo"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					}
				},
				"security": [
					{
						"cookieAuth": [
							"admin"
						]
					},
					{
						"bearerAuth": [
							"admin"
						]
					}
				]
			}
		},
		"/root/update": {
			"post": {
				"operationId": "RootController.update",
				"summary": "Update a root",
				"description": "Update a root",
				"tags": [
					"Root"
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"allOf": [
									{
										"$ref": "#/components/schemas/RootMutateArgs"
									},
									{
										"properties": {
											"id": {
												"$ref": "#/components/schemas/ID"
											}
										},
										"description": "Root Id",
										"required": [
											"id"
										]
									}
								]
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "json data",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/AdminChangeQueueInfo"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					}
				},
				"security": [
					{
						"cookieAuth": [
							"admin"
						]
					},
					{
						"bearerAuth": [
							"admin"
						]
					}
				]
			}
		},
		"/root/remove": {
			"post": {
				"operationId": "RootController.remove",
				"summary": "Remove a root",
				"description": "Remove a root",
				"tags": [
					"Root"
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"properties": {
									"id": {
										"$ref": "#/components/schemas/ID"
									}
								},
								"description": "Root Id",
								"required": [
									"id"
								]
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "json data",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/AdminChangeQueueInfo"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					}
				},
				"security": [
					{
						"cookieAuth": [
							"admin"
						]
					},
					{
						"bearerAuth": [
							"admin"
						]
					}
				]
			}
		},
		"/root/refresh": {
			"post": {
				"operationId": "RootController.refresh",
				"summary": "Check podcast feeds for new episodes",
				"description": "Check podcast feeds for new episodes",
				"tags": [
					"Root"
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/RootRefreshArgs"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "json data",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/AdminChangeQueueInfo"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					}
				},
				"security": [
					{
						"cookieAuth": [
							"admin"
						]
					},
					{
						"bearerAuth": [
							"admin"
						]
					}
				]
			}
		},
		"/series/id": {
			"get": {
				"operationId": "SeriesController.id",
				"summary": "Get Series",
				"description": "Get a Series by Id",
				"tags": [
					"Series"
				],
				"parameters": [
					{
						"in": "query",
						"name": "trackIncMedia",
						"description": "include media information on track(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include media information on track(s)"
						}
					},
					{
						"in": "query",
						"name": "trackIncTag",
						"description": "include tag on track(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include tag on track(s)"
						}
					},
					{
						"in": "query",
						"name": "trackIncRawTag",
						"description": "include raw tag on track(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include raw tag on track(s)"
						}
					},
					{
						"in": "query",
						"name": "trackIncState",
						"description": "include user states (fav,rate) on track(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include user states (fav,rate) on track(s)"
						}
					},
					{
						"in": "query",
						"name": "albumIncTrackIDs",
						"description": "include track ids on album(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include track ids on album(s)"
						}
					},
					{
						"in": "query",
						"name": "albumIncTrackCount",
						"description": "include track count on album(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include track count on album(s)"
						}
					},
					{
						"in": "query",
						"name": "albumIncState",
						"description": "include user states (fav,rate) on album(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include user states (fav,rate) on album(s)"
						}
					},
					{
						"in": "query",
						"name": "albumIncInfo",
						"description": "include extended meta data on album(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include extended meta data on album(s)"
						}
					},
					{
						"in": "query",
						"name": "seriesIncAlbums",
						"description": "include albums on series",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include albums on series"
						}
					},
					{
						"in": "query",
						"name": "seriesIncTracks",
						"description": "include tracks on artist(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include tracks on artist(s)"
						}
					},
					{
						"in": "query",
						"name": "seriesIncAlbumIDs",
						"description": "include album ids on artist(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include album ids on artist(s)"
						}
					},
					{
						"in": "query",
						"name": "seriesIncAlbumCount",
						"description": "include album counts on artist(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include album counts on artist(s)"
						}
					},
					{
						"in": "query",
						"name": "seriesIncState",
						"description": "include user states (fav,rate) on artist(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include user states (fav,rate) on artist(s)"
						}
					},
					{
						"in": "query",
						"name": "seriesIncTrackIDs",
						"description": "include track ids on artist(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include track ids on artist(s)"
						}
					},
					{
						"in": "query",
						"name": "seriesIncTrackCount",
						"description": "include track counts on artist(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include track counts on artist(s)"
						}
					},
					{
						"in": "query",
						"name": "seriesIncInfo",
						"description": "include extended meta data on artist(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include extended meta data on artist(s)"
						}
					},
					{
						"in": "query",
						"name": "id",
						"description": "Series Id",
						"required": true,
						"example": "c0ffeec0-ffee-c0ff-eec0-ffeec0ffeec0",
						"schema": {
							"$ref": "#/components/schemas/ID"
						}
					}
				],
				"responses": {
					"200": {
						"description": "json data",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Series"
								}
							}
						}
					},
					"400": {
						"description": "Missing parameter"
					},
					"401": {
						"description": "Unauthorized"
					},
					"404": {
						"description": "Item not found"
					},
					"422": {
						"description": "Invalid parameter"
					}
				},
				"security": [
					{
						"cookieAuth": [
							"stream"
						]
					},
					{
						"bearerAuth": [
							"stream"
						]
					}
				]
			}
		},
		"/series/index": {
			"get": {
				"operationId": "SeriesController.index",
				"summary": "Get Index",
				"description": "Get the Navigation Index for Series",
				"tags": [
					"Series"
				],
				"parameters": [
					{
						"in": "query",
						"name": "query",
						"description": "filter by Search Query",
						"required": false,
						"example": "awesome",
						"schema": {
							"type": "string",
							"description": "filter by Search Query"
						}
					},
					{
						"in": "query",
						"name": "name",
						"description": "filter by Name",
						"required": false,
						"example": "Awesome Series",
						"schema": {
							"type": "string",
							"description": "filter by Name"
						}
					},
					{
						"in": "query",
						"name": "ids",
						"description": "filter by Series Ids",
						"required": false,
						"example": "c0ffeec0-ffee-c0ff-eec0-ffeec0ffeec0",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/components/schemas/ID"
							}
						}
					},
					{
						"in": "query",
						"name": "albumTypes",
						"description": "filter by Album Types",
						"required": false,
						"example": [
							"audiobook"
						],
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/components/schemas/AlbumType"
							}
						}
					},
					{
						"in": "query",
						"name": "since",
						"description": "filter by Creation timestamp",
						"required": false,
						"example": "2000-12-31T23:00:00.000Z",
						"schema": {
							"type": "integer",
							"minimum": 0,
							"description": "filter by Creation timestamp"
						}
					},
					{
						"in": "query",
						"name": "trackIDs",
						"description": "filter by Track Ids",
						"required": false,
						"example": "c0ffeec0-ffee-c0ff-eec0-ffeec0ffeec0",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/components/schemas/ID"
							}
						}
					},
					{
						"in": "query",
						"name": "albumIDs",
						"description": "filter by Album Ids",
						"required": false,
						"example": "c0ffeec0-ffee-c0ff-eec0-ffeec0ffeec0",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/components/schemas/ID"
							}
						}
					},
					{
						"in": "query",
						"name": "artistIDs",
						"description": "filter by Artist Ids",
						"required": false,
						"example": "c0ffeec0-ffee-c0ff-eec0-ffeec0ffeec0",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/components/schemas/ID"
							}
						}
					},
					{
						"in": "query",
						"name": "rootIDs",
						"description": "filter by Root Ids",
						"required": false,
						"example": "c0ffeec0-ffee-c0ff-eec0-ffeec0ffeec0",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/components/schemas/ID"
							}
						}
					},
					{
						"in": "query",
						"name": "folderIDs",
						"description": "filter by Folder Ids",
						"required": false,
						"example": "c0ffeec0-ffee-c0ff-eec0-ffeec0ffeec0",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/components/schemas/ID"
							}
						}
					}
				],
				"responses": {
					"200": {
						"description": "json data",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SeriesIndex"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"404": {
						"description": "Item not found"
					},
					"422": {
						"description": "Invalid parameter"
					}
				},
				"security": [
					{
						"cookieAuth": [
							"stream"
						]
					},
					{
						"bearerAuth": [
							"stream"
						]
					}
				]
			}
		},
		"/series/search": {
			"get": {
				"operationId": "SeriesController.search",
				"summary": "Search Series",
				"description": "Search Series",
				"tags": [
					"Series"
				],
				"parameters": [
					{
						"in": "query",
						"name": "list",
						"description": "filter by special list",
						"required": false,
						"example": "faved",
						"schema": {
							"$ref": "#/components/schemas/ListType"
						}
					},
					{
						"in": "query",
						"name": "orderBy",
						"description": "order by field",
						"required": false,
						"schema": {
							"$ref": "#/components/schemas/DefaultOrderFields"
						}
					},
					{
						"in": "query",
						"name": "orderDesc",
						"description": "order direction ascending or descending",
						"required": false,
						"example": true,
						"schema": {
							"type": "boolean",
							"description": "order direction ascending or descending"
						}
					},
					{
						"in": "query",
						"name": "query",
						"description": "filter by Search Query",
						"required": false,
						"example": "awesome",
						"schema": {
							"type": "string",
							"description": "filter by Search Query"
						}
					},
					{
						"in": "query",
						"name": "name",
						"description": "filter by Name",
						"required": false,
						"example": "Awesome Series",
						"schema": {
							"type": "string",
							"description": "filter by Name"
						}
					},
					{
						"in": "query",
						"name": "ids",
						"description": "filter by Series Ids",
						"required": false,
						"example": "c0ffeec0-ffee-c0ff-eec0-ffeec0ffeec0",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/components/schemas/ID"
							}
						}
					},
					{
						"in": "query",
						"name": "albumTypes",
						"description": "filter by Album Types",
						"required": false,
						"example": [
							"audiobook"
						],
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/components/schemas/AlbumType"
							}
						}
					},
					{
						"in": "query",
						"name": "since",
						"description": "filter by Creation timestamp",
						"required": false,
						"example": "2000-12-31T23:00:00.000Z",
						"schema": {
							"type": "integer",
							"minimum": 0,
							"description": "filter by Creation timestamp"
						}
					},
					{
						"in": "query",
						"name": "trackIDs",
						"description": "filter by Track Ids",
						"required": false,
						"example": "c0ffeec0-ffee-c0ff-eec0-ffeec0ffeec0",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/components/schemas/ID"
							}
						}
					},
					{
						"in": "query",
						"name": "albumIDs",
						"description": "filter by Album Ids",
						"required": false,
						"example": "c0ffeec0-ffee-c0ff-eec0-ffeec0ffeec0",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/components/schemas/ID"
							}
						}
					},
					{
						"in": "query",
						"name": "artistIDs",
						"description": "filter by Artist Ids",
						"required": false,
						"example": "c0ffeec0-ffee-c0ff-eec0-ffeec0ffeec0",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/components/schemas/ID"
							}
						}
					},
					{
						"in": "query",
						"name": "rootIDs",
						"description": "filter by Root Ids",
						"required": false,
						"example": "c0ffeec0-ffee-c0ff-eec0-ffeec0ffeec0",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/components/schemas/ID"
							}
						}
					},
					{
						"in": "query",
						"name": "folderIDs",
						"description": "filter by Folder Ids",
						"required": false,
						"example": "c0ffeec0-ffee-c0ff-eec0-ffeec0ffeec0",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/components/schemas/ID"
							}
						}
					},
					{
						"in": "query",
						"name": "trackIncMedia",
						"description": "include media information on track(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include media information on track(s)"
						}
					},
					{
						"in": "query",
						"name": "trackIncTag",
						"description": "include tag on track(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include tag on track(s)"
						}
					},
					{
						"in": "query",
						"name": "trackIncRawTag",
						"description": "include raw tag on track(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include raw tag on track(s)"
						}
					},
					{
						"in": "query",
						"name": "trackIncState",
						"description": "include user states (fav,rate) on track(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include user states (fav,rate) on track(s)"
						}
					},
					{
						"in": "query",
						"name": "albumIncTrackIDs",
						"description": "include track ids on album(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include track ids on album(s)"
						}
					},
					{
						"in": "query",
						"name": "albumIncTrackCount",
						"description": "include track count on album(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include track count on album(s)"
						}
					},
					{
						"in": "query",
						"name": "albumIncState",
						"description": "include user states (fav,rate) on album(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include user states (fav,rate) on album(s)"
						}
					},
					{
						"in": "query",
						"name": "albumIncInfo",
						"description": "include extended meta data on album(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include extended meta data on album(s)"
						}
					},
					{
						"in": "query",
						"name": "seriesIncAlbums",
						"description": "include albums on series",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include albums on series"
						}
					},
					{
						"in": "query",
						"name": "seriesIncTracks",
						"description": "include tracks on artist(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include tracks on artist(s)"
						}
					},
					{
						"in": "query",
						"name": "seriesIncAlbumIDs",
						"description": "include album ids on artist(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include album ids on artist(s)"
						}
					},
					{
						"in": "query",
						"name": "seriesIncAlbumCount",
						"description": "include album counts on artist(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include album counts on artist(s)"
						}
					},
					{
						"in": "query",
						"name": "seriesIncState",
						"description": "include user states (fav,rate) on artist(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include user states (fav,rate) on artist(s)"
						}
					},
					{
						"in": "query",
						"name": "seriesIncTrackIDs",
						"description": "include track ids on artist(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include track ids on artist(s)"
						}
					},
					{
						"in": "query",
						"name": "seriesIncTrackCount",
						"description": "include track counts on artist(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include track counts on artist(s)"
						}
					},
					{
						"in": "query",
						"name": "seriesIncInfo",
						"description": "include extended meta data on artist(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include extended meta data on artist(s)"
						}
					},
					{
						"in": "query",
						"name": "skip",
						"description": "return items starting from offset position",
						"required": false,
						"example": 0,
						"schema": {
							"type": "integer",
							"default": 0,
							"minimum": 0,
							"description": "return items starting from offset position"
						}
					},
					{
						"in": "query",
						"name": "take",
						"description": "amount of returned items",
						"required": false,
						"example": 25,
						"schema": {
							"type": "integer",
							"minimum": 1,
							"description": "amount of returned items"
						}
					}
				],
				"responses": {
					"200": {
						"description": "json data",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SeriesPage"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"404": {
						"description": "Item not found"
					},
					"422": {
						"description": "Invalid parameter"
					}
				},
				"security": [
					{
						"cookieAuth": [
							"stream"
						]
					},
					{
						"bearerAuth": [
							"stream"
						]
					}
				]
			}
		},
		"/series/info": {
			"get": {
				"operationId": "SeriesController.info",
				"summary": "Get Info",
				"description": "Get Meta Data Info of a Series by Id (External Service)",
				"tags": [
					"Series"
				],
				"parameters": [
					{
						"in": "query",
						"name": "id",
						"description": "Series Id",
						"required": true,
						"example": "c0ffeec0-ffee-c0ff-eec0-ffeec0ffeec0",
						"schema": {
							"$ref": "#/components/schemas/ID"
						}
					}
				],
				"responses": {
					"200": {
						"description": "json data",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ExtendedInfoResult"
								}
							}
						}
					},
					"400": {
						"description": "Missing parameter"
					},
					"401": {
						"description": "Unauthorized"
					},
					"404": {
						"description": "Item not found"
					},
					"422": {
						"description": "Invalid parameter"
					}
				},
				"security": [
					{
						"cookieAuth": [
							"stream"
						]
					},
					{
						"bearerAuth": [
							"stream"
						]
					}
				]
			}
		},
		"/series/albums": {
			"get": {
				"operationId": "SeriesController.albums",
				"summary": "Get Albums",
				"description": "Get Albums of Series",
				"tags": [
					"Series"
				],
				"parameters": [
					{
						"in": "query",
						"name": "orderDesc",
						"description": "order direction ascending or descending",
						"required": false,
						"example": true,
						"schema": {
							"type": "boolean",
							"description": "order direction ascending or descending"
						}
					},
					{
						"in": "query",
						"name": "orderBy",
						"description": "order by field",
						"required": false,
						"schema": {
							"$ref": "#/components/schemas/AlbumOrderFields"
						}
					},
					{
						"in": "query",
						"name": "query",
						"description": "filter by Search Query",
						"required": false,
						"example": "awesome",
						"schema": {
							"type": "string",
							"description": "filter by Search Query"
						}
					},
					{
						"in": "query",
						"name": "name",
						"description": "filter by Name",
						"required": false,
						"example": "Awesome Series",
						"schema": {
							"type": "string",
							"description": "filter by Name"
						}
					},
					{
						"in": "query",
						"name": "ids",
						"description": "filter by Series Ids",
						"required": false,
						"example": "c0ffeec0-ffee-c0ff-eec0-ffeec0ffeec0",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/components/schemas/ID"
							}
						}
					},
					{
						"in": "query",
						"name": "albumTypes",
						"description": "filter by Album Types",
						"required": false,
						"example": [
							"audiobook"
						],
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/components/schemas/AlbumType"
							}
						}
					},
					{
						"in": "query",
						"name": "since",
						"description": "filter by Creation timestamp",
						"required": false,
						"example": "2000-12-31T23:00:00.000Z",
						"schema": {
							"type": "integer",
							"minimum": 0,
							"description": "filter by Creation timestamp"
						}
					},
					{
						"in": "query",
						"name": "trackIDs",
						"description": "filter by Track Ids",
						"required": false,
						"example": "c0ffeec0-ffee-c0ff-eec0-ffeec0ffeec0",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/components/schemas/ID"
							}
						}
					},
					{
						"in": "query",
						"name": "albumIDs",
						"description": "filter by Album Ids",
						"required": false,
						"example": "c0ffeec0-ffee-c0ff-eec0-ffeec0ffeec0",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/components/schemas/ID"
							}
						}
					},
					{
						"in": "query",
						"name": "artistIDs",
						"description": "filter by Artist Ids",
						"required": false,
						"example": "c0ffeec0-ffee-c0ff-eec0-ffeec0ffeec0",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/components/schemas/ID"
							}
						}
					},
					{
						"in": "query",
						"name": "rootIDs",
						"description": "filter by Root Ids",
						"required": false,
						"example": "c0ffeec0-ffee-c0ff-eec0-ffeec0ffeec0",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/components/schemas/ID"
							}
						}
					},
					{
						"in": "query",
						"name": "folderIDs",
						"description": "filter by Folder Ids",
						"required": false,
						"example": "c0ffeec0-ffee-c0ff-eec0-ffeec0ffeec0",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/components/schemas/ID"
							}
						}
					},
					{
						"in": "query",
						"name": "albumIncTrackIDs",
						"description": "include track ids on album(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include track ids on album(s)"
						}
					},
					{
						"in": "query",
						"name": "albumIncTrackCount",
						"description": "include track count on album(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include track count on album(s)"
						}
					},
					{
						"in": "query",
						"name": "albumIncState",
						"description": "include user states (fav,rate) on album(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include user states (fav,rate) on album(s)"
						}
					},
					{
						"in": "query",
						"name": "albumIncInfo",
						"description": "include extended meta data on album(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include extended meta data on album(s)"
						}
					},
					{
						"in": "query",
						"name": "skip",
						"description": "return items starting from offset position",
						"required": false,
						"example": 0,
						"schema": {
							"type": "integer",
							"default": 0,
							"minimum": 0,
							"description": "return items starting from offset position"
						}
					},
					{
						"in": "query",
						"name": "take",
						"description": "amount of returned items",
						"required": false,
						"example": 25,
						"schema": {
							"type": "integer",
							"minimum": 1,
							"description": "amount of returned items"
						}
					}
				],
				"responses": {
					"200": {
						"description": "json data",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/AlbumPage"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"404": {
						"description": "Item not found"
					},
					"422": {
						"description": "Invalid parameter"
					}
				},
				"security": [
					{
						"cookieAuth": [
							"stream"
						]
					},
					{
						"bearerAuth": [
							"stream"
						]
					}
				]
			}
		},
		"/series/tracks": {
			"get": {
				"operationId": "SeriesController.tracks",
				"summary": "Get Tracks",
				"description": "Get Tracks of Series",
				"tags": [
					"Series"
				],
				"parameters": [
					{
						"in": "query",
						"name": "orderDesc",
						"description": "order direction ascending or descending",
						"required": false,
						"example": true,
						"schema": {
							"type": "boolean",
							"description": "order direction ascending or descending"
						}
					},
					{
						"in": "query",
						"name": "orderBy",
						"description": "order by field",
						"required": false,
						"schema": {
							"$ref": "#/components/schemas/TrackOrderFields"
						}
					},
					{
						"in": "query",
						"name": "query",
						"description": "filter by Search Query",
						"required": false,
						"example": "awesome",
						"schema": {
							"type": "string",
							"description": "filter by Search Query"
						}
					},
					{
						"in": "query",
						"name": "name",
						"description": "filter by Name",
						"required": false,
						"example": "Awesome Series",
						"schema": {
							"type": "string",
							"description": "filter by Name"
						}
					},
					{
						"in": "query",
						"name": "ids",
						"description": "filter by Series Ids",
						"required": false,
						"example": "c0ffeec0-ffee-c0ff-eec0-ffeec0ffeec0",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/components/schemas/ID"
							}
						}
					},
					{
						"in": "query",
						"name": "albumTypes",
						"description": "filter by Album Types",
						"required": false,
						"example": [
							"audiobook"
						],
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/components/schemas/AlbumType"
							}
						}
					},
					{
						"in": "query",
						"name": "since",
						"description": "filter by Creation timestamp",
						"required": false,
						"example": "2000-12-31T23:00:00.000Z",
						"schema": {
							"type": "integer",
							"minimum": 0,
							"description": "filter by Creation timestamp"
						}
					},
					{
						"in": "query",
						"name": "trackIDs",
						"description": "filter by Track Ids",
						"required": false,
						"example": "c0ffeec0-ffee-c0ff-eec0-ffeec0ffeec0",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/components/schemas/ID"
							}
						}
					},
					{
						"in": "query",
						"name": "albumIDs",
						"description": "filter by Album Ids",
						"required": false,
						"example": "c0ffeec0-ffee-c0ff-eec0-ffeec0ffeec0",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/components/schemas/ID"
							}
						}
					},
					{
						"in": "query",
						"name": "artistIDs",
						"description": "filter by Artist Ids",
						"required": false,
						"example": "c0ffeec0-ffee-c0ff-eec0-ffeec0ffeec0",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/components/schemas/ID"
							}
						}
					},
					{
						"in": "query",
						"name": "rootIDs",
						"description": "filter by Root Ids",
						"required": false,
						"example": "c0ffeec0-ffee-c0ff-eec0-ffeec0ffeec0",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/components/schemas/ID"
							}
						}
					},
					{
						"in": "query",
						"name": "folderIDs",
						"description": "filter by Folder Ids",
						"required": false,
						"example": "c0ffeec0-ffee-c0ff-eec0-ffeec0ffeec0",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/components/schemas/ID"
							}
						}
					},
					{
						"in": "query",
						"name": "trackIncMedia",
						"description": "include media information on track(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include media information on track(s)"
						}
					},
					{
						"in": "query",
						"name": "trackIncTag",
						"description": "include tag on track(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include tag on track(s)"
						}
					},
					{
						"in": "query",
						"name": "trackIncRawTag",
						"description": "include raw tag on track(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include raw tag on track(s)"
						}
					},
					{
						"in": "query",
						"name": "trackIncState",
						"description": "include user states (fav,rate) on track(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include user states (fav,rate) on track(s)"
						}
					},
					{
						"in": "query",
						"name": "skip",
						"description": "return items starting from offset position",
						"required": false,
						"example": 0,
						"schema": {
							"type": "integer",
							"default": 0,
							"minimum": 0,
							"description": "return items starting from offset position"
						}
					},
					{
						"in": "query",
						"name": "take",
						"description": "amount of returned items",
						"required": false,
						"example": 25,
						"schema": {
							"type": "integer",
							"minimum": 1,
							"description": "amount of returned items"
						}
					}
				],
				"responses": {
					"200": {
						"description": "json data",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/TrackPage"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"404": {
						"description": "Item not found"
					},
					"422": {
						"description": "Invalid parameter"
					}
				},
				"security": [
					{
						"cookieAuth": [
							"stream"
						]
					},
					{
						"bearerAuth": [
							"stream"
						]
					}
				]
			}
		},
		"/session": {
			"get": {
				"operationId": "SessionController.session",
				"summary": "Check Session",
				"description": "Check the Login State",
				"tags": [
					"Access"
				],
				"parameters": [],
				"responses": {
					"200": {
						"description": "json data",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Session"
								}
							}
						}
					}
				},
				"security": []
			}
		},
		"/session/list": {
			"get": {
				"operationId": "SessionController.list",
				"summary": "Get Sessions",
				"description": "Get a list of all sessions of the current user",
				"tags": [
					"Access"
				],
				"parameters": [],
				"responses": {
					"200": {
						"description": "json data",
						"content": {
							"application/json": {
								"schema": {
									"type": "array",
									"items": {
										"$ref": "#/components/schemas/UserSession"
									}
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					}
				},
				"security": [
					{
						"cookieAuth": [
							"stream"
						]
					},
					{
						"bearerAuth": [
							"stream"
						]
					}
				]
			}
		},
		"/session/remove": {
			"post": {
				"operationId": "SessionController.remove",
				"summary": "Remove Session",
				"description": "Remove a user session",
				"tags": [
					"Access"
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"properties": {
									"id": {
										"$ref": "#/components/schemas/ID"
									}
								},
								"description": "User Session Id",
								"required": [
									"id"
								]
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "ok"
					},
					"401": {
						"description": "Unauthorized"
					}
				},
				"security": [
					{
						"cookieAuth": [
							"stream"
						]
					},
					{
						"bearerAuth": [
							"stream"
						]
					}
				]
			}
		},
		"/state/id": {
			"get": {
				"operationId": "StateController.state",
				"summary": "Get State",
				"description": "Get User State (fav/rate/etc) [Album, Artist, Artwork, Episode, Folder, Root, Playlist, Podcast, Radio, Series, Track]",
				"tags": [
					"State"
				],
				"parameters": [
					{
						"in": "query",
						"name": "id",
						"description": "Object Id",
						"required": true,
						"example": "c0ffeec0-ffee-c0ff-eec0-ffeec0ffeec0",
						"schema": {
							"$ref": "#/components/schemas/ID"
						}
					}
				],
				"responses": {
					"200": {
						"description": "json data",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/State"
								}
							}
						}
					},
					"400": {
						"description": "Missing parameter"
					},
					"401": {
						"description": "Unauthorized"
					},
					"404": {
						"description": "Item not found"
					},
					"422": {
						"description": "Invalid parameter"
					}
				},
				"security": [
					{
						"cookieAuth": [
							"stream"
						]
					},
					{
						"bearerAuth": [
							"stream"
						]
					}
				]
			}
		},
		"/state/list": {
			"get": {
				"operationId": "StateController.states",
				"summary": "Get States",
				"description": "Get User States (fav/rate/etc) [Album, Artist, Artwork, Episode, Folder, Root, Playlist, Podcast, Radio, Series, Track]",
				"tags": [
					"State"
				],
				"parameters": [
					{
						"in": "query",
						"name": "ids",
						"description": "IDs",
						"required": true,
						"example": "c0ffeec0-ffee-c0ff-eec0-ffeec0ffeec0",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/components/schemas/ID"
							}
						}
					}
				],
				"responses": {
					"200": {
						"description": "json data",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/States"
								}
							}
						}
					},
					"400": {
						"description": "Missing parameter"
					},
					"401": {
						"description": "Unauthorized"
					},
					"404": {
						"description": "Item not found"
					},
					"422": {
						"description": "Invalid parameter"
					}
				},
				"security": [
					{
						"cookieAuth": [
							"stream"
						]
					},
					{
						"bearerAuth": [
							"stream"
						]
					}
				]
			}
		},
		"/state/fav": {
			"post": {
				"operationId": "StateController.fav",
				"summary": "Fav",
				"description": "Set/Unset Favorite [Album, Artist, Artwork, Episode, Folder, Root, Playlist, Podcast, Radio, Series, Track]",
				"tags": [
					"State"
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/FavArgs"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "json data",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/State"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					}
				},
				"security": [
					{
						"cookieAuth": [
							"stream"
						]
					},
					{
						"bearerAuth": [
							"stream"
						]
					}
				]
			}
		},
		"/state/rate": {
			"post": {
				"operationId": "StateController.rate",
				"summary": "Rate",
				"description": "Rate [Album, Artist, Artwork, Episode, Folder, Root, Playlist, Podcast, Radio, Series, Track]",
				"tags": [
					"State"
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/RateArgs"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "json data",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/State"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					}
				},
				"security": [
					{
						"cookieAuth": [
							"stream"
						]
					},
					{
						"bearerAuth": [
							"stream"
						]
					}
				]
			}
		},
		"/stats": {
			"get": {
				"operationId": "StatsController.get",
				"summary": "Get Stats",
				"description": "Get count stats for Folders/Tracks/Albums/...",
				"tags": [
					"Various"
				],
				"parameters": [
					{
						"in": "query",
						"name": "rootID",
						"description": "filter stats by Root Id",
						"required": false,
						"example": "c0ffeec0-ffee-c0ff-eec0-ffeec0ffeec0",
						"schema": {
							"$ref": "#/components/schemas/ID"
						}
					}
				],
				"responses": {
					"200": {
						"description": "json data",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Stats"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"404": {
						"description": "Item not found"
					},
					"422": {
						"description": "Invalid parameter"
					}
				},
				"security": [
					{
						"cookieAuth": [
							"stream"
						]
					},
					{
						"bearerAuth": [
							"stream"
						]
					}
				]
			}
		},
		"/stats/user": {
			"get": {
				"operationId": "StatsController.user",
				"summary": "Get User Stats",
				"description": "Get count stats for the calling User: Playlists/Favorites/Played",
				"tags": [
					"Various"
				],
				"parameters": [],
				"responses": {
					"200": {
						"description": "json data",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/UserStats"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					}
				},
				"security": [
					{
						"cookieAuth": [
							"stream"
						]
					},
					{
						"bearerAuth": [
							"stream"
						]
					}
				]
			}
		},
		"/stream/{id}_{maxBitRate}.{format}": {
			"get": {
				"operationId": "StreamController.stream",
				"summary": "Get Stream",
				"description": "Stream a media file in a format [Episode, Track]",
				"tags": [
					"Stream"
				],
				"parameters": [
					{
						"in": "path",
						"name": "maxBitRate",
						"description": "maximal bitrate if transcoding (in Kbps)",
						"required": true,
						"example": 128,
						"schema": {
							"type": "integer",
							"minimum": 10,
							"maximum": 480,
							"description": "maximal bitrate if transcoding (in Kbps)"
						}
					},
					{
						"in": "path",
						"name": "format",
						"description": "format of the audio",
						"required": true,
						"example": "mp3",
						"schema": {
							"$ref": "#/components/schemas/AudioFormatType"
						}
					},
					{
						"in": "path",
						"name": "id",
						"description": "Media Id",
						"required": true,
						"example": "c0ffeec0-ffee-c0ff-eec0-ffeec0ffeec0",
						"schema": {
							"$ref": "#/components/schemas/ID"
						}
					}
				],
				"responses": {
					"200": {
						"description": "binary data",
						"content": {
							"audio/mpeg": {
								"schema": {
									"type": "string",
									"format": "binary"
								}
							},
							"audio/flac": {
								"schema": {
									"type": "string",
									"format": "binary"
								}
							},
							"audio/mp4": {
								"schema": {
									"type": "string",
									"format": "binary"
								}
							},
							"audio/ogg": {
								"schema": {
									"type": "string",
									"format": "binary"
								}
							},
							"audio/x-flv": {
								"schema": {
									"type": "string",
									"format": "binary"
								}
							}
						}
					},
					"400": {
						"description": "Missing parameter"
					},
					"401": {
						"description": "Unauthorized"
					},
					"404": {
						"description": "Item not found"
					},
					"422": {
						"description": "Invalid parameter"
					}
				},
				"security": [
					{
						"cookieAuth": [
							"stream"
						]
					},
					{
						"bearerAuth": [
							"stream"
						]
					}
				]
			}
		},
		"/stream/{id}.{format}": {
			"get": {
				"operationId": "StreamController.stream/{id}.{format}",
				"summary": "Get Stream by Id and Format",
				"description": "Stream a media file in a format [Episode, Track]",
				"tags": [
					"Stream"
				],
				"parameters": [
					{
						"in": "path",
						"name": "format",
						"description": "format of the audio",
						"required": true,
						"example": "mp3",
						"schema": {
							"$ref": "#/components/schemas/AudioFormatType"
						}
					},
					{
						"in": "path",
						"name": "id",
						"description": "Media Id",
						"required": true,
						"example": "c0ffeec0-ffee-c0ff-eec0-ffeec0ffeec0",
						"schema": {
							"$ref": "#/components/schemas/ID"
						}
					}
				],
				"responses": {
					"200": {
						"description": "binary data",
						"content": {
							"audio/mpeg": {
								"schema": {
									"type": "string",
									"format": "binary"
								}
							},
							"audio/flac": {
								"schema": {
									"type": "string",
									"format": "binary"
								}
							},
							"audio/mp4": {
								"schema": {
									"type": "string",
									"format": "binary"
								}
							},
							"audio/ogg": {
								"schema": {
									"type": "string",
									"format": "binary"
								}
							},
							"audio/x-flv": {
								"schema": {
									"type": "string",
									"format": "binary"
								}
							}
						}
					},
					"400": {
						"description": "Missing parameter"
					},
					"401": {
						"description": "Unauthorized"
					},
					"404": {
						"description": "Item not found"
					},
					"422": {
						"description": "Invalid parameter"
					}
				},
				"security": [
					{
						"cookieAuth": [
							"stream"
						]
					},
					{
						"bearerAuth": [
							"stream"
						]
					}
				]
			}
		},
		"/stream/{id}_{maxBitRate}": {
			"get": {
				"operationId": "StreamController.stream/{id}_{maxBitRate}",
				"summary": "Get Stream by Id and Bitrate",
				"description": "Stream a media file in a format [Episode, Track]",
				"tags": [
					"Stream"
				],
				"parameters": [
					{
						"in": "path",
						"name": "maxBitRate",
						"description": "maximal bitrate if transcoding (in Kbps)",
						"required": true,
						"example": 128,
						"schema": {
							"type": "integer",
							"minimum": 10,
							"maximum": 480,
							"description": "maximal bitrate if transcoding (in Kbps)"
						}
					},
					{
						"in": "path",
						"name": "id",
						"description": "Media Id",
						"required": true,
						"example": "c0ffeec0-ffee-c0ff-eec0-ffeec0ffeec0",
						"schema": {
							"$ref": "#/components/schemas/ID"
						}
					}
				],
				"responses": {
					"200": {
						"description": "binary data",
						"content": {
							"audio/mpeg": {
								"schema": {
									"type": "string",
									"format": "binary"
								}
							},
							"audio/flac": {
								"schema": {
									"type": "string",
									"format": "binary"
								}
							},
							"audio/mp4": {
								"schema": {
									"type": "string",
									"format": "binary"
								}
							},
							"audio/ogg": {
								"schema": {
									"type": "string",
									"format": "binary"
								}
							},
							"audio/x-flv": {
								"schema": {
									"type": "string",
									"format": "binary"
								}
							}
						}
					},
					"400": {
						"description": "Missing parameter"
					},
					"401": {
						"description": "Unauthorized"
					},
					"404": {
						"description": "Item not found"
					},
					"422": {
						"description": "Invalid parameter"
					}
				},
				"security": [
					{
						"cookieAuth": [
							"stream"
						]
					},
					{
						"bearerAuth": [
							"stream"
						]
					}
				]
			}
		},
		"/stream/{id}": {
			"get": {
				"operationId": "StreamController.stream/{id}",
				"summary": "Get Stream by Id",
				"description": "Stream a media file in a format [Episode, Track]",
				"tags": [
					"Stream"
				],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"description": "Media Id",
						"required": true,
						"example": "c0ffeec0-ffee-c0ff-eec0-ffeec0ffeec0",
						"schema": {
							"$ref": "#/components/schemas/ID"
						}
					}
				],
				"responses": {
					"200": {
						"description": "binary data",
						"content": {
							"audio/mpeg": {
								"schema": {
									"type": "string",
									"format": "binary"
								}
							},
							"audio/flac": {
								"schema": {
									"type": "string",
									"format": "binary"
								}
							},
							"audio/mp4": {
								"schema": {
									"type": "string",
									"format": "binary"
								}
							},
							"audio/ogg": {
								"schema": {
									"type": "string",
									"format": "binary"
								}
							},
							"audio/x-flv": {
								"schema": {
									"type": "string",
									"format": "binary"
								}
							}
						}
					},
					"400": {
						"description": "Missing parameter"
					},
					"401": {
						"description": "Unauthorized"
					},
					"404": {
						"description": "Item not found"
					},
					"422": {
						"description": "Invalid parameter"
					}
				},
				"security": [
					{
						"cookieAuth": [
							"stream"
						]
					},
					{
						"bearerAuth": [
							"stream"
						]
					}
				]
			}
		},
		"/track/id": {
			"get": {
				"operationId": "TrackController.id",
				"summary": "Get Track",
				"description": "Get a Track by Id",
				"tags": [
					"Track"
				],
				"parameters": [
					{
						"in": "query",
						"name": "trackIncMedia",
						"description": "include media information on track(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include media information on track(s)"
						}
					},
					{
						"in": "query",
						"name": "trackIncTag",
						"description": "include tag on track(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include tag on track(s)"
						}
					},
					{
						"in": "query",
						"name": "trackIncRawTag",
						"description": "include raw tag on track(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include raw tag on track(s)"
						}
					},
					{
						"in": "query",
						"name": "trackIncState",
						"description": "include user states (fav,rate) on track(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include user states (fav,rate) on track(s)"
						}
					},
					{
						"in": "query",
						"name": "id",
						"description": "Track Id",
						"required": true,
						"example": "c0ffeec0-ffee-c0ff-eec0-ffeec0ffeec0",
						"schema": {
							"$ref": "#/components/schemas/ID"
						}
					}
				],
				"responses": {
					"200": {
						"description": "json data",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Track"
								}
							}
						}
					},
					"400": {
						"description": "Missing parameter"
					},
					"401": {
						"description": "Unauthorized"
					},
					"404": {
						"description": "Item not found"
					},
					"422": {
						"description": "Invalid parameter"
					}
				},
				"security": [
					{
						"cookieAuth": [
							"stream"
						]
					},
					{
						"bearerAuth": [
							"stream"
						]
					}
				]
			}
		},
		"/track/search": {
			"get": {
				"operationId": "TrackController.search",
				"summary": "Search Tracks",
				"description": "Search Tracks",
				"tags": [
					"Track"
				],
				"parameters": [
					{
						"in": "query",
						"name": "list",
						"description": "filter by special list",
						"required": false,
						"example": "faved",
						"schema": {
							"$ref": "#/components/schemas/ListType"
						}
					},
					{
						"in": "query",
						"name": "orderDesc",
						"description": "order direction ascending or descending",
						"required": false,
						"example": true,
						"schema": {
							"type": "boolean",
							"description": "order direction ascending or descending"
						}
					},
					{
						"in": "query",
						"name": "orderBy",
						"description": "order by field",
						"required": false,
						"schema": {
							"$ref": "#/components/schemas/TrackOrderFields"
						}
					},
					{
						"in": "query",
						"name": "query",
						"description": "filter by Search Query",
						"required": false,
						"example": "these",
						"schema": {
							"type": "string",
							"description": "filter by Search Query"
						}
					},
					{
						"in": "query",
						"name": "name",
						"description": "filter by Track Title",
						"required": false,
						"example": "These Days",
						"schema": {
							"type": "string",
							"description": "filter by Track Title"
						}
					},
					{
						"in": "query",
						"name": "ids",
						"description": "filter by Track Ids",
						"required": false,
						"example": "c0ffeec0-ffee-c0ff-eec0-ffeec0ffeec0",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/components/schemas/ID"
							}
						}
					},
					{
						"in": "query",
						"name": "childOfID",
						"description": "filter if track is in folder id (or its child folders)",
						"required": false,
						"example": "c0ffeec0-ffee-c0ff-eec0-ffeec0ffeec0",
						"schema": {
							"$ref": "#/components/schemas/ID"
						}
					},
					{
						"in": "query",
						"name": "artist",
						"description": "filter by artist name",
						"required": false,
						"example": "Nico",
						"schema": {
							"type": "string",
							"description": "filter by artist name"
						}
					},
					{
						"in": "query",
						"name": "album",
						"description": "filter by album name",
						"required": false,
						"example": "Chelsea Girl",
						"schema": {
							"type": "string",
							"description": "filter by album name"
						}
					},
					{
						"in": "query",
						"name": "genres",
						"description": "filter by genres",
						"required": false,
						"example": [
							"Folk Pop"
						],
						"schema": {
							"type": "array",
							"items": {
								"type": "string",
								"description": "filter by genres"
							}
						}
					},
					{
						"in": "query",
						"name": "since",
						"description": "filter by Creation timestamp",
						"required": false,
						"example": "2000-12-31T23:00:00.000Z",
						"schema": {
							"type": "integer",
							"minimum": 0,
							"description": "filter by Creation timestamp"
						}
					},
					{
						"in": "query",
						"name": "seriesIDs",
						"description": "filter by Series Ids",
						"required": false,
						"example": "c0ffeec0-ffee-c0ff-eec0-ffeec0ffeec0",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/components/schemas/ID"
							}
						}
					},
					{
						"in": "query",
						"name": "albumIDs",
						"description": "filter by Album Ids",
						"required": false,
						"example": "c0ffeec0-ffee-c0ff-eec0-ffeec0ffeec0",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/components/schemas/ID"
							}
						}
					},
					{
						"in": "query",
						"name": "artistIDs",
						"description": "filter by Artist Ids",
						"required": false,
						"example": "c0ffeec0-ffee-c0ff-eec0-ffeec0ffeec0",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/components/schemas/ID"
							}
						}
					},
					{
						"in": "query",
						"name": "albumArtistIDs",
						"description": "filter by Album Artist Ids",
						"required": false,
						"example": "c0ffeec0-ffee-c0ff-eec0-ffeec0ffeec0",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/components/schemas/ID"
							}
						}
					},
					{
						"in": "query",
						"name": "rootIDs",
						"description": "filter by Root Ids",
						"required": false,
						"example": "c0ffeec0-ffee-c0ff-eec0-ffeec0ffeec0",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/components/schemas/ID"
							}
						}
					},
					{
						"in": "query",
						"name": "folderIDs",
						"description": "filter by Folder Ids",
						"required": false,
						"example": "c0ffeec0-ffee-c0ff-eec0-ffeec0ffeec0",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/components/schemas/ID"
							}
						}
					},
					{
						"in": "query",
						"name": "bookmarkIDs",
						"description": "filter by Bookmark Ids",
						"required": false,
						"example": "c0ffeec0-ffee-c0ff-eec0-ffeec0ffeec0",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/components/schemas/ID"
							}
						}
					},
					{
						"in": "query",
						"name": "fromYear",
						"description": "filter by since year",
						"required": false,
						"example": 2001,
						"schema": {
							"type": "integer",
							"minimum": 0,
							"description": "filter by since year"
						}
					},
					{
						"in": "query",
						"name": "toYear",
						"description": "filter by until year",
						"required": false,
						"example": 2001,
						"schema": {
							"type": "integer",
							"minimum": 0,
							"description": "filter by until year"
						}
					},
					{
						"in": "query",
						"name": "trackIncMedia",
						"description": "include media information on track(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include media information on track(s)"
						}
					},
					{
						"in": "query",
						"name": "trackIncTag",
						"description": "include tag on track(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include tag on track(s)"
						}
					},
					{
						"in": "query",
						"name": "trackIncRawTag",
						"description": "include raw tag on track(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include raw tag on track(s)"
						}
					},
					{
						"in": "query",
						"name": "trackIncState",
						"description": "include user states (fav,rate) on track(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include user states (fav,rate) on track(s)"
						}
					},
					{
						"in": "query",
						"name": "skip",
						"description": "return items starting from offset position",
						"required": false,
						"example": 0,
						"schema": {
							"type": "integer",
							"default": 0,
							"minimum": 0,
							"description": "return items starting from offset position"
						}
					},
					{
						"in": "query",
						"name": "take",
						"description": "amount of returned items",
						"required": false,
						"example": 25,
						"schema": {
							"type": "integer",
							"minimum": 1,
							"description": "amount of returned items"
						}
					}
				],
				"responses": {
					"200": {
						"description": "json data",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/TrackPage"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"404": {
						"description": "Item not found"
					},
					"422": {
						"description": "Invalid parameter"
					}
				},
				"security": [
					{
						"cookieAuth": [
							"stream"
						]
					},
					{
						"bearerAuth": [
							"stream"
						]
					}
				]
			}
		},
		"/track/similar": {
			"get": {
				"operationId": "TrackController.similar",
				"summary": "Get similar Tracks",
				"description": "Get similar Tracks by Track Id (External Service)",
				"tags": [
					"Track"
				],
				"parameters": [
					{
						"in": "query",
						"name": "trackIncMedia",
						"description": "include media information on track(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include media information on track(s)"
						}
					},
					{
						"in": "query",
						"name": "trackIncTag",
						"description": "include tag on track(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include tag on track(s)"
						}
					},
					{
						"in": "query",
						"name": "trackIncRawTag",
						"description": "include raw tag on track(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include raw tag on track(s)"
						}
					},
					{
						"in": "query",
						"name": "trackIncState",
						"description": "include user states (fav,rate) on track(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include user states (fav,rate) on track(s)"
						}
					},
					{
						"in": "query",
						"name": "skip",
						"description": "return items starting from offset position",
						"required": false,
						"example": 0,
						"schema": {
							"type": "integer",
							"default": 0,
							"minimum": 0,
							"description": "return items starting from offset position"
						}
					},
					{
						"in": "query",
						"name": "take",
						"description": "amount of returned items",
						"required": false,
						"example": 25,
						"schema": {
							"type": "integer",
							"minimum": 1,
							"description": "amount of returned items"
						}
					},
					{
						"in": "query",
						"name": "id",
						"description": "Track Id",
						"required": true,
						"example": "c0ffeec0-ffee-c0ff-eec0-ffeec0ffeec0",
						"schema": {
							"$ref": "#/components/schemas/ID"
						}
					}
				],
				"responses": {
					"200": {
						"description": "json data",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/TrackPage"
								}
							}
						}
					},
					"400": {
						"description": "Missing parameter"
					},
					"401": {
						"description": "Unauthorized"
					},
					"404": {
						"description": "Item not found"
					},
					"422": {
						"description": "Invalid parameter"
					}
				},
				"security": [
					{
						"cookieAuth": [
							"stream"
						]
					},
					{
						"bearerAuth": [
							"stream"
						]
					}
				]
			}
		},
		"/track/lyrics": {
			"get": {
				"operationId": "TrackController.lyrics",
				"summary": "Get Lyrics",
				"description": "Get Lyrics for a Track by Id (External Service or Media File)",
				"tags": [
					"Track"
				],
				"parameters": [
					{
						"in": "query",
						"name": "id",
						"description": "Track Id",
						"required": true,
						"example": "c0ffeec0-ffee-c0ff-eec0-ffeec0ffeec0",
						"schema": {
							"$ref": "#/components/schemas/ID"
						}
					}
				],
				"responses": {
					"200": {
						"description": "json data",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/TrackLyrics"
								}
							}
						}
					},
					"400": {
						"description": "Missing parameter"
					},
					"401": {
						"description": "Unauthorized"
					},
					"404": {
						"description": "Item not found"
					},
					"422": {
						"description": "Invalid parameter"
					}
				},
				"security": [
					{
						"cookieAuth": [
							"stream"
						]
					},
					{
						"bearerAuth": [
							"stream"
						]
					}
				]
			}
		},
		"/track/rawTag/get": {
			"get": {
				"operationId": "TrackController.rawTagGet",
				"summary": "Get Raw Tag",
				"description": "Get Raw Tag (eg. id3/vorbis)",
				"tags": [
					"Track"
				],
				"parameters": [
					{
						"in": "query",
						"name": "query",
						"description": "filter by Search Query",
						"required": false,
						"example": "these",
						"schema": {
							"type": "string",
							"description": "filter by Search Query"
						}
					},
					{
						"in": "query",
						"name": "name",
						"description": "filter by Track Title",
						"required": false,
						"example": "These Days",
						"schema": {
							"type": "string",
							"description": "filter by Track Title"
						}
					},
					{
						"in": "query",
						"name": "ids",
						"description": "filter by Track Ids",
						"required": false,
						"example": "c0ffeec0-ffee-c0ff-eec0-ffeec0ffeec0",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/components/schemas/ID"
							}
						}
					},
					{
						"in": "query",
						"name": "childOfID",
						"description": "filter if track is in folder id (or its child folders)",
						"required": false,
						"example": "c0ffeec0-ffee-c0ff-eec0-ffeec0ffeec0",
						"schema": {
							"$ref": "#/components/schemas/ID"
						}
					},
					{
						"in": "query",
						"name": "artist",
						"description": "filter by artist name",
						"required": false,
						"example": "Nico",
						"schema": {
							"type": "string",
							"description": "filter by artist name"
						}
					},
					{
						"in": "query",
						"name": "album",
						"description": "filter by album name",
						"required": false,
						"example": "Chelsea Girl",
						"schema": {
							"type": "string",
							"description": "filter by album name"
						}
					},
					{
						"in": "query",
						"name": "genres",
						"description": "filter by genres",
						"required": false,
						"example": [
							"Folk Pop"
						],
						"schema": {
							"type": "array",
							"items": {
								"type": "string",
								"description": "filter by genres"
							}
						}
					},
					{
						"in": "query",
						"name": "since",
						"description": "filter by Creation timestamp",
						"required": false,
						"example": "2000-12-31T23:00:00.000Z",
						"schema": {
							"type": "integer",
							"minimum": 0,
							"description": "filter by Creation timestamp"
						}
					},
					{
						"in": "query",
						"name": "seriesIDs",
						"description": "filter by Series Ids",
						"required": false,
						"example": "c0ffeec0-ffee-c0ff-eec0-ffeec0ffeec0",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/components/schemas/ID"
							}
						}
					},
					{
						"in": "query",
						"name": "albumIDs",
						"description": "filter by Album Ids",
						"required": false,
						"example": "c0ffeec0-ffee-c0ff-eec0-ffeec0ffeec0",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/components/schemas/ID"
							}
						}
					},
					{
						"in": "query",
						"name": "artistIDs",
						"description": "filter by Artist Ids",
						"required": false,
						"example": "c0ffeec0-ffee-c0ff-eec0-ffeec0ffeec0",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/components/schemas/ID"
							}
						}
					},
					{
						"in": "query",
						"name": "albumArtistIDs",
						"description": "filter by Album Artist Ids",
						"required": false,
						"example": "c0ffeec0-ffee-c0ff-eec0-ffeec0ffeec0",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/components/schemas/ID"
							}
						}
					},
					{
						"in": "query",
						"name": "rootIDs",
						"description": "filter by Root Ids",
						"required": false,
						"example": "c0ffeec0-ffee-c0ff-eec0-ffeec0ffeec0",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/components/schemas/ID"
							}
						}
					},
					{
						"in": "query",
						"name": "folderIDs",
						"description": "filter by Folder Ids",
						"required": false,
						"example": "c0ffeec0-ffee-c0ff-eec0-ffeec0ffeec0",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/components/schemas/ID"
							}
						}
					},
					{
						"in": "query",
						"name": "bookmarkIDs",
						"description": "filter by Bookmark Ids",
						"required": false,
						"example": "c0ffeec0-ffee-c0ff-eec0-ffeec0ffeec0",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/components/schemas/ID"
							}
						}
					},
					{
						"in": "query",
						"name": "fromYear",
						"description": "filter by since year",
						"required": false,
						"example": 2001,
						"schema": {
							"type": "integer",
							"minimum": 0,
							"description": "filter by since year"
						}
					},
					{
						"in": "query",
						"name": "toYear",
						"description": "filter by until year",
						"required": false,
						"example": 2001,
						"schema": {
							"type": "integer",
							"minimum": 0,
							"description": "filter by until year"
						}
					}
				],
				"responses": {
					"200": {
						"description": "json data",
						"content": {
							"application/json": {
								"schema": {
									"type": "array",
									"items": {
										"$ref": "#/components/schemas/MediaIDTagRaw"
									}
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"404": {
						"description": "Item not found"
					},
					"422": {
						"description": "Invalid parameter"
					}
				},
				"security": [
					{
						"cookieAuth": [
							"stream"
						]
					},
					{
						"bearerAuth": [
							"stream"
						]
					}
				]
			}
		},
		"/track/health": {
			"get": {
				"operationId": "TrackController.health",
				"summary": "Get Health",
				"description": "List of Tracks with Health Issues",
				"tags": [
					"Track"
				],
				"parameters": [
					{
						"in": "query",
						"name": "trackIncMedia",
						"description": "include media information on track(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include media information on track(s)"
						}
					},
					{
						"in": "query",
						"name": "trackIncTag",
						"description": "include tag on track(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include tag on track(s)"
						}
					},
					{
						"in": "query",
						"name": "trackIncRawTag",
						"description": "include raw tag on track(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include raw tag on track(s)"
						}
					},
					{
						"in": "query",
						"name": "trackIncState",
						"description": "include user states (fav,rate) on track(s)",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "include user states (fav,rate) on track(s)"
						}
					},
					{
						"in": "query",
						"name": "query",
						"description": "filter by Search Query",
						"required": false,
						"example": "these",
						"schema": {
							"type": "string",
							"description": "filter by Search Query"
						}
					},
					{
						"in": "query",
						"name": "name",
						"description": "filter by Track Title",
						"required": false,
						"example": "These Days",
						"schema": {
							"type": "string",
							"description": "filter by Track Title"
						}
					},
					{
						"in": "query",
						"name": "ids",
						"description": "filter by Track Ids",
						"required": false,
						"example": "c0ffeec0-ffee-c0ff-eec0-ffeec0ffeec0",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/components/schemas/ID"
							}
						}
					},
					{
						"in": "query",
						"name": "childOfID",
						"description": "filter if track is in folder id (or its child folders)",
						"required": false,
						"example": "c0ffeec0-ffee-c0ff-eec0-ffeec0ffeec0",
						"schema": {
							"$ref": "#/components/schemas/ID"
						}
					},
					{
						"in": "query",
						"name": "artist",
						"description": "filter by artist name",
						"required": false,
						"example": "Nico",
						"schema": {
							"type": "string",
							"description": "filter by artist name"
						}
					},
					{
						"in": "query",
						"name": "album",
						"description": "filter by album name",
						"required": false,
						"example": "Chelsea Girl",
						"schema": {
							"type": "string",
							"description": "filter by album name"
						}
					},
					{
						"in": "query",
						"name": "genres",
						"description": "filter by genres",
						"required": false,
						"example": [
							"Folk Pop"
						],
						"schema": {
							"type": "array",
							"items": {
								"type": "string",
								"description": "filter by genres"
							}
						}
					},
					{
						"in": "query",
						"name": "since",
						"description": "filter by Creation timestamp",
						"required": false,
						"example": "2000-12-31T23:00:00.000Z",
						"schema": {
							"type": "integer",
							"minimum": 0,
							"description": "filter by Creation timestamp"
						}
					},
					{
						"in": "query",
						"name": "seriesIDs",
						"description": "filter by Series Ids",
						"required": false,
						"example": "c0ffeec0-ffee-c0ff-eec0-ffeec0ffeec0",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/components/schemas/ID"
							}
						}
					},
					{
						"in": "query",
						"name": "albumIDs",
						"description": "filter by Album Ids",
						"required": false,
						"example": "c0ffeec0-ffee-c0ff-eec0-ffeec0ffeec0",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/components/schemas/ID"
							}
						}
					},
					{
						"in": "query",
						"name": "artistIDs",
						"description": "filter by Artist Ids",
						"required": false,
						"example": "c0ffeec0-ffee-c0ff-eec0-ffeec0ffeec0",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/components/schemas/ID"
							}
						}
					},
					{
						"in": "query",
						"name": "albumArtistIDs",
						"description": "filter by Album Artist Ids",
						"required": false,
						"example": "c0ffeec0-ffee-c0ff-eec0-ffeec0ffeec0",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/components/schemas/ID"
							}
						}
					},
					{
						"in": "query",
						"name": "rootIDs",
						"description": "filter by Root Ids",
						"required": false,
						"example": "c0ffeec0-ffee-c0ff-eec0-ffeec0ffeec0",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/components/schemas/ID"
							}
						}
					},
					{
						"in": "query",
						"name": "folderIDs",
						"description": "filter by Folder Ids",
						"required": false,
						"example": "c0ffeec0-ffee-c0ff-eec0-ffeec0ffeec0",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/components/schemas/ID"
							}
						}
					},
					{
						"in": "query",
						"name": "bookmarkIDs",
						"description": "filter by Bookmark Ids",
						"required": false,
						"example": "c0ffeec0-ffee-c0ff-eec0-ffeec0ffeec0",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/components/schemas/ID"
							}
						}
					},
					{
						"in": "query",
						"name": "fromYear",
						"description": "filter by since year",
						"required": false,
						"example": 2001,
						"schema": {
							"type": "integer",
							"minimum": 0,
							"description": "filter by since year"
						}
					},
					{
						"in": "query",
						"name": "toYear",
						"description": "filter by until year",
						"required": false,
						"example": 2001,
						"schema": {
							"type": "integer",
							"minimum": 0,
							"description": "filter by until year"
						}
					},
					{
						"in": "query",
						"name": "healthMedia",
						"description": "check media file integrity",
						"required": false,
						"example": false,
						"schema": {
							"type": "boolean",
							"default": false,
							"description": "check media file integrity"
						}
					}
				],
				"responses": {
					"200": {
						"description": "json data",
						"content": {
							"application/json": {
								"schema": {
									"type": "array",
									"items": {
										"$ref": "#/components/schemas/TrackHealth"
									}
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"404": {
						"description": "Item not found"
					},
					"422": {
						"description": "Invalid parameter"
					}
				},
				"security": [
					{
						"cookieAuth": [
							"admin"
						]
					},
					{
						"bearerAuth": [
							"admin"
						]
					}
				]
			}
		},
		"/track/rename": {
			"post": {
				"operationId": "TrackController.rename",
				"summary": "Rename Track",
				"description": "Rename a track",
				"tags": [
					"Track"
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/TrackRenameArgs"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "json data",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/AdminChangeQueueInfo"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					}
				},
				"security": [
					{
						"cookieAuth": [
							"admin"
						]
					},
					{
						"bearerAuth": [
							"admin"
						]
					}
				]
			}
		},
		"/track/move": {
			"post": {
				"operationId": "TrackController.move",
				"summary": "Move Tracks",
				"description": "Move Tracks",
				"tags": [
					"Track"
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/TrackMoveArgs"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "json data",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/AdminChangeQueueInfo"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					}
				},
				"security": [
					{
						"cookieAuth": [
							"admin"
						]
					},
					{
						"bearerAuth": [
							"admin"
						]
					}
				]
			}
		},
		"/track/remove": {
			"post": {
				"operationId": "TrackController.remove",
				"summary": "Remove Track",
				"description": "Remove a Track",
				"tags": [
					"Track"
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"properties": {
									"id": {
										"type": "string"
									}
								},
								"required": [
									"id"
								]
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "json data",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/AdminChangeQueueInfo"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					}
				},
				"security": [
					{
						"cookieAuth": [
							"admin"
						]
					},
					{
						"bearerAuth": [
							"admin"
						]
					}
				]
			}
		},
		"/track/fix": {
			"post": {
				"operationId": "TrackController.fix",
				"summary": "Fix Track",
				"description": "Fix Track by Health Hint Id",
				"tags": [
					"Track"
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/TrackFixArgs"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "json data",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/AdminChangeQueueInfo"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					}
				},
				"security": [
					{
						"cookieAuth": [
							"admin"
						]
					},
					{
						"bearerAuth": [
							"admin"
						]
					}
				]
			}
		},
		"/track/rawTag/set": {
			"post": {
				"operationId": "TrackController.rawTagSet",
				"summary": "Set Raw Tag",
				"description": "Write a Raw Rag to a Track by Track Id",
				"tags": [
					"Track"
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/RawTagUpdateArgs"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "json data",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/AdminChangeQueueInfo"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					}
				},
				"security": [
					{
						"cookieAuth": [
							"admin"
						]
					},
					{
						"bearerAuth": [
							"admin"
						]
					}
				]
			}
		},
		"/user/id": {
			"get": {
				"operationId": "UserController.id",
				"summary": "Get User",
				"description": "Get an User by Id",
				"tags": [
					"User"
				],
				"parameters": [
					{
						"in": "query",
						"name": "id",
						"description": "User Id",
						"required": true,
						"example": "c0ffeec0-ffee-c0ff-eec0-ffeec0ffeec0",
						"schema": {
							"$ref": "#/components/schemas/ID"
						}
					}
				],
				"responses": {
					"200": {
						"description": "json data",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/User"
								}
							}
						}
					},
					"400": {
						"description": "Missing parameter"
					},
					"401": {
						"description": "Unauthorized"
					},
					"404": {
						"description": "Item not found"
					},
					"422": {
						"description": "Invalid parameter"
					}
				},
				"security": [
					{
						"cookieAuth": [
							"admin"
						]
					},
					{
						"bearerAuth": [
							"admin"
						]
					}
				]
			}
		},
		"/user/search": {
			"get": {
				"operationId": "UserController.search",
				"summary": "Search Users",
				"description": "Search Users",
				"tags": [
					"User"
				],
				"parameters": [
					{
						"in": "query",
						"name": "orderBy",
						"description": "order by field",
						"required": false,
						"schema": {
							"$ref": "#/components/schemas/DefaultOrderFields"
						}
					},
					{
						"in": "query",
						"name": "orderDesc",
						"description": "order direction ascending or descending",
						"required": false,
						"example": true,
						"schema": {
							"type": "boolean",
							"description": "order direction ascending or descending"
						}
					},
					{
						"in": "query",
						"name": "query",
						"description": "filter by Search Query",
						"required": false,
						"example": "admin",
						"schema": {
							"type": "string",
							"description": "filter by Search Query"
						}
					},
					{
						"in": "query",
						"name": "name",
						"description": "filter by User name",
						"required": false,
						"example": "user",
						"schema": {
							"type": "string",
							"description": "filter by User name"
						}
					},
					{
						"in": "query",
						"name": "ids",
						"description": "filter by User Ids",
						"required": false,
						"example": "c0ffeec0-ffee-c0ff-eec0-ffeec0ffeec0",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/components/schemas/ID"
							}
						}
					},
					{
						"in": "query",
						"name": "since",
						"description": "filter by Creation timestamp",
						"required": false,
						"example": "2000-12-31T23:00:00.000Z",
						"schema": {
							"type": "integer",
							"minimum": 0,
							"description": "filter by Creation timestamp"
						}
					},
					{
						"in": "query",
						"name": "email",
						"description": "filter by User email",
						"required": false,
						"example": "user@example.com",
						"schema": {
							"type": "string",
							"description": "filter by User email"
						}
					},
					{
						"in": "query",
						"name": "roles",
						"description": "filter by User roles",
						"required": false,
						"example": [
							"admin"
						],
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/components/schemas/UserRole"
							}
						}
					},
					{
						"in": "query",
						"name": "skip",
						"description": "return items starting from offset position",
						"required": false,
						"example": 0,
						"schema": {
							"type": "integer",
							"default": 0,
							"minimum": 0,
							"description": "return items starting from offset position"
						}
					},
					{
						"in": "query",
						"name": "take",
						"description": "amount of returned items",
						"required": false,
						"example": 25,
						"schema": {
							"type": "integer",
							"minimum": 1,
							"description": "amount of returned items"
						}
					}
				],
				"responses": {
					"200": {
						"description": "json data",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/UserPage"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"404": {
						"description": "Item not found"
					},
					"422": {
						"description": "Invalid parameter"
					}
				},
				"security": [
					{
						"cookieAuth": [
							"admin"
						]
					},
					{
						"bearerAuth": [
							"admin"
						]
					}
				]
			}
		},
		"/user/create": {
			"post": {
				"operationId": "UserController.create",
				"summary": "Create User",
				"description": "Create an User",
				"tags": [
					"User"
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/UserMutateArgs"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "json data",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/User"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					}
				},
				"security": [
					{
						"cookieAuth": [
							"admin"
						]
					},
					{
						"bearerAuth": [
							"admin"
						]
					}
				]
			}
		},
		"/user/update": {
			"post": {
				"operationId": "UserController.update",
				"summary": "Update User",
				"description": "Update an User",
				"tags": [
					"User"
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"allOf": [
									{
										"$ref": "#/components/schemas/UserMutateArgs"
									},
									{
										"properties": {
											"id": {
												"$ref": "#/components/schemas/ID"
											}
										},
										"description": "User Id",
										"required": [
											"id"
										]
									}
								]
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "json data",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/User"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					}
				},
				"security": [
					{
						"cookieAuth": [
							"admin"
						]
					},
					{
						"bearerAuth": [
							"admin"
						]
					}
				]
			}
		},
		"/user/remove": {
			"post": {
				"operationId": "UserController.remove",
				"summary": "Remove User",
				"description": "Remove an User",
				"tags": [
					"User"
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"properties": {
									"id": {
										"$ref": "#/components/schemas/ID"
									}
								},
								"description": "User Id",
								"required": [
									"id"
								]
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "ok"
					},
					"401": {
						"description": "Unauthorized"
					}
				},
				"security": [
					{
						"cookieAuth": [
							"admin"
						]
					},
					{
						"bearerAuth": [
							"admin"
						]
					}
				]
			}
		},
		"/user/password/update": {
			"post": {
				"operationId": "UserController.changePassword",
				"summary": "Change Password",
				"description": "Set an User Password",
				"tags": [
					"User"
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"allOf": [
									{
										"$ref": "#/components/schemas/UserPasswordUpdateArgs"
									},
									{
										"properties": {
											"id": {
												"$ref": "#/components/schemas/ID"
											}
										},
										"description": "User Id",
										"required": [
											"id"
										]
									}
								]
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "ok"
					},
					"401": {
						"description": "Unauthorized"
					}
				},
				"security": [
					{
						"cookieAuth": [
							"stream"
						]
					},
					{
						"bearerAuth": [
							"stream"
						]
					}
				]
			}
		},
		"/user/email/update": {
			"post": {
				"operationId": "UserController.changeEmail",
				"summary": "Change Email",
				"description": "Set an User Email Address",
				"tags": [
					"User"
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"allOf": [
									{
										"$ref": "#/components/schemas/UserEmailUpdateArgs"
									},
									{
										"properties": {
											"id": {
												"$ref": "#/components/schemas/ID"
											}
										},
										"description": "User Id",
										"required": [
											"id"
										]
									}
								]
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "ok"
					},
					"401": {
						"description": "Unauthorized"
					}
				},
				"security": [
					{
						"cookieAuth": [
							"stream"
						]
					},
					{
						"bearerAuth": [
							"stream"
						]
					}
				]
			}
		},
		"/user/image/random": {
			"post": {
				"operationId": "UserController.generateUserImage",
				"summary": "Set Random Image",
				"description": "Generate a random User Image",
				"tags": [
					"User"
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"allOf": [
									{
										"$ref": "#/components/schemas/UserGenerateImageArgs"
									},
									{
										"properties": {
											"id": {
												"$ref": "#/components/schemas/ID"
											}
										},
										"description": "User Id",
										"required": [
											"id"
										]
									}
								]
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "ok"
					},
					"401": {
						"description": "Unauthorized"
					}
				},
				"security": [
					{
						"cookieAuth": [
							"stream"
						]
					},
					{
						"bearerAuth": [
							"stream"
						]
					}
				]
			}
		},
		"/user/image/upload": {
			"post": {
				"operationId": "UserController.uploadUserImage",
				"summary": "Upload Image",
				"description": "Upload an User Image",
				"tags": [
					"User"
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"multipart/form-data": {
							"schema": {
								"allOf": [
									{
										"properties": {
											"image": {
												"type": "object",
												"properties": {
													"type": {
														"description": "Mime Type",
														"type": "string"
													},
													"file": {
														"description": "Binary Data",
														"type": "string",
														"format": "binary"
													}
												},
												"required": [
													"type",
													"file"
												]
											}
										},
										"required": [
											"image"
										],
										"description": "Binary Part"
									},
									{
										"properties": {
											"id": {
												"$ref": "#/components/schemas/ID"
											}
										},
										"description": "User Id",
										"required": [
											"id"
										]
									}
								]
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "ok"
					},
					"401": {
						"description": "Unauthorized"
					}
				},
				"security": [
					{
						"cookieAuth": [
							"stream"
						]
					},
					{
						"bearerAuth": [
							"stream"
						]
					}
				]
			}
		},
		"/waveform/json": {
			"get": {
				"operationId": "WaveformController.json",
				"summary": "Get JSON",
				"description": "Get Peaks Waveform Data as JSON [Episode, Track]",
				"tags": [
					"Waveform"
				],
				"parameters": [
					{
						"in": "query",
						"name": "id",
						"description": "Object Id",
						"required": true,
						"example": "c0ffeec0-ffee-c0ff-eec0-ffeec0ffeec0",
						"schema": {
							"$ref": "#/components/schemas/ID"
						}
					}
				],
				"responses": {
					"200": {
						"description": "json data",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/WaveFormData"
								}
							}
						}
					},
					"400": {
						"description": "Missing parameter"
					},
					"401": {
						"description": "Unauthorized"
					},
					"404": {
						"description": "Item not found"
					},
					"422": {
						"description": "Invalid parameter"
					}
				},
				"security": [
					{
						"cookieAuth": [
							"stream"
						]
					},
					{
						"bearerAuth": [
							"stream"
						]
					}
				]
			}
		},
		"/waveform/svg": {
			"get": {
				"operationId": "WaveformController.svg",
				"summary": "Get SVG",
				"description": "Get Peaks Waveform Data as SVG [Episode, Track]",
				"tags": [
					"Waveform"
				],
				"parameters": [
					{
						"in": "query",
						"name": "id",
						"description": "Object Id",
						"required": true,
						"schema": {
							"type": "string",
							"description": "Object Id"
						}
					},
					{
						"in": "query",
						"name": "width",
						"description": "Width of svg",
						"required": false,
						"example": 300,
						"schema": {
							"type": "integer",
							"minimum": 100,
							"maximum": 4000,
							"description": "Width of svg"
						}
					}
				],
				"responses": {
					"200": {
						"description": "string data",
						"content": {
							"image/svg+xml": {
								"schema": {
									"type": "string"
								}
							}
						}
					},
					"400": {
						"description": "Missing parameter"
					},
					"401": {
						"description": "Unauthorized"
					},
					"422": {
						"description": "Invalid parameter"
					}
				},
				"security": [
					{
						"cookieAuth": [
							"stream"
						]
					},
					{
						"bearerAuth": [
							"stream"
						]
					}
				]
			}
		},
		"/waveform/{id}_{width}.{format}": {
			"get": {
				"operationId": "WaveformController.waveform",
				"summary": "Get Waveform",
				"description": "Get Peaks Waveform Data [Episode, Track]",
				"tags": [
					"Waveform"
				],
				"parameters": [
					{
						"in": "path",
						"name": "format",
						"description": "format of the waveform",
						"required": true,
						"example": "svg",
						"schema": {
							"$ref": "#/components/schemas/WaveformFormatType"
						}
					},
					{
						"in": "path",
						"name": "width",
						"description": "Width of svg",
						"required": true,
						"example": 300,
						"schema": {
							"type": "integer",
							"minimum": 100,
							"maximum": 4000,
							"description": "Width of svg"
						}
					},
					{
						"in": "path",
						"name": "id",
						"description": "Media Id",
						"required": true,
						"example": "c0ffeec0-ffee-c0ff-eec0-ffeec0ffeec0",
						"schema": {
							"$ref": "#/components/schemas/ID"
						}
					}
				],
				"responses": {
					"200": {
						"description": "binary data",
						"content": {
							"image/svg+xml": {
								"schema": {
									"type": "string",
									"format": "binary"
								}
							},
							"application/json": {
								"schema": {
									"type": "string",
									"format": "binary"
								}
							},
							"application/binary": {
								"schema": {
									"type": "string",
									"format": "binary"
								}
							}
						}
					},
					"400": {
						"description": "Missing parameter"
					},
					"401": {
						"description": "Unauthorized"
					},
					"404": {
						"description": "Item not found"
					},
					"422": {
						"description": "Invalid parameter"
					}
				},
				"security": [
					{
						"cookieAuth": [
							"stream"
						]
					},
					{
						"bearerAuth": [
							"stream"
						]
					}
				]
			}
		},
		"/waveform/{id}.{format}": {
			"get": {
				"operationId": "WaveformController.waveform/{id}.{format}",
				"summary": "Get Waveform by Id and Format",
				"description": "Get Peaks Waveform Data [Episode, Track]",
				"tags": [
					"Waveform"
				],
				"parameters": [
					{
						"in": "path",
						"name": "format",
						"description": "format of the waveform",
						"required": true,
						"example": "svg",
						"schema": {
							"$ref": "#/components/schemas/WaveformFormatType"
						}
					},
					{
						"in": "path",
						"name": "id",
						"description": "Media Id",
						"required": true,
						"example": "c0ffeec0-ffee-c0ff-eec0-ffeec0ffeec0",
						"schema": {
							"$ref": "#/components/schemas/ID"
						}
					}
				],
				"responses": {
					"200": {
						"description": "binary data",
						"content": {
							"image/svg+xml": {
								"schema": {
									"type": "string",
									"format": "binary"
								}
							},
							"application/json": {
								"schema": {
									"type": "string",
									"format": "binary"
								}
							},
							"application/binary": {
								"schema": {
									"type": "string",
									"format": "binary"
								}
							}
						}
					},
					"400": {
						"description": "Missing parameter"
					},
					"401": {
						"description": "Unauthorized"
					},
					"404": {
						"description": "Item not found"
					},
					"422": {
						"description": "Invalid parameter"
					}
				},
				"security": [
					{
						"cookieAuth": [
							"stream"
						]
					},
					{
						"bearerAuth": [
							"stream"
						]
					}
				]
			}
		},
		"/waveform/{id}": {
			"get": {
				"operationId": "WaveformController.waveform/{id}",
				"summary": "Get Waveform by Id",
				"description": "Get Peaks Waveform Data [Episode, Track]",
				"tags": [
					"Waveform"
				],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"description": "Media Id",
						"required": true,
						"example": "c0ffeec0-ffee-c0ff-eec0-ffeec0ffeec0",
						"schema": {
							"$ref": "#/components/schemas/ID"
						}
					}
				],
				"responses": {
					"200": {
						"description": "binary data",
						"content": {
							"image/svg+xml": {
								"schema": {
									"type": "string",
									"format": "binary"
								}
							},
							"application/json": {
								"schema": {
									"type": "string",
									"format": "binary"
								}
							},
							"application/binary": {
								"schema": {
									"type": "string",
									"format": "binary"
								}
							}
						}
					},
					"400": {
						"description": "Missing parameter"
					},
					"401": {
						"description": "Unauthorized"
					},
					"404": {
						"description": "Item not found"
					},
					"422": {
						"description": "Invalid parameter"
					}
				},
				"security": [
					{
						"cookieAuth": [
							"stream"
						]
					},
					{
						"bearerAuth": [
							"stream"
						]
					}
				]
			}
		}
	},
	"components": {
		"schemas": {
			"ID": {
				"type": "string",
				"format": "uuid"
			},
			"JSON": {
				"type": "object"
			},
			"AdminSettingsChatMaxAge": {
				"type": "object",
				"properties": {
					"value": {
						"type": "integer",
						"minimum": 0,
						"description": "Value of Maximum Age"
					},
					"unit": {
						"type": "string",
						"description": "Unit of Maximum Age"
					}
				},
				"required": [
					"value",
					"unit"
				]
			},
			"AdminSettingsChat": {
				"type": "object",
				"properties": {
					"maxMessages": {
						"type": "integer",
						"minimum": 0,
						"description": "Maximum Number of Chat Messages to keep"
					},
					"maxAge": {
						"$ref": "#/components/schemas/AdminSettingsChatMaxAge"
					}
				},
				"required": [
					"maxMessages",
					"maxAge"
				]
			},
			"AdminSettingsIndex": {
				"type": "object",
				"properties": {
					"ignoreArticles": {
						"type": "array",
						"items": {
							"type": "string",
							"description": "List of ignored Articles"
						}
					}
				},
				"required": [
					"ignoreArticles"
				]
			},
			"AdminSettingsLibrary": {
				"type": "object",
				"properties": {
					"scanAtStart": {
						"type": "boolean",
						"description": "Start Root Scanning on Server Start"
					}
				},
				"required": [
					"scanAtStart"
				]
			},
			"AdminSettingsExternal": {
				"type": "object",
				"properties": {
					"enabled": {
						"type": "boolean",
						"description": "Enable External Services"
					}
				},
				"required": [
					"enabled"
				]
			},
			"AdminSettings": {
				"type": "object",
				"properties": {
					"chat": {
						"$ref": "#/components/schemas/AdminSettingsChat"
					},
					"index": {
						"$ref": "#/components/schemas/AdminSettingsIndex"
					},
					"library": {
						"$ref": "#/components/schemas/AdminSettingsLibrary"
					},
					"externalServices": {
						"$ref": "#/components/schemas/AdminSettingsExternal"
					}
				},
				"required": [
					"chat",
					"index",
					"library",
					"externalServices"
				]
			},
			"AdminChangeQueueInfo": {
				"type": "object",
				"properties": {
					"id": {
						"$ref": "#/components/schemas/ID"
					},
					"position": {
						"type": "integer",
						"description": "Waiting Position"
					},
					"error": {
						"type": "string",
						"description": "Error (if any)"
					},
					"done": {
						"type": "integer",
						"description": "Changes Completed Timestamp"
					}
				},
				"required": [
					"id"
				]
			},
			"AdminSettingsArgs": {
				"allOf": [
					{
						"$ref": "#/components/schemas/AdminSettings"
					}
				]
			},
			"TrackBase": {
				"allOf": [
					{
						"$ref": "#/components/schemas/MediaBase"
					},
					{
						"properties": {
							"parentID": {
								"$ref": "#/components/schemas/ID"
							}
						},
						"required": [
							"parentID"
						]
					}
				]
			},
			"JamObjectType": {
				"type": "string",
				"enum": [
					"root",
					"user",
					"folder",
					"track",
					"state",
					"artwork",
					"playlist",
					"podcast",
					"episode",
					"series",
					"bookmark",
					"album",
					"artist",
					"playqueue",
					"radio"
				]
			},
			"MediaTag": {
				"type": "object",
				"properties": {
					"title": {
						"type": "string",
						"description": "Title"
					},
					"album": {
						"type": "string",
						"description": "Album Name"
					},
					"artist": {
						"type": "string",
						"description": "Artist Name"
					},
					"genres": {
						"type": "array",
						"items": {
							"type": "string",
							"description": "Genres"
						}
					},
					"year": {
						"type": "integer",
						"description": "Year"
					},
					"trackNr": {
						"type": "integer",
						"description": "Track Nr"
					},
					"disc": {
						"type": "integer",
						"description": "Disc Nr"
					},
					"discTotal": {
						"type": "integer",
						"description": "Total Nr. of Disc"
					},
					"mbTrackID": {
						"type": "string",
						"description": "MusicBrainz Track Id"
					},
					"mbRecordingID": {
						"type": "string",
						"description": "MusicBrainz Recording Id"
					},
					"mbReleaseTrackID": {
						"type": "string",
						"description": "MusicBrainz Release Track Id"
					},
					"mbReleaseGroupID": {
						"type": "string",
						"description": "MusicBrainz Release Group Id"
					},
					"mbReleaseID": {
						"type": "string",
						"description": "MusicBrainz Release Id"
					},
					"mbArtistID": {
						"type": "string",
						"description": "MusicBrainz Artist Id"
					},
					"mbAlbumArtistID": {
						"type": "string",
						"description": "MusicBrainz Album Artist Id"
					}
				}
			},
			"MediaTagRaw": {
				"type": "object",
				"properties": {
					"version": {
						"type": "integer",
						"description": "Tag Version"
					},
					"frames": {
						"$ref": "#/components/schemas/JSON"
					}
				}
			},
			"MediaInfo": {
				"type": "object",
				"properties": {
					"bitRate": {
						"type": "integer",
						"description": "Bit Rate"
					},
					"format": {
						"type": "string",
						"description": "Media Format"
					},
					"channels": {
						"type": "integer",
						"description": "Media Channels"
					},
					"sampleRate": {
						"type": "integer",
						"description": "Sample Rate (Hz)"
					},
					"size": {
						"type": "integer",
						"description": "File Size"
					}
				},
				"required": [
					"bitRate"
				]
			},
			"MediaBase": {
				"allOf": [
					{
						"$ref": "#/components/schemas/Base"
					},
					{
						"properties": {
							"objType": {
								"$ref": "#/components/schemas/JamObjectType"
							},
							"duration": {
								"type": "integer",
								"minimum": 0,
								"description": "Duration of Track"
							},
							"tag": {
								"$ref": "#/components/schemas/MediaTag"
							},
							"tagRaw": {
								"$ref": "#/components/schemas/MediaTagRaw"
							},
							"media": {
								"$ref": "#/components/schemas/MediaInfo"
							},
							"artistID": {
								"$ref": "#/components/schemas/ID"
							},
							"albumArtistID": {
								"$ref": "#/components/schemas/ID"
							},
							"albumID": {
								"$ref": "#/components/schemas/ID"
							},
							"seriesID": {
								"$ref": "#/components/schemas/ID"
							}
						},
						"required": [
							"objType",
							"duration"
						]
					}
				]
			},
			"State": {
				"type": "object",
				"properties": {
					"played": {
						"type": "integer",
						"minimum": 0,
						"description": "Number of Plays"
					},
					"lastPlayed": {
						"type": "integer",
						"minimum": 0,
						"description": "Last Played Timestamp"
					},
					"faved": {
						"type": "integer",
						"minimum": 0,
						"description": "Faved Timestamp"
					},
					"rated": {
						"type": "integer",
						"minimum": 0,
						"maximum": 5,
						"description": "User Rating"
					}
				}
			},
			"Base": {
				"type": "object",
				"properties": {
					"id": {
						"$ref": "#/components/schemas/ID"
					},
					"name": {
						"type": "string",
						"description": "Name"
					},
					"state": {
						"$ref": "#/components/schemas/State"
					},
					"created": {
						"type": "integer",
						"minimum": 0,
						"description": "Created Timestamp"
					}
				},
				"required": [
					"id",
					"name",
					"created"
				]
			},
			"AlbumType": {
				"type": "string",
				"enum": [
					"unknown",
					"album",
					"compilation",
					"live",
					"bootleg",
					"soundtrack",
					"audiobook",
					"ep",
					"single",
					"series"
				]
			},
			"ExtendedInfo": {
				"type": "object",
				"properties": {
					"description": {
						"type": "string",
						"description": "Description"
					},
					"source": {
						"type": "string",
						"description": "Source of the Description"
					},
					"license": {
						"type": "string",
						"description": "License of the Description"
					},
					"url": {
						"type": "string",
						"description": "Url of the Description"
					},
					"licenseUrl": {
						"type": "string",
						"description": "Url of the License"
					}
				},
				"required": [
					"description",
					"source",
					"license",
					"url",
					"licenseUrl"
				]
			},
			"ArtistBase": {
				"allOf": [
					{
						"$ref": "#/components/schemas/Base"
					},
					{
						"properties": {
							"albumTypes": {
								"type": "array",
								"items": {
									"$ref": "#/components/schemas/AlbumType"
								}
							},
							"genres": {
								"type": "array",
								"items": {
									"type": "string",
									"description": "List of Genres"
								}
							},
							"mbArtistID": {
								"type": "string",
								"description": "MusicBrainz Artist Id"
							},
							"albumCount": {
								"type": "integer",
								"minimum": 0,
								"description": "Number of Albums"
							},
							"albumIDs": {
								"type": "array",
								"items": {
									"$ref": "#/components/schemas/ID"
								}
							},
							"seriesCount": {
								"type": "integer",
								"minimum": 0,
								"description": "Number of Series"
							},
							"seriesIDs": {
								"type": "array",
								"items": {
									"$ref": "#/components/schemas/ID"
								}
							},
							"trackCount": {
								"type": "integer",
								"minimum": 0,
								"description": "Number of Tracks"
							},
							"trackIDs": {
								"type": "array",
								"items": {
									"$ref": "#/components/schemas/ID"
								}
							},
							"info": {
								"$ref": "#/components/schemas/ExtendedInfo"
							}
						},
						"required": [
							"albumTypes"
						]
					}
				]
			},
			"Album": {
				"allOf": [
					{
						"$ref": "#/components/schemas/AlbumBase"
					},
					{
						"properties": {
							"tracks": {
								"type": "array",
								"items": {
									"$ref": "#/components/schemas/TrackBase"
								}
							},
							"artist": {
								"$ref": "#/components/schemas/ArtistBase"
							}
						}
					}
				]
			},
			"AlbumBase": {
				"allOf": [
					{
						"$ref": "#/components/schemas/Base"
					},
					{
						"properties": {
							"albumType": {
								"$ref": "#/components/schemas/AlbumType"
							},
							"duration": {
								"type": "integer",
								"description": "Album Play Duration"
							},
							"artistID": {
								"$ref": "#/components/schemas/ID"
							},
							"artistName": {
								"type": "string",
								"description": "Album Artist"
							},
							"trackCount": {
								"type": "integer",
								"minimum": 0,
								"description": "Number of Tracks"
							},
							"trackIDs": {
								"type": "array",
								"items": {
									"$ref": "#/components/schemas/ID"
								}
							},
							"genres": {
								"type": "array",
								"items": {
									"type": "string",
									"description": "List of Genres"
								}
							},
							"year": {
								"type": "integer",
								"description": "Album Release Year"
							},
							"mbArtistID": {
								"type": "string",
								"description": "MusicBrainz Artist Id"
							},
							"mbReleaseID": {
								"type": "string",
								"description": "MusicBrainz Release Id"
							},
							"series": {
								"type": "string",
								"description": "Series Name"
							},
							"seriesID": {
								"$ref": "#/components/schemas/ID"
							},
							"seriesNr": {
								"type": "string",
								"description": "Series Nr"
							},
							"info": {
								"$ref": "#/components/schemas/ExtendedInfo"
							}
						},
						"required": [
							"albumType",
							"duration",
							"artistID",
							"artistName"
						]
					}
				]
			},
			"AlbumIndexEntry": {
				"type": "object",
				"properties": {
					"id": {
						"$ref": "#/components/schemas/ID"
					},
					"name": {
						"type": "string",
						"description": "Name"
					},
					"artist": {
						"type": "string",
						"description": "Name"
					},
					"artistID": {
						"$ref": "#/components/schemas/ID"
					},
					"trackCount": {
						"type": "integer",
						"minimum": 0,
						"description": "Track Count"
					}
				},
				"required": [
					"id",
					"name",
					"artist",
					"artistID",
					"trackCount"
				]
			},
			"AlbumIndexGroup": {
				"type": "object",
				"properties": {
					"name": {
						"type": "string",
						"description": "Index Group Name"
					},
					"items": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/AlbumIndexEntry"
						}
					}
				},
				"required": [
					"name",
					"items"
				]
			},
			"AlbumIndex": {
				"type": "object",
				"properties": {
					"lastModified": {
						"type": "integer",
						"description": "Last Change Timestamp"
					},
					"groups": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/AlbumIndexGroup"
						}
					}
				},
				"required": [
					"lastModified",
					"groups"
				]
			},
			"ListType": {
				"type": "string",
				"enum": [
					"random",
					"highest",
					"avghighest",
					"frequent",
					"faved",
					"recent"
				]
			},
			"AlbumOrderFields": {
				"type": "string",
				"enum": [
					"default",
					"created",
					"updated",
					"name",
					"artist",
					"year",
					"seriesNr",
					"duration",
					"albumType"
				]
			},
			"AlbumPage": {
				"allOf": [
					{
						"$ref": "#/components/schemas/Page"
					},
					{
						"properties": {
							"items": {
								"type": "array",
								"items": {
									"$ref": "#/components/schemas/Album"
								}
							}
						},
						"required": [
							"items"
						]
					}
				]
			},
			"Page": {
				"type": "object",
				"properties": {
					"skip": {
						"type": "integer",
						"minimum": 0,
						"description": "Items starting from offset position"
					},
					"take": {
						"type": "integer",
						"minimum": 0,
						"description": "Amount of returned items"
					},
					"total": {
						"type": "integer",
						"minimum": 0,
						"description": "Total amount of available items"
					}
				}
			},
			"ExtendedInfoResult": {
				"type": "object",
				"properties": {
					"info": {
						"$ref": "#/components/schemas/ExtendedInfo"
					}
				}
			},
			"TrackOrderFields": {
				"type": "string",
				"enum": [
					"default",
					"created",
					"updated",
					"trackNr",
					"discNr",
					"seriesNr",
					"album",
					"title",
					"parent",
					"filename"
				]
			},
			"Track": {
				"allOf": [
					{
						"$ref": "#/components/schemas/TrackBase"
					}
				]
			},
			"TrackPage": {
				"allOf": [
					{
						"$ref": "#/components/schemas/Page"
					},
					{
						"properties": {
							"items": {
								"type": "array",
								"items": {
									"$ref": "#/components/schemas/Track"
								}
							}
						},
						"required": [
							"items"
						]
					}
				]
			},
			"SeriesBase": {
				"allOf": [
					{
						"$ref": "#/components/schemas/Base"
					},
					{
						"properties": {
							"artist": {
								"type": "string",
								"description": "Series Artist Name"
							},
							"artistID": {
								"$ref": "#/components/schemas/ID"
							},
							"albumCount": {
								"type": "integer",
								"minimum": 0,
								"description": "Album Count"
							},
							"trackCount": {
								"type": "integer",
								"minimum": 0,
								"description": "Track Count"
							},
							"albumTypes": {
								"type": "array",
								"items": {
									"$ref": "#/components/schemas/AlbumType"
								}
							},
							"trackIDs": {
								"type": "array",
								"items": {
									"$ref": "#/components/schemas/ID"
								}
							},
							"albumIDs": {
								"type": "array",
								"items": {
									"$ref": "#/components/schemas/ID"
								}
							},
							"info": {
								"$ref": "#/components/schemas/ExtendedInfo"
							}
						},
						"required": [
							"artist",
							"artistID",
							"albumTypes"
						]
					}
				]
			},
			"Artist": {
				"allOf": [
					{
						"$ref": "#/components/schemas/ArtistBase"
					},
					{
						"properties": {
							"similar": {
								"type": "array",
								"items": {
									"$ref": "#/components/schemas/ArtistBase"
								}
							},
							"series": {
								"type": "array",
								"items": {
									"$ref": "#/components/schemas/SeriesBase"
								}
							},
							"albums": {
								"type": "array",
								"items": {
									"$ref": "#/components/schemas/AlbumBase"
								}
							},
							"tracks": {
								"type": "array",
								"items": {
									"$ref": "#/components/schemas/TrackBase"
								}
							}
						}
					}
				]
			},
			"ArtistIndexEntry": {
				"type": "object",
				"properties": {
					"id": {
						"$ref": "#/components/schemas/ID"
					},
					"name": {
						"type": "string",
						"description": "Name"
					},
					"albumCount": {
						"type": "integer",
						"minimum": 0,
						"description": "Album Count"
					},
					"trackCount": {
						"type": "integer",
						"minimum": 0,
						"description": "Track Count"
					}
				},
				"required": [
					"id",
					"name",
					"albumCount",
					"trackCount"
				]
			},
			"ArtistIndexGroup": {
				"type": "object",
				"properties": {
					"name": {
						"type": "string",
						"description": "Artist Group Name"
					},
					"items": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/ArtistIndexEntry"
						}
					}
				},
				"required": [
					"name",
					"items"
				]
			},
			"ArtistIndex": {
				"type": "object",
				"properties": {
					"lastModified": {
						"type": "integer",
						"description": "Last Change Timestamp"
					},
					"groups": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/ArtistIndexGroup"
						}
					}
				},
				"required": [
					"lastModified",
					"groups"
				]
			},
			"ArtistOrderFields": {
				"type": "string",
				"enum": [
					"default",
					"created",
					"updated",
					"name",
					"nameSort"
				]
			},
			"ArtistPage": {
				"allOf": [
					{
						"$ref": "#/components/schemas/Page"
					},
					{
						"properties": {
							"items": {
								"type": "array",
								"items": {
									"$ref": "#/components/schemas/Artist"
								}
							}
						},
						"required": [
							"items"
						]
					}
				]
			},
			"DefaultOrderFields": {
				"type": "string",
				"enum": [
					"default",
					"created",
					"updated",
					"name"
				]
			},
			"Series": {
				"allOf": [
					{
						"$ref": "#/components/schemas/SeriesBase"
					},
					{
						"properties": {
							"tracks": {
								"type": "array",
								"items": {
									"$ref": "#/components/schemas/TrackBase"
								}
							},
							"albums": {
								"type": "array",
								"items": {
									"$ref": "#/components/schemas/AlbumBase"
								}
							}
						}
					}
				]
			},
			"SeriesPage": {
				"allOf": [
					{
						"$ref": "#/components/schemas/Page"
					},
					{
						"properties": {
							"items": {
								"type": "array",
								"items": {
									"$ref": "#/components/schemas/Series"
								}
							}
						},
						"required": [
							"items"
						]
					}
				]
			},
			"FolderType": {
				"type": "string",
				"enum": [
					"unknown",
					"artist",
					"collection",
					"album",
					"multialbum",
					"extras"
				]
			},
			"FolderTag": {
				"type": "object",
				"properties": {
					"album": {
						"type": "string",
						"description": "Album Name"
					},
					"albumType": {
						"$ref": "#/components/schemas/AlbumType"
					},
					"artist": {
						"type": "string",
						"description": "Artist Name"
					},
					"artistSort": {
						"type": "string",
						"description": "Artist Sort Name"
					},
					"genres": {
						"type": "array",
						"items": {
							"type": "string",
							"description": "Genres"
						}
					},
					"year": {
						"type": "integer",
						"description": "Year"
					},
					"mbArtistID": {
						"type": "string",
						"description": "MusicBrainz Artist Id"
					},
					"mbReleaseID": {
						"type": "string",
						"description": "MusicBrainz Release Id"
					},
					"mbReleaseGroupID": {
						"type": "string",
						"description": "MusicBrainz Release Group Id"
					}
				}
			},
			"FolderParent": {
				"type": "object",
				"properties": {
					"id": {
						"$ref": "#/components/schemas/ID"
					},
					"name": {
						"type": "string",
						"description": "Name"
					}
				},
				"required": [
					"id",
					"name"
				]
			},
			"FolderBase": {
				"allOf": [
					{
						"$ref": "#/components/schemas/Base"
					},
					{
						"properties": {
							"title": {
								"type": "string",
								"description": "Title"
							},
							"type": {
								"$ref": "#/components/schemas/FolderType"
							},
							"level": {
								"type": "integer",
								"description": "Level in Root"
							},
							"parentID": {
								"$ref": "#/components/schemas/ID"
							},
							"trackCount": {
								"type": "integer",
								"minimum": 0,
								"description": "Number of Tracks"
							},
							"folderCount": {
								"type": "integer",
								"minimum": 0,
								"description": "Number of Folders"
							},
							"artworkCount": {
								"type": "integer",
								"minimum": 0,
								"description": "Number of Artworks"
							},
							"tag": {
								"$ref": "#/components/schemas/FolderTag"
							},
							"trackIDs": {
								"type": "array",
								"items": {
									"$ref": "#/components/schemas/ID"
								}
							},
							"folderIDs": {
								"type": "array",
								"items": {
									"$ref": "#/components/schemas/ID"
								}
							},
							"artworkIDs": {
								"type": "array",
								"items": {
									"$ref": "#/components/schemas/ID"
								}
							},
							"info": {
								"$ref": "#/components/schemas/ExtendedInfo"
							},
							"parents": {
								"type": "array",
								"items": {
									"$ref": "#/components/schemas/FolderParent"
								}
							}
						},
						"required": [
							"type",
							"level"
						]
					}
				]
			},
			"Artwork": {
				"allOf": [
					{
						"$ref": "#/components/schemas/ArtworkBase"
					},
					{
						"properties": {
							"folder": {
								"$ref": "#/components/schemas/FolderBase"
							}
						}
					}
				]
			},
			"ArtworkImageType": {
				"type": "string",
				"enum": [
					"front",
					"back",
					"booklet",
					"medium",
					"tray",
					"obi",
					"spine",
					"track",
					"liner",
					"sticker",
					"poster",
					"watermark",
					"raw",
					"unedited",
					"other",
					"artist"
				]
			},
			"ArtworkBase": {
				"allOf": [
					{
						"$ref": "#/components/schemas/Base"
					},
					{
						"properties": {
							"types": {
								"type": "array",
								"items": {
									"$ref": "#/components/schemas/ArtworkImageType"
								}
							},
							"height": {
								"type": "integer",
								"minimum": 0,
								"description": "Image Height"
							},
							"width": {
								"type": "integer",
								"minimum": 0,
								"description": "Image Width"
							},
							"format": {
								"type": "string",
								"description": "Image Format"
							},
							"size": {
								"type": "integer",
								"minimum": 0,
								"description": "File Size"
							}
						},
						"required": [
							"types",
							"size"
						]
					}
				]
			},
			"ArtworkPage": {
				"allOf": [
					{
						"$ref": "#/components/schemas/Page"
					},
					{
						"properties": {
							"items": {
								"type": "array",
								"items": {
									"$ref": "#/components/schemas/Artwork"
								}
							}
						},
						"required": [
							"items"
						]
					}
				]
			},
			"ArtworkNewArgs": {
				"allOf": [
					{
						"$ref": "#/components/schemas/ArtworkNewUploadArgs"
					},
					{
						"properties": {
							"url": {
								"type": "string",
								"description": "URL of an image"
							}
						},
						"required": [
							"url"
						]
					}
				]
			},
			"ArtworkNewUploadArgs": {
				"type": "object",
				"properties": {
					"folderID": {
						"$ref": "#/components/schemas/ID"
					},
					"types": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/ArtworkImageType"
						}
					}
				},
				"required": [
					"folderID",
					"types"
				]
			},
			"ArtworkRenameArgs": {
				"type": "object",
				"properties": {
					"id": {
						"type": "string",
						"description": "Artwork Id"
					},
					"newName": {
						"type": "string",
						"description": "New Image Filename"
					}
				},
				"required": [
					"id",
					"newName"
				]
			},
			"CredentialsArgs": {
				"type": "object",
				"properties": {
					"password": {
						"type": "string",
						"description": "User password"
					},
					"username": {
						"type": "string",
						"description": "User name"
					},
					"client": {
						"type": "string",
						"description": "User client"
					},
					"jwt": {
						"type": "boolean",
						"description": "Generate JSON Web Token"
					}
				},
				"required": [
					"password",
					"username",
					"client"
				]
			},
			"UserRoles": {
				"type": "object",
				"properties": {
					"admin": {
						"type": "boolean",
						"description": "User is Administrator"
					},
					"stream": {
						"type": "boolean",
						"description": "User has API Access"
					},
					"upload": {
						"type": "boolean",
						"description": "User can upload files"
					},
					"podcast": {
						"type": "boolean",
						"description": "User can manage podcasts"
					}
				},
				"required": [
					"admin",
					"stream",
					"upload",
					"podcast"
				]
			},
			"SessionUser": {
				"type": "object",
				"properties": {
					"id": {
						"$ref": "#/components/schemas/ID"
					},
					"name": {
						"type": "string",
						"description": "User Name"
					},
					"roles": {
						"$ref": "#/components/schemas/UserRoles"
					}
				},
				"required": [
					"id",
					"name",
					"roles"
				]
			},
			"Session": {
				"type": "object",
				"properties": {
					"version": {
						"type": "string",
						"description": "Api Version"
					},
					"allowedCookieDomains": {
						"type": "array",
						"items": {
							"type": "string",
							"description": "Allowed Cookie Domains for CORS"
						}
					},
					"jwt": {
						"type": "string",
						"description": "JSON Web Token"
					},
					"user": {
						"$ref": "#/components/schemas/SessionUser"
					}
				},
				"required": [
					"version",
					"allowedCookieDomains"
				]
			},
			"AutoCompleteEntry": {
				"type": "object",
				"properties": {
					"id": {
						"$ref": "#/components/schemas/ID"
					},
					"name": {
						"type": "string",
						"description": "Name"
					}
				},
				"required": [
					"id",
					"name"
				]
			},
			"AutoComplete": {
				"type": "object",
				"properties": {
					"tracks": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/AutoCompleteEntry"
						}
					},
					"artists": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/AutoCompleteEntry"
						}
					},
					"albums": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/AutoCompleteEntry"
						}
					},
					"folders": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/AutoCompleteEntry"
						}
					},
					"playlists": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/AutoCompleteEntry"
						}
					},
					"podcasts": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/AutoCompleteEntry"
						}
					},
					"episodes": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/AutoCompleteEntry"
						}
					},
					"series": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/AutoCompleteEntry"
						}
					}
				}
			},
			"PodcastStatus": {
				"type": "string",
				"enum": [
					"new",
					"downloading",
					"completed",
					"error",
					"deleted"
				]
			},
			"EpisodeChapter": {
				"type": "object",
				"properties": {
					"start": {
						"type": "integer",
						"minimum": 0,
						"description": "Chapter Start Time"
					},
					"title": {
						"type": "string",
						"description": "Chapter Title"
					}
				},
				"required": [
					"start",
					"title"
				]
			},
			"EpisodeBase": {
				"allOf": [
					{
						"$ref": "#/components/schemas/MediaBase"
					},
					{
						"properties": {
							"podcastID": {
								"$ref": "#/components/schemas/ID"
							},
							"podcastName": {
								"type": "string",
								"description": "Podcast Name"
							},
							"status": {
								"$ref": "#/components/schemas/PodcastStatus"
							},
							"date": {
								"type": "integer",
								"minimum": 0,
								"description": "Published Timestamp"
							},
							"summary": {
								"type": "string",
								"description": "Episode Summary"
							},
							"guid": {
								"type": "string",
								"description": "Episode GUID"
							},
							"author": {
								"type": "string",
								"description": "Episode Author"
							},
							"link": {
								"type": "string",
								"description": "Episode Link"
							},
							"url": {
								"type": "string",
								"description": "Episode File Link"
							},
							"error": {
								"type": "string",
								"description": "Episode Download Error (if any)"
							},
							"chapters": {
								"type": "array",
								"items": {
									"$ref": "#/components/schemas/EpisodeChapter"
								}
							}
						},
						"required": [
							"podcastID",
							"podcastName",
							"status",
							"date"
						]
					}
				]
			},
			"Bookmark": {
				"allOf": [
					{
						"$ref": "#/components/schemas/BookmarkBase"
					},
					{
						"properties": {
							"track": {
								"$ref": "#/components/schemas/TrackBase"
							},
							"episode": {
								"$ref": "#/components/schemas/EpisodeBase"
							}
						}
					}
				]
			},
			"BookmarkBase": {
				"type": "object",
				"properties": {
					"id": {
						"$ref": "#/components/schemas/ID"
					},
					"trackID": {
						"$ref": "#/components/schemas/ID"
					},
					"episodeID": {
						"$ref": "#/components/schemas/ID"
					},
					"position": {
						"$ref": "#/components/schemas/ID"
					},
					"comment": {
						"type": "string",
						"description": "Comment"
					},
					"created": {
						"type": "integer",
						"minimum": 0,
						"description": "Created Timestamp"
					},
					"changed": {
						"type": "integer",
						"minimum": 0,
						"description": "Changed Timestamp"
					}
				},
				"required": [
					"id",
					"trackID",
					"episodeID",
					"position",
					"comment",
					"created",
					"changed"
				]
			},
			"BookmarkOrderFields": {
				"type": "string",
				"enum": [
					"default",
					"created",
					"updated",
					"media",
					"position"
				]
			},
			"BookmarkPage": {
				"allOf": [
					{
						"$ref": "#/components/schemas/Page"
					},
					{
						"properties": {
							"items": {
								"type": "array",
								"items": {
									"$ref": "#/components/schemas/Bookmark"
								}
							}
						},
						"required": [
							"items"
						]
					}
				]
			},
			"BookmarkCreateArgs": {
				"type": "object",
				"properties": {
					"mediaID": {
						"$ref": "#/components/schemas/ID"
					},
					"position": {
						"type": "integer",
						"minimum": 0,
						"description": "the position of the bookmark (in ms)"
					},
					"comment": {
						"type": "string",
						"description": "a comment"
					}
				},
				"required": [
					"mediaID",
					"position",
					"comment"
				]
			},
			"Chat": {
				"type": "object",
				"properties": {
					"userName": {
						"type": "string",
						"description": "User Name"
					},
					"userID": {
						"$ref": "#/components/schemas/ID"
					},
					"created": {
						"type": "integer",
						"minimum": 0,
						"description": "Created Timestamp"
					},
					"message": {
						"type": "string",
						"description": "Chat Message"
					}
				},
				"required": [
					"userName",
					"userID",
					"created",
					"message"
				]
			},
			"ChatCreateArgs": {
				"type": "object",
				"properties": {
					"message": {
						"type": "string",
						"description": "Chat message"
					}
				},
				"required": [
					"message"
				]
			},
			"ChatRemoveArgs": {
				"type": "object",
				"properties": {
					"time": {
						"type": "integer",
						"description": "Chat time"
					}
				},
				"required": [
					"time"
				]
			},
			"DownloadFormatType": {
				"type": "string",
				"enum": [
					"zip",
					"tar"
				]
			},
			"Episode": {
				"allOf": [
					{
						"$ref": "#/components/schemas/EpisodeBase"
					},
					{
						"properties": {
							"podcast": {
								"$ref": "#/components/schemas/ID"
							}
						}
					}
				]
			},
			"EpisodeOrderFields": {
				"type": "string",
				"enum": [
					"default",
					"created",
					"updated",
					"name",
					"status",
					"date"
				]
			},
			"EpisodePage": {
				"allOf": [
					{
						"$ref": "#/components/schemas/Page"
					},
					{
						"properties": {
							"items": {
								"type": "array",
								"items": {
									"$ref": "#/components/schemas/Episode"
								}
							}
						},
						"required": [
							"items"
						]
					}
				]
			},
			"EpisodeUpdateStatus": {
				"type": "object",
				"properties": {
					"status": {
						"$ref": "#/components/schemas/PodcastStatus"
					},
					"error": {
						"type": "string",
						"description": "Episode Download Error (if any)"
					}
				},
				"required": [
					"status"
				]
			},
			"Folder": {
				"allOf": [
					{
						"$ref": "#/components/schemas/FolderBase"
					},
					{
						"properties": {
							"tracks": {
								"type": "array",
								"items": {
									"$ref": "#/components/schemas/TrackBase"
								}
							},
							"folders": {
								"type": "array",
								"items": {
									"$ref": "#/components/schemas/FolderBase"
								}
							},
							"artworks": {
								"type": "array",
								"items": {
									"$ref": "#/components/schemas/Artwork"
								}
							},
							"similar": {
								"type": "array",
								"items": {
									"$ref": "#/components/schemas/FolderBase"
								}
							}
						}
					}
				]
			},
			"FolderIndexEntry": {
				"type": "object",
				"properties": {
					"id": {
						"$ref": "#/components/schemas/ID"
					},
					"name": {
						"type": "string",
						"description": "Name"
					},
					"trackCount": {
						"type": "integer",
						"minimum": 0,
						"description": "Track Count"
					}
				},
				"required": [
					"id",
					"name",
					"trackCount"
				]
			},
			"FolderIndexGroup": {
				"type": "object",
				"properties": {
					"name": {
						"type": "string",
						"description": "Folder Group Name"
					},
					"items": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/FolderIndexEntry"
						}
					}
				},
				"required": [
					"name",
					"items"
				]
			},
			"FolderIndex": {
				"type": "object",
				"properties": {
					"lastModified": {
						"type": "integer",
						"description": "Last Change Timestamp"
					},
					"groups": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/FolderIndexGroup"
						}
					}
				},
				"required": [
					"lastModified",
					"groups"
				]
			},
			"FolderOrderFields": {
				"type": "string",
				"enum": [
					"default",
					"created",
					"updated",
					"level",
					"name",
					"title",
					"year"
				]
			},
			"FolderPage": {
				"allOf": [
					{
						"$ref": "#/components/schemas/Page"
					},
					{
						"properties": {
							"items": {
								"type": "array",
								"items": {
									"$ref": "#/components/schemas/Folder"
								}
							}
						},
						"required": [
							"items"
						]
					}
				]
			},
			"FolderHealthID": {
				"type": "string",
				"enum": [
					"folder.album.tags.exists",
					"folder.album.mbid.exists",
					"folder.album.tracks.complete",
					"folder.album.name.conform",
					"folder.album.image.exists",
					"folder.album.image.valid",
					"folder.album.image.quality",
					"folder.artist.name.conform",
					"folder.artist.image.exists",
					"folder.artist.image.valid"
				]
			},
			"FolderHealthHint": {
				"allOf": [
					{
						"$ref": "#/components/schemas/HealthHint"
					},
					{
						"properties": {
							"id": {
								"$ref": "#/components/schemas/FolderHealthID"
							}
						},
						"required": [
							"id"
						]
					}
				]
			},
			"HealthHintDetail": {
				"type": "object",
				"properties": {
					"reason": {
						"type": "string",
						"description": "Hint Description"
					},
					"expected": {
						"type": "string",
						"description": "Expected Value"
					},
					"actual": {
						"type": "string",
						"description": "Actual Value"
					}
				},
				"required": [
					"reason"
				]
			},
			"HealthHint": {
				"type": "object",
				"properties": {
					"name": {
						"type": "string",
						"description": "Health Hint Name"
					},
					"details": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/HealthHintDetail"
						}
					}
				},
				"required": [
					"name"
				]
			},
			"FolderHealth": {
				"type": "object",
				"properties": {
					"folder": {
						"$ref": "#/components/schemas/Folder"
					},
					"health": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/FolderHealthHint"
						}
					}
				},
				"required": [
					"folder",
					"health"
				]
			},
			"FolderCreateArgs": {
				"type": "object",
				"properties": {
					"id": {
						"$ref": "#/components/schemas/ID"
					},
					"name": {
						"type": "string",
						"description": "New Folder Name"
					}
				},
				"required": [
					"id",
					"name"
				]
			},
			"FolderRenameArgs": {
				"type": "object",
				"properties": {
					"id": {
						"$ref": "#/components/schemas/ID"
					},
					"name": {
						"type": "string",
						"description": "New Folder Name"
					}
				},
				"required": [
					"id",
					"name"
				]
			},
			"FolderMoveArgs": {
				"type": "object",
				"properties": {
					"ids": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/ID"
						}
					},
					"newParentID": {
						"$ref": "#/components/schemas/ID"
					}
				},
				"required": [
					"ids",
					"newParentID"
				]
			},
			"Genre": {
				"type": "object",
				"properties": {
					"name": {
						"type": "string",
						"description": "Name"
					},
					"albumCount": {
						"type": "integer",
						"minimum": 0,
						"description": "Album Count"
					},
					"trackCount": {
						"type": "integer",
						"minimum": 0,
						"description": "Track Count"
					},
					"artistCount": {
						"type": "integer",
						"minimum": 0,
						"description": "Artist Count"
					},
					"seriesCount": {
						"type": "integer",
						"minimum": 0,
						"description": "Series Count"
					},
					"folderCount": {
						"type": "integer",
						"minimum": 0,
						"description": "Folder Count"
					}
				},
				"required": [
					"name",
					"albumCount",
					"trackCount",
					"artistCount",
					"seriesCount",
					"folderCount"
				]
			},
			"GenrePage": {
				"allOf": [
					{
						"$ref": "#/components/schemas/Page"
					},
					{
						"properties": {
							"items": {
								"type": "array",
								"items": {
									"$ref": "#/components/schemas/Genre"
								}
							}
						},
						"required": [
							"items"
						]
					}
				]
			},
			"GenreIndexGroup": {
				"type": "object",
				"properties": {
					"name": {
						"type": "string",
						"description": "Genre Group Name"
					},
					"items": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/Genre"
						}
					}
				},
				"required": [
					"name",
					"items"
				]
			},
			"GenreIndex": {
				"type": "object",
				"properties": {
					"lastModified": {
						"type": "integer",
						"description": "Last Change Timestamp"
					},
					"groups": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/GenreIndexGroup"
						}
					}
				},
				"required": [
					"lastModified",
					"groups"
				]
			},
			"ImageFormatType": {
				"type": "string",
				"enum": [
					"png",
					"jpeg",
					"tiff"
				]
			},
			"LastFMLookupType": {
				"type": "string",
				"enum": [
					"album",
					"album-toptracks",
					"artist",
					"track",
					"track-similar",
					"artist-toptracks"
				]
			},
			"MetaDataResult": {
				"type": "object",
				"properties": {
					"data": {
						"$ref": "#/components/schemas/JSON"
					}
				}
			},
			"MusicBrainzLookupType": {
				"type": "string",
				"enum": [
					"area",
					"artist",
					"collection",
					"event",
					"instrument",
					"label",
					"place",
					"recording",
					"release",
					"release-group",
					"series",
					"work",
					"url"
				]
			},
			"MusicBrainzSearchType": {
				"type": "string",
				"enum": [
					"artist",
					"label",
					"recording",
					"release",
					"release-group",
					"work",
					"area"
				]
			},
			"CoverArtArchiveLookupType": {
				"type": "string",
				"enum": [
					"release",
					"release-group"
				]
			},
			"NowPlaying": {
				"type": "object",
				"properties": {
					"userName": {
						"type": "string",
						"description": "User Name"
					},
					"userID": {
						"$ref": "#/components/schemas/ID"
					},
					"minutesAgo": {
						"type": "integer",
						"description": "Minutes ago"
					},
					"track": {
						"$ref": "#/components/schemas/TrackBase"
					},
					"trackID": {
						"type": "string",
						"description": "The played track id"
					},
					"episode": {
						"$ref": "#/components/schemas/EpisodeBase"
					},
					"episodeID": {
						"type": "string",
						"description": "The played episode id"
					}
				},
				"required": [
					"userName",
					"userID",
					"minutesAgo"
				]
			},
			"Ping": {
				"type": "object",
				"properties": {
					"version": {
						"type": "string",
						"description": "Jam Api Version"
					}
				},
				"required": [
					"version"
				]
			},
			"Playlist": {
				"allOf": [
					{
						"$ref": "#/components/schemas/Base"
					},
					{
						"properties": {
							"userID": {
								"$ref": "#/components/schemas/ID"
							},
							"userName": {
								"$ref": "#/components/schemas/ID"
							},
							"isPublic": {
								"type": "boolean",
								"description": "Playlist is public?"
							},
							"comment": {
								"type": "string",
								"description": "Comment"
							},
							"created": {
								"type": "integer",
								"minimum": 0,
								"description": "Playlist Created Timestamp"
							},
							"changed": {
								"type": "integer",
								"minimum": 0,
								"description": "Playlist Changed Timestamp"
							},
							"duration": {
								"type": "integer",
								"minimum": 0,
								"description": "Playlist duration"
							},
							"entriesCount": {
								"type": "integer",
								"minimum": 0,
								"description": "Number of Entries"
							},
							"entriesIDs": {
								"type": "array",
								"items": {
									"$ref": "#/components/schemas/ID"
								}
							},
							"entries": {
								"type": "array",
								"items": {
									"$ref": "#/components/schemas/MediaBase"
								}
							}
						},
						"required": [
							"userID",
							"userName",
							"isPublic",
							"created",
							"changed",
							"duration",
							"entriesCount",
							"entriesIDs"
						]
					}
				]
			},
			"PlaylistIndexEntry": {
				"type": "object",
				"properties": {
					"id": {
						"$ref": "#/components/schemas/ID"
					},
					"name": {
						"type": "string",
						"description": "Name"
					},
					"entryCount": {
						"type": "integer",
						"minimum": 0,
						"description": "Entry Count"
					}
				},
				"required": [
					"id",
					"name",
					"entryCount"
				]
			},
			"PlaylistIndexGroup": {
				"type": "object",
				"properties": {
					"name": {
						"type": "string",
						"description": "Playlist Group Name"
					},
					"items": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/PlaylistIndexEntry"
						}
					}
				},
				"required": [
					"name",
					"items"
				]
			},
			"PlaylistIndex": {
				"type": "object",
				"properties": {
					"lastModified": {
						"type": "integer",
						"description": "Last Change Timestamp"
					},
					"groups": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/PlaylistIndexGroup"
						}
					}
				},
				"required": [
					"lastModified",
					"groups"
				]
			},
			"PlaylistPage": {
				"allOf": [
					{
						"$ref": "#/components/schemas/Page"
					},
					{
						"properties": {
							"items": {
								"type": "array",
								"items": {
									"$ref": "#/components/schemas/Playlist"
								}
							}
						},
						"required": [
							"items"
						]
					}
				]
			},
			"PlaylistEntryOrderFields": {
				"type": "string",
				"enum": [
					"default",
					"created",
					"updated",
					"position"
				]
			},
			"PlaylistEntryPage": {
				"allOf": [
					{
						"$ref": "#/components/schemas/Page"
					},
					{
						"properties": {
							"items": {
								"type": "array",
								"items": {
									"$ref": "#/components/schemas/MediaBase"
								}
							}
						},
						"required": [
							"items"
						]
					}
				]
			},
			"PlaylistMutateArgs": {
				"type": "object",
				"properties": {
					"name": {
						"type": "string",
						"description": "Playlist Name"
					},
					"comment": {
						"type": "string",
						"description": "Comment"
					},
					"isPublic": {
						"type": "boolean",
						"description": "Playlist is public?"
					},
					"mediaIDs": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/ID"
						}
					}
				}
			},
			"PlayQueue": {
				"type": "object",
				"properties": {
					"userName": {
						"type": "string",
						"description": "User Name"
					},
					"userID": {
						"$ref": "#/components/schemas/ID"
					},
					"entriesCount": {
						"type": "integer",
						"minimum": 0,
						"description": "Number of Entries"
					},
					"entriesIDs": {
						"type": "array",
						"items": {
							"type": "string",
							"description": "List of Media IDs"
						}
					},
					"entries": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/MediaBase"
						}
					},
					"currentIndex": {
						"type": "integer",
						"minimum": 0,
						"description": "Current Entry Index in PlayQueue"
					},
					"mediaPosition": {
						"type": "integer",
						"minimum": 0,
						"description": "Position in Current Entry"
					},
					"created": {
						"type": "integer",
						"minimum": 0,
						"description": "Created Timestamp"
					},
					"changed": {
						"type": "integer",
						"minimum": 0,
						"description": "Changed Timestamp"
					},
					"changedBy": {
						"type": "string",
						"description": "Last Changed by Client"
					}
				},
				"required": [
					"userName",
					"userID",
					"entriesCount",
					"created",
					"changed",
					"changedBy"
				]
			},
			"PlayQueueSetArgs": {
				"type": "object",
				"properties": {
					"mediaIDs": {
						"type": "array",
						"items": {
							"type": "string",
							"description": "Media Ids of the play queue"
						}
					},
					"currentID": {
						"type": "string",
						"description": "Current Media Id"
					},
					"position": {
						"type": "integer",
						"minimum": 0,
						"description": "Position in Current Media"
					}
				}
			},
			"Podcast": {
				"allOf": [
					{
						"$ref": "#/components/schemas/PodcastBase"
					},
					{
						"properties": {
							"episodes": {
								"type": "array",
								"items": {
									"$ref": "#/components/schemas/EpisodeBase"
								}
							}
						}
					}
				]
			},
			"PodcastBase": {
				"allOf": [
					{
						"$ref": "#/components/schemas/Base"
					},
					{
						"properties": {
							"url": {
								"type": "string",
								"description": "Podcast Feed URL"
							},
							"status": {
								"$ref": "#/components/schemas/PodcastStatus"
							},
							"lastCheck": {
								"type": "integer",
								"description": "Last Check Timestamp"
							},
							"error": {
								"type": "string",
								"description": "Podcast Download Error (if any)"
							},
							"description": {
								"type": "string",
								"description": "Podcast Summary"
							},
							"episodeIDs": {
								"type": "array",
								"items": {
									"$ref": "#/components/schemas/ID"
								}
							},
							"episodeCount": {
								"type": "integer",
								"minimum": 0,
								"description": "Number of Episode"
							}
						},
						"required": [
							"url",
							"status"
						]
					}
				]
			},
			"PodcastIndexEntry": {
				"type": "object",
				"properties": {
					"id": {
						"$ref": "#/components/schemas/ID"
					},
					"name": {
						"type": "string",
						"description": "Name"
					},
					"episodeCount": {
						"type": "integer",
						"minimum": 0,
						"description": "Episode Count"
					}
				},
				"required": [
					"id",
					"name",
					"episodeCount"
				]
			},
			"PodcastIndexGroup": {
				"type": "object",
				"properties": {
					"name": {
						"type": "string",
						"description": "Podcast Group Name"
					},
					"items": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/PodcastIndexEntry"
						}
					}
				},
				"required": [
					"name",
					"items"
				]
			},
			"PodcastIndex": {
				"type": "object",
				"properties": {
					"lastModified": {
						"type": "integer",
						"description": "Last Change Timestamp"
					},
					"groups": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/PodcastIndexGroup"
						}
					}
				},
				"required": [
					"lastModified",
					"groups"
				]
			},
			"PodcastOrderFields": {
				"type": "string",
				"enum": [
					"default",
					"created",
					"updated",
					"name",
					"lastCheck"
				]
			},
			"PodcastPage": {
				"allOf": [
					{
						"$ref": "#/components/schemas/Page"
					},
					{
						"properties": {
							"items": {
								"type": "array",
								"items": {
									"$ref": "#/components/schemas/Podcast"
								}
							}
						},
						"required": [
							"items"
						]
					}
				]
			},
			"PodcastUpdateStatus": {
				"type": "object",
				"properties": {
					"status": {
						"$ref": "#/components/schemas/PodcastStatus"
					},
					"error": {
						"type": "string",
						"description": "Feed Download Error (if any)"
					},
					"lastCheck": {
						"type": "integer",
						"description": "Last Check Timestamp"
					}
				},
				"required": [
					"status"
				]
			},
			"PodcastCreateArgs": {
				"type": "object",
				"properties": {
					"url": {
						"type": "string",
						"description": "Podcast Feed URL"
					}
				},
				"required": [
					"url"
				]
			},
			"PodcastRefreshArgs": {
				"type": "object",
				"properties": {
					"id": {
						"$ref": "#/components/schemas/ID"
					}
				}
			},
			"Radio": {
				"allOf": [
					{
						"$ref": "#/components/schemas/Base"
					},
					{
						"properties": {
							"url": {
								"type": "string",
								"description": "URL"
							},
							"homepage": {
								"type": "string",
								"description": "Homepage"
							},
							"changed": {
								"type": "integer",
								"description": "Changed Timestamp"
							},
							"disabled": {
								"type": "boolean",
								"description": "Disabled"
							}
						},
						"required": [
							"url",
							"homepage",
							"changed"
						]
					}
				]
			},
			"RadioIndexEntry": {
				"type": "object",
				"properties": {
					"id": {
						"$ref": "#/components/schemas/ID"
					},
					"name": {
						"type": "string",
						"description": "Name"
					},
					"url": {
						"type": "string",
						"description": "URL"
					}
				},
				"required": [
					"id",
					"name",
					"url"
				]
			},
			"RadioIndexGroup": {
				"type": "object",
				"properties": {
					"name": {
						"type": "string",
						"description": "Radio Group Name"
					},
					"items": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/RadioIndexEntry"
						}
					}
				},
				"required": [
					"name",
					"items"
				]
			},
			"RadioIndex": {
				"type": "object",
				"properties": {
					"lastModified": {
						"type": "integer",
						"description": "Last Change Timestamp"
					},
					"groups": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/RadioIndexGroup"
						}
					}
				},
				"required": [
					"lastModified",
					"groups"
				]
			},
			"RadioPage": {
				"allOf": [
					{
						"$ref": "#/components/schemas/Page"
					},
					{
						"properties": {
							"items": {
								"type": "array",
								"items": {
									"$ref": "#/components/schemas/Radio"
								}
							}
						},
						"required": [
							"items"
						]
					}
				]
			},
			"RadioMutateArgs": {
				"type": "object",
				"properties": {
					"name": {
						"type": "string",
						"description": "Radio Name"
					},
					"url": {
						"type": "string",
						"description": "URL"
					},
					"homepage": {
						"type": "string",
						"description": "Homepage"
					},
					"disabled": {
						"type": "boolean",
						"description": "Disabled"
					}
				},
				"required": [
					"name",
					"url"
				]
			},
			"RootUpdateStatus": {
				"type": "object",
				"properties": {
					"lastScan": {
						"type": "integer",
						"description": "Last Scan Timestamp"
					},
					"error": {
						"type": "string",
						"description": "Last Error (if any)"
					},
					"scanning": {
						"type": "boolean",
						"description": "Is currently scanning?"
					}
				},
				"required": [
					"lastScan"
				]
			},
			"RootScanStrategy": {
				"type": "string",
				"enum": [
					"auto",
					"artistalbum",
					"compilation",
					"audiobook"
				]
			},
			"Root": {
				"allOf": [
					{
						"$ref": "#/components/schemas/Base"
					},
					{
						"properties": {
							"path": {
								"type": "string",
								"description": "Root Path"
							},
							"status": {
								"$ref": "#/components/schemas/RootUpdateStatus"
							},
							"strategy": {
								"$ref": "#/components/schemas/RootScanStrategy"
							}
						},
						"required": [
							"path",
							"status",
							"strategy"
						]
					}
				]
			},
			"RootPage": {
				"allOf": [
					{
						"$ref": "#/components/schemas/Page"
					},
					{
						"properties": {
							"items": {
								"type": "array",
								"items": {
									"$ref": "#/components/schemas/Root"
								}
							}
						},
						"required": [
							"items"
						]
					}
				]
			},
			"RootMutateArgs": {
				"type": "object",
				"properties": {
					"name": {
						"type": "string",
						"description": "Root Name"
					},
					"path": {
						"type": "string",
						"description": "Absolute Path for Root "
					},
					"strategy": {
						"$ref": "#/components/schemas/RootScanStrategy"
					}
				},
				"required": [
					"name",
					"path",
					"strategy"
				]
			},
			"RootRefreshArgs": {
				"type": "object",
				"properties": {
					"id": {
						"$ref": "#/components/schemas/ID"
					}
				}
			},
			"SeriesIndexEntry": {
				"type": "object",
				"properties": {
					"id": {
						"$ref": "#/components/schemas/ID"
					},
					"name": {
						"type": "string",
						"description": "Name"
					},
					"albumCount": {
						"type": "integer",
						"minimum": 0,
						"description": "Album Count"
					},
					"trackCount": {
						"type": "integer",
						"minimum": 0,
						"description": "Track Count"
					}
				},
				"required": [
					"id",
					"name",
					"albumCount",
					"trackCount"
				]
			},
			"SeriesIndexGroup": {
				"type": "object",
				"properties": {
					"name": {
						"type": "string",
						"description": "Series Group Name"
					},
					"items": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/SeriesIndexEntry"
						}
					}
				},
				"required": [
					"name",
					"items"
				]
			},
			"SeriesIndex": {
				"type": "object",
				"properties": {
					"lastModified": {
						"type": "integer",
						"description": "Last Change Timestamp"
					},
					"groups": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/SeriesIndexGroup"
						}
					}
				},
				"required": [
					"lastModified",
					"groups"
				]
			},
			"SessionMode": {
				"type": "string",
				"enum": [
					"browser",
					"jwt"
				]
			},
			"UserSession": {
				"type": "object",
				"properties": {
					"id": {
						"$ref": "#/components/schemas/ID"
					},
					"client": {
						"type": "string",
						"description": "Session Client"
					},
					"expires": {
						"type": "integer",
						"description": "Session Expiration"
					},
					"mode": {
						"$ref": "#/components/schemas/SessionMode"
					},
					"platform": {
						"type": "string",
						"description": "Session Platform"
					},
					"os": {
						"type": "string",
						"description": "Session OS"
					},
					"agent": {
						"type": "string",
						"description": "Session User Agent"
					}
				},
				"required": [
					"id",
					"client",
					"mode",
					"agent"
				]
			},
			"StateInfo": {
				"type": "object",
				"properties": {
					"id": {
						"$ref": "#/components/schemas/ID"
					},
					"state": {
						"$ref": "#/components/schemas/State"
					}
				},
				"required": [
					"id",
					"state"
				]
			},
			"States": {
				"type": "object",
				"properties": {
					"states": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/StateInfo"
						}
					}
				},
				"required": [
					"states"
				]
			},
			"FavArgs": {
				"type": "object",
				"properties": {
					"id": {
						"$ref": "#/components/schemas/ID"
					},
					"remove": {
						"type": "boolean",
						"default": false,
						"description": "add or remove the item fav"
					}
				},
				"required": [
					"id",
					"remove"
				]
			},
			"RateArgs": {
				"type": "object",
				"properties": {
					"id": {
						"$ref": "#/components/schemas/ID"
					},
					"rating": {
						"type": "integer",
						"minimum": 0,
						"maximum": 5,
						"description": "Rating"
					}
				},
				"required": [
					"id",
					"rating"
				]
			},
			"StatsAlbumTypes": {
				"type": "object",
				"properties": {
					"album": {
						"type": "integer",
						"minimum": 0,
						"description": "Number of Type Album"
					},
					"compilation": {
						"type": "integer",
						"minimum": 0,
						"description": "Number of Various Artists Type Compilation"
					},
					"artistCompilation": {
						"type": "integer",
						"minimum": 0,
						"description": "Number of Single Artists Type Compilation"
					},
					"live": {
						"type": "integer",
						"minimum": 0,
						"description": "Number of Type Live"
					},
					"audiobook": {
						"type": "integer",
						"minimum": 0,
						"description": "Number of Type Audiobooks"
					},
					"soundtrack": {
						"type": "integer",
						"minimum": 0,
						"description": "Number of Type Soundtracks"
					},
					"series": {
						"type": "integer",
						"minimum": 0,
						"description": "Number of Type Series"
					},
					"bootleg": {
						"type": "integer",
						"minimum": 0,
						"description": "Number of Type Bootlegs"
					},
					"ep": {
						"type": "integer",
						"minimum": 0,
						"description": "Number of Type EPs"
					},
					"single": {
						"type": "integer",
						"minimum": 0,
						"description": "Number of Type Singles"
					},
					"unknown": {
						"type": "integer",
						"minimum": 0,
						"description": "Number of Type Unknown"
					}
				},
				"required": [
					"album",
					"compilation",
					"artistCompilation",
					"live",
					"audiobook",
					"soundtrack",
					"series",
					"bootleg",
					"ep",
					"single",
					"unknown"
				]
			},
			"Stats": {
				"type": "object",
				"properties": {
					"rootID": {
						"$ref": "#/components/schemas/ID"
					},
					"track": {
						"type": "integer",
						"minimum": 0,
						"description": "Number of Tracks"
					},
					"folder": {
						"type": "integer",
						"minimum": 0,
						"description": "Number of Folders"
					},
					"series": {
						"type": "integer",
						"minimum": 0,
						"description": "Number of Series"
					},
					"artist": {
						"type": "integer",
						"minimum": 0,
						"description": "Number of Artists"
					},
					"artistTypes": {
						"$ref": "#/components/schemas/StatsAlbumTypes"
					},
					"album": {
						"type": "integer",
						"minimum": 0,
						"description": "Number of Albums"
					},
					"albumTypes": {
						"$ref": "#/components/schemas/StatsAlbumTypes"
					}
				},
				"required": [
					"track",
					"folder",
					"series",
					"artist",
					"artistTypes",
					"album",
					"albumTypes"
				]
			},
			"UserDetailStats": {
				"type": "object",
				"properties": {
					"track": {
						"type": "integer",
						"minimum": 0,
						"description": "Number of Tracks"
					},
					"folder": {
						"type": "integer",
						"minimum": 0,
						"description": "Number of Folders"
					},
					"series": {
						"type": "integer",
						"minimum": 0,
						"description": "Number of Series"
					},
					"artist": {
						"type": "integer",
						"minimum": 0,
						"description": "Number of Artist"
					},
					"artistTypes": {
						"$ref": "#/components/schemas/StatsAlbumTypes"
					},
					"album": {
						"type": "integer",
						"minimum": 0,
						"description": "Number of Albums"
					},
					"albumTypes": {
						"$ref": "#/components/schemas/StatsAlbumTypes"
					}
				},
				"required": [
					"track",
					"folder",
					"series",
					"artist",
					"artistTypes",
					"album",
					"albumTypes"
				]
			},
			"UserStats": {
				"type": "object",
				"properties": {
					"playlist": {
						"type": "integer",
						"minimum": 0,
						"description": "Number of Playlists"
					},
					"bookmark": {
						"type": "integer",
						"minimum": 0,
						"description": "Number of Bookmarks"
					},
					"favorite": {
						"$ref": "#/components/schemas/UserDetailStats"
					},
					"played": {
						"$ref": "#/components/schemas/UserDetailStats"
					}
				},
				"required": [
					"playlist",
					"bookmark",
					"favorite",
					"played"
				]
			},
			"AudioFormatType": {
				"type": "string",
				"enum": [
					"mp3",
					"m4a",
					"mp4",
					"ogg",
					"oga",
					"flv",
					"flac",
					"webma",
					"wav"
				]
			},
			"TrackLyrics": {
				"type": "object",
				"properties": {
					"lyrics": {
						"type": "string",
						"description": "Lyrics"
					},
					"source": {
						"type": "string",
						"description": "Audio Tag or External Service"
					}
				}
			},
			"MediaIDTagRaw": {
				"allOf": [
					{
						"$ref": "#/components/schemas/MediaTagRaw"
					},
					{
						"properties": {
							"id": {
								"$ref": "#/components/schemas/ID"
							}
						},
						"required": [
							"id"
						]
					}
				]
			},
			"TrackHealthID": {
				"type": "string",
				"enum": [
					"track.tag.values.exists",
					"track.mp3.id3v2.exists",
					"track.mp3.id3v2.valid",
					"track.mp3.id3v2.garbage.frames",
					"track.mp3.vbr.header.exists",
					"track.mp3.vbr.header.valid",
					"track.mp3.media.valid",
					"track.flac.media.valid",
					"track.mp3.id3v2.no.id3v1",
					"track.mp3.garbage.data"
				]
			},
			"TrackHealthHint": {
				"allOf": [
					{
						"$ref": "#/components/schemas/HealthHint"
					},
					{
						"properties": {
							"id": {
								"$ref": "#/components/schemas/TrackHealthID"
							}
						},
						"required": [
							"id"
						]
					}
				]
			},
			"TrackHealth": {
				"type": "object",
				"properties": {
					"track": {
						"$ref": "#/components/schemas/TrackBase"
					},
					"health": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/TrackHealthHint"
						}
					}
				},
				"required": [
					"track",
					"health"
				]
			},
			"TrackRenameArgs": {
				"type": "object",
				"properties": {
					"id": {
						"$ref": "#/components/schemas/ID"
					},
					"name": {
						"$ref": "#/components/schemas/ID"
					}
				},
				"required": [
					"id",
					"name"
				]
			},
			"TrackMoveArgs": {
				"type": "object",
				"properties": {
					"ids": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/ID"
						}
					},
					"folderID": {
						"$ref": "#/components/schemas/ID"
					}
				},
				"required": [
					"ids",
					"folderID"
				]
			},
			"TrackFixArgs": {
				"type": "object",
				"properties": {
					"id": {
						"$ref": "#/components/schemas/ID"
					},
					"fixID": {
						"$ref": "#/components/schemas/TrackHealthID"
					}
				},
				"required": [
					"id",
					"fixID"
				]
			},
			"MediaTagRawUpdateArgs": {
				"type": "object",
				"properties": {
					"version": {
						"type": "integer",
						"description": "Tag Version"
					},
					"frames": {
						"$ref": "#/components/schemas/JSON"
					}
				},
				"required": [
					"version",
					"frames"
				]
			},
			"RawTagUpdateArgs": {
				"type": "object",
				"properties": {
					"id": {
						"$ref": "#/components/schemas/ID"
					},
					"tag": {
						"$ref": "#/components/schemas/MediaTagRawUpdateArgs"
					}
				},
				"required": [
					"id",
					"tag"
				]
			},
			"User": {
				"allOf": [
					{
						"$ref": "#/components/schemas/Base"
					},
					{
						"properties": {
							"email": {
								"type": "string",
								"description": "User Email"
							},
							"roles": {
								"$ref": "#/components/schemas/UserRoles"
							}
						},
						"required": [
							"roles"
						]
					}
				]
			},
			"UserRole": {
				"type": "string",
				"enum": [
					"admin",
					"stream",
					"upload",
					"podcast"
				]
			},
			"UserPage": {
				"allOf": [
					{
						"$ref": "#/components/schemas/Page"
					},
					{
						"properties": {
							"items": {
								"type": "array",
								"items": {
									"$ref": "#/components/schemas/User"
								}
							}
						},
						"required": [
							"items"
						]
					}
				]
			},
			"UserMutateArgs": {
				"type": "object",
				"properties": {
					"password": {
						"type": "string",
						"description": "Password of calling admin user is required to create an user. this is NOT the user password!"
					},
					"name": {
						"type": "string",
						"description": "User Name"
					},
					"email": {
						"type": "string",
						"description": "User Email"
					},
					"roleAdmin": {
						"type": "boolean",
						"default": false,
						"description": "User has admin rights?"
					},
					"rolePodcast": {
						"type": "boolean",
						"default": false,
						"description": "User has podcast admin rights?"
					},
					"roleStream": {
						"type": "boolean",
						"default": true,
						"description": "User has api rights?"
					},
					"roleUpload": {
						"type": "boolean",
						"default": false,
						"description": "User has upload rights?"
					}
				},
				"required": [
					"password",
					"name",
					"email",
					"roleAdmin",
					"rolePodcast",
					"roleStream",
					"roleUpload"
				]
			},
			"UserPasswordUpdateArgs": {
				"type": "object",
				"properties": {
					"password": {
						"type": "string",
						"description": "Password of calling user (or admin) is required to change the password"
					},
					"newPassword": {
						"type": "string",
						"description": "New Password"
					}
				},
				"required": [
					"password",
					"newPassword"
				]
			},
			"UserEmailUpdateArgs": {
				"type": "object",
				"properties": {
					"password": {
						"type": "string",
						"description": "Password of calling user (or admin) is required to change the email"
					},
					"email": {
						"type": "string",
						"description": "New email"
					}
				},
				"required": [
					"password",
					"email"
				]
			},
			"UserGenerateImageArgs": {
				"type": "object",
				"properties": {
					"seed": {
						"type": "string",
						"description": "Random Seed String"
					}
				}
			},
			"WaveFormData": {
				"type": "object",
				"properties": {
					"version": {
						"type": "integer",
						"minimum": 1,
						"description": "The version number of the waveform data format"
					},
					"channels": {
						"type": "integer",
						"minimum": 0,
						"description": "The number of waveform channels present (version 2 only)"
					},
					"sample_rate": {
						"type": "integer",
						"minimum": 0,
						"description": "Sample rate of original audio file (Hz)"
					},
					"samples_per_pixel": {
						"type": "integer",
						"minimum": 0,
						"description": "Number of audio samples per waveform minimum/maximum pair"
					},
					"bits": {
						"type": "integer",
						"minimum": 0,
						"description": "Resolution of waveform data. May be either 8 or 16"
					},
					"length": {
						"type": "integer",
						"minimum": 0,
						"description": "Length of waveform data (number of minimum and maximum value pairs per channel)"
					},
					"data": {
						"type": "array",
						"items": {
							"type": "integer",
							"description": "Array of minimum and maximum waveform data points, interleaved. Depending on bits, each value may be in the range -128 to +127 or -32768 to +32727"
						}
					}
				},
				"required": [
					"version",
					"sample_rate",
					"samples_per_pixel",
					"bits",
					"length",
					"data"
				]
			},
			"WaveformFormatType": {
				"type": "string",
				"enum": [
					"svg",
					"json",
					"dat"
				]
			}
		},
		"securitySchemes": {
			"cookieAuth": {
				"type": "apiKey",
				"in": "cookie",
				"name": "jam.sid"
			},
			"bearerAuth": {
				"type": "http",
				"scheme": "bearer",
				"bearerFormat": "JWT"
			}
		}
	},
	"security": []
}